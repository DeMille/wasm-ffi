{"version":3,"sources":["webpack:///webpack/bootstrap bdb05e6f5d6cd5f12677","webpack:///./src/types.js","webpack:///./src/misc.js","webpack:///./src/encoding.js","webpack:///./src/Struct.js","webpack:///./src/demangle.js","webpack:///./src/index.js","webpack:///./src/Wrapper.js","webpack:///./src/rust.js","webpack:///./src/assemblyscript.js"],"names":["CustomType","size","opts","isNaN","width","alignment","read","write","view","value","ArrayBuffer","isView","set","SignedInteger","get","UnsignedInteger","types","void","int8","int16","int32","uint8","uint16","uint32","int64","uint64","float","getFloat32","setFloat32","double","getFloat64","setFloat64","bool","getInt8","setInt8","Pointer","type","parseType","wrapper","_temp","byteOffset","free","ref","deref","pointer","typedef","isPointer","addr","getUint32","data","DataView","buffer","writePointer","setUint32","StringPointer","_tempStr","_tempBuf","_width","encodeString","byteLength","memory","Uint8Array","decodeString","Object","defineProperty","prototype","enumerable","string","readStringView","ArrayType","length","arr","i","subview","push","values","forEach","aliases","u8","u16","u32","u64","i8","i16","i32","i64","f32","f64","char","uchar","schar","short","ushort","int","uint","long","ulong","longlong","ulonglong","size_t","usize","parseTypeString","str","name","toLowerCase","Error","Array","isArray","errMsg","assert","vslice","toUint8Array","isNil","addStringFns","addArrayFns","makeIterable","condition","args","msg","strings","map","JSON","stringify","arg","e","split","part","pop","start","thing","has","obj","prop","hasOwnProperty","call","isFunction","StringLike","getOwnPropertyNames","String","ArrayLike","Symbol","iterator","next","done","encodeUTF16","buf","Uint16Array","charCodeAt","decodeUTF16","len","num","pts","fromCharCode","encodeUTF8","codePoint","leadSurrogate","units","Infinity","bytes","from","decodeUTF8","end","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","MAX","j","slice","encode","TextEncoder","decode","TextDecoder","DATA","for","AbstractStructType","temp","entries","key","internal","freePointers","struct","constructor","fields","field","isStruct","out","proto","replace","StructType","offset","fieldView","Struct","opt","names","Map","packed","demangleStack","symbols","isHash","every","test","replaceAllSymbols","reduce","result","re","demangle","mangled","startsWith","indexOf","sub","endsWith","inner","chars","labels","label","digits","parseInt","join","err","stack","line","_","m1","m2","_encodeUTF8","_decodeUTF8","CString","Wrapper","cwrap","ccall","rust","assemblyscript","numbers","Set","areValid","argTypes","undefined","fs","fetch_polyfill","file","Promise","resolve","reject","eval","readFile","arrayBuffer","ok","fetchFn","fetch","fetchAndInstantiate","url","imports","then","resp","status","wasm","headers","WebAssembly","instantiateStreaming","instantiate","instance","signatures","dialect","allocations","debug","isAssemblyScript","fn","returnType","add","fnName","utils","__encodeString","bind","__decodeString","__readStringView","readString","__readString","writeString","__writeString","writeArray","__writeArray","readStruct","__readStruct","writeStruct","__writeStruct","readPointer","__readPointer","__writePointer","allocate","__free","exports","importArg","applyDefaults","wrap","fnConfig","ffi_args","__out","__in","env","print","log","eprint","error","trace","abort","col","_abort","errCode","_exit","exitCode","_grow","assign","__link","Instance","__wrap","ptr","deallocate","console","optSize","delete","encoded","header","subarray","strlen","__view","__allocate","Type","ptrType","commit","use","RustTuple","tupleTypes","Tuple","RustVector","initialValues","Base","cap","arrayType","Vector","RustSlice","Slice","RustString","_RustString","RustStr","_RustStr","RustOption","isNonNullable","tagSize","discriminant","OptionType","isSome","defaultValue","RustEnum","variants","vtypes","Enum","variant","_set","keys","tag","arms","val","field_1","field_2","Math","max","t","align","tuple","vector","enum","option","some","ctor","none","Str","Option","Some","None","ASArrayBuffer","n","ASArray","AB","_Array","dataview","array"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7DA;;;;AAGA;AACA;IACMA,U;AACJ,sBAAYC,IAAZ,EAA6B;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AAC3B,sBAAO,CAACC,MAAMF,IAAN,CAAR,EAAqB,uCAArB,EAA8DA,IAA9D;;AAEA,SAAKG,KAAL,GAAaH,IAAb;AACA,SAAKI,SAAL,GAAkB,eAAeH,IAAhB,GAAwBA,KAAKG,SAA7B,GAAyCJ,IAA1D;;AAEA,QAAIC,KAAKI,IAAT,EAAe,KAAKA,IAAL,GAAYJ,KAAKI,IAAjB;AACf,QAAIJ,KAAKK,KAAT,EAAgB,KAAKA,KAAL,GAAaL,KAAKK,KAAlB;AACjB;;;;yBAEIC,I,EAAM;AACT,aAAOA,IAAP;AACD;;;0BAEKA,I,EAAMC,K,EAAO;AACjB,wBAAOA,iBAAiBC,WAAjB,IAAgCA,YAAYC,MAAZ,CAAmBF,KAAnB,CAAvC,EACE,oEADF;;AAGA,8BAAaD,IAAb,EAAmBI,GAAnB,CAAuB,wBAAaH,KAAb,CAAvB;AACD;;;;;;IAIGI,a,GACJ,uBAAYT,KAAZ,EAAmB;AAAA;;AACjB,OAAKA,KAAL,GAAaA,KAAb;AACA,OAAKC,SAAL,GAAiBD,KAAjB;;AAEA,MAAMU,iBAAeV,QAAQ,CAA7B;AACA,MAAMQ,iBAAeR,QAAQ,CAA7B;;AAEA,OAAKE,IAAL,GAAY;AAAA,WAAQE,KAAKM,GAAL,EAAU,CAAV,EAAa,IAAb,CAAkB,mBAAlB,CAAR;AAAA,GAAZ;AACA,OAAKP,KAAL,GAAa,UAACC,IAAD,EAAOC,KAAP;AAAA,WAAiBD,KAAKI,GAAL,EAAU,CAAV,EAAaH,KAAb,EAAoB,IAApB,CAAyB,mBAAzB,CAAjB;AAAA,GAAb;AACD,C;;IAIGM,e,GACJ,yBAAYX,KAAZ,EAAmB;AAAA;;AACjB,OAAKA,KAAL,GAAaA,KAAb;AACA,OAAKC,SAAL,GAAiBD,KAAjB;;AAEA,MAAMU,kBAAgBV,QAAQ,CAA9B;AACA,MAAMQ,kBAAgBR,QAAQ,CAA9B;;AAEA,OAAKE,IAAL,GAAY;AAAA,WAAQE,KAAKM,GAAL,EAAU,CAAV,EAAa,IAAb,CAAkB,mBAAlB,CAAR;AAAA,GAAZ;AACA,OAAKP,KAAL,GAAa,UAACC,IAAD,EAAOC,KAAP;AAAA,WAAiBD,KAAKI,GAAL,EAAU,CAAV,EAAaH,KAAb,EAAoB,IAApB,CAAyB,mBAAzB,CAAjB;AAAA,GAAb;AACD,C;;AAIH,IAAMO,QAAQ,EAAd;;AAEAA,MAAMC,IAAN,GAAa;AACXb,SAAO,CADI;AAEXC,aAAW,CAFA;AAGXC,QAAM;AAAA,WAAM,IAAN;AAAA,GAHK;AAIXC,SAAO,iBAAM,CAAE;AAJJ,CAAb;;AAOAS,MAAME,IAAN,GAAa,IAAIL,aAAJ,CAAkB,CAAlB,CAAb;AACAG,MAAMG,KAAN,GAAc,IAAIN,aAAJ,CAAkB,CAAlB,CAAd;AACAG,MAAMI,KAAN,GAAc,IAAIP,aAAJ,CAAkB,CAAlB,CAAd;AACAG,MAAMK,KAAN,GAAc,IAAIN,eAAJ,CAAoB,CAApB,CAAd;AACAC,MAAMM,MAAN,GAAe,IAAIP,eAAJ,CAAoB,CAApB,CAAf;AACAC,MAAMO,MAAN,GAAe,IAAIR,eAAJ,CAAoB,CAApB,CAAf;;AAEAC,MAAMQ,KAAN,GAAc,IAAIxB,UAAJ,CAAe,CAAf,CAAd;AACAgB,MAAMS,MAAN,GAAe,IAAIzB,UAAJ,CAAe,CAAf,CAAf;;AAEAgB,MAAMU,KAAN,GAAc;AACZtB,SAAO,CADK;AAEZC,aAAW,CAFC;;AAIZC,MAJY,gBAIPE,IAJO,EAID;AACT,WAAOA,KAAKmB,UAAL,CAAgB,CAAhB,EAAmB,IAAnB,CAAwB,mBAAxB,CAAP;AACD,GANW;AAQZpB,OARY,iBAQNC,IARM,EAQAC,KARA,EAQO;AACjBD,SAAKoB,UAAL,CAAgB,CAAhB,EAAmBnB,KAAnB,EAA0B,IAA1B,CAA+B,mBAA/B;AACD;AAVW,CAAd;;AAaAO,MAAMa,MAAN,GAAe;AACbzB,SAAO,CADM;AAEbC,aAAW,CAFE;;AAIbC,MAJa,gBAIRE,IAJQ,EAIF;AACT,WAAOA,KAAKsB,UAAL,CAAgB,CAAhB,EAAmB,IAAnB,CAAwB,mBAAxB,CAAP;AACD,GANY;AAQbvB,OARa,iBAQPC,IARO,EAQDC,KARC,EAQM;AACjBD,SAAKuB,UAAL,CAAgB,CAAhB,EAAmBtB,KAAnB,EAA0B,IAA1B,CAA+B,mBAA/B;AACD;AAVY,CAAf;;AAaAO,MAAMgB,IAAN,GAAa;AACX5B,SAAO,CADI;AAEXC,aAAW,CAFA;;AAIXC,MAJW,gBAINE,IAJM,EAIA;AACT,WAAO,CAAC,CAACA,KAAKyB,OAAL,CAAa,CAAb,CAAT;AACD,GANU;AAQX1B,OARW,iBAQLC,IARK,EAQCC,KARD,EAQQ;AACjBD,SAAK0B,OAAL,CAAa,CAAb,EAAiB,CAAC,CAACzB,KAAH,GAAY,CAAZ,GAAgB,CAAhC;AACD;AAVU,CAAb;;AAcA;;IACM0B,O;AACJ,mBAAYC,IAAZ,EAAkB3B,KAAlB,EAAyB;AAAA;;AACvB,SAAK2B,IAAL,GAAYC,UAAUD,IAAV,CAAZ;AACA,SAAK5B,IAAL,GAAY,IAAZ;AACA,SAAK8B,OAAL,GAAe,IAAf;;AAEA,SAAKC,KAAL,GAAa9B,KAAb;AACD;;;;2BAEM;AACL,aAAO,KAAK2B,IAAL,CAAUhC,KAAjB;AACD;;;6BAEQ;AACP,UAAI,KAAKmC,KAAT,EAAgB;AACd,aAAKH,IAAL,CAAU7B,KAAV,CAAgB,KAAKC,IAArB,EAA2B,KAAK+B,KAAhC,EAAuC,KAAKD,OAA5C;AACD;AACF;;;0BAEK;AACJ,aAAQ,KAAK9B,IAAN,GAAc,KAAKA,IAAL,CAAUgC,UAAxB,GAAqC,CAA5C;AACD;;;4BAEO;AACN,wBAAO,KAAKhC,IAAZ,EAAkB,wCAAlB;AACA,aAAO,KAAK4B,IAAL,CAAU9B,IAAV,CAAe,KAAKE,IAApB,EAA0B,KAAK8B,OAA/B,CAAP;AACD;;;wBAEG7B,K,EAAO;AACT,UAAI,KAAKD,IAAT,EAAe;AACb,aAAK4B,IAAL,CAAU7B,KAAV,CAAgB,KAAKC,IAArB,EAA2BC,KAA3B,EAAkC,KAAK6B,OAAvC;AACD,OAFD,MAEO;AACL,aAAKC,KAAL,GAAa9B,KAAb;AACD;AACF;;;2BAEM;AACL,wBAAO,KAAKD,IAAZ,EAAkB,gDAAlB;;AAEA,WAAK8B,OAAL,CAAaG,IAAb,CAAkB,KAAKC,GAAL,EAAlB,EAA8B,KAAKN,IAAL,CAAUhC,KAAxC;AACA,WAAKI,IAAL,GAAY,IAAZ;AACD;;;+BAEU;AACT,aAAQ,KAAKkC,GAAL,EAAD,iBACS,KAAKC,KAAL,EADT,UAEH,iBAFJ;AAGD;;;;;;AAGH3B,MAAM4B,OAAN,GAAgB,UAASC,OAAT,EAAkB;AAChC,MAAMT,OAAOC,UAAUQ,OAAV,CAAb;;AAEA,SAAO;AACLT,cADK;AAELhC,WAAO,CAFF;AAGLC,eAAW,CAHN;AAILyC,eAAW,IAJN;;AAMLxC,QANK,gBAMAE,IANA,EAMM8B,OANN,EAMe;AAClB,UAAMS,OAAOvC,KAAKwC,SAAL,CAAe,CAAf,EAAkB,IAAlB,CAAuB,mBAAvB,CAAb;AACA,UAAMC,OAAO,IAAIC,QAAJ,CAAa1C,KAAK2C,MAAlB,EAA0BJ,IAA1B,EAAgCX,KAAKhC,KAArC,CAAb;;AAEA,UAAMwC,UAAU,IAAIT,OAAJ,CAAYC,IAAZ,CAAhB;AACAQ,cAAQpC,IAAR,GAAeyC,IAAf;AACAL,cAAQN,OAAR,GAAkBA,OAAlB;;AAEA,aAAOM,OAAP;AACD,KAfI;AAiBLrC,SAjBK,iBAiBCC,IAjBD,EAiBOC,KAjBP,EAiBc6B,OAjBd,EAiBuB;AAC1B,wBAAO7B,iBAAiB0B,OAAxB,uBAAoD1B,KAApD;;AAEA,UAAI,CAACA,MAAMiC,GAAN,EAAL,EAAkBJ,QAAQc,YAAR,CAAqB3C,KAArB;AAClBD,WAAK6C,SAAL,CAAe,CAAf,EAAkB5C,MAAMiC,GAAN,EAAlB,EAA+B,IAA/B,CAAoC,mBAApC;AACD;AAtBI,GAAP;AAwBD,CA3BD;;IA8BMY,a;AACJ,yBAAY7C,KAAZ,EAAmB;AAAA;;AACjB,SAAKD,IAAL,GAAY,IAAZ;AACA,SAAK8B,OAAL,GAAe,IAAf;;AAEA,SAAKiB,QAAL,GAAgB9C,KAAhB;AACA,SAAK+C,QAAL,GAAgB,IAAhB;AACA,SAAKC,MAAL,GAAc,IAAd;AACD;;;;2BAEM;AACL,WAAKD,QAAL,GAAgB,KAAKlB,OAAL,CAAaoB,YAAb,CAA0B,KAAKH,QAA/B,CAAhB;AACA,WAAKE,MAAL,GAAc,KAAKD,QAAL,CAAcG,UAA5B;;AAEA,aAAO,KAAKF,MAAZ;AACD;;;6BAEQ;AACP,wBAAO,CAAC,CAAC,KAAKjD,IAAd,EAAoB,qCAApB;;AAEA,UAAI,KAAKgD,QAAT,EAAmB;AACjB,YAAMI,SAAS,IAAIC,UAAJ,CAAe,KAAKrD,IAAL,CAAU2C,MAAzB,CAAf;AACAS,eAAOhD,GAAP,CAAW,KAAK4C,QAAhB,EAA0B,KAAKhD,IAAL,CAAUgC,UAApC;AACD;AACF;;;0BAEK;AACJ,aAAQ,KAAKhC,IAAN,GAAc,KAAKA,IAAL,CAAUgC,UAAxB,GAAqC,CAA5C;AACD;;;4BAEO;AACN,wBAAO,KAAKhC,IAAZ,EAAkB,8CAAlB;AACA,aAAO,KAAK8B,OAAL,CAAawB,YAAb,CAA0B,KAAKtD,IAA/B,CAAP;AACD;;;2BAEM;AACL,wBAAO,CAAC,CAAC,KAAKA,IAAd,EAAoB,sDAApB;AACA,WAAK8B,OAAL,CAAaG,IAAb,CAAkB,KAAKC,GAAL,EAAlB,EAA8B,KAAKe,MAAnC;AACA,WAAKjD,IAAL,GAAY,IAAZ;AACD;;;;;;AAGHuD,OAAOC,cAAP,CAAsBV,cAAcW,SAApC,EAA+C,OAA/C,EAAwD;AACtDC,cAAY,IAD0C;;AAGtDpD,KAHsD,iBAGhD;AACJ,WAAO,KAAK6B,KAAL,EAAP;AACD;AALqD,CAAxD;;AAQA,wBAAaW,aAAb;;AAGAtC,MAAMmD,MAAN,GAAe;AACb/D,SAAO,CADM;AAEbC,aAAW,CAFE;AAGbyC,aAAW,IAHE;;AAKbxC,MALa,gBAKRE,IALQ,EAKF8B,OALE,EAKO;AAClB,QAAMS,OAAOvC,KAAKwC,SAAL,CAAe,CAAf,EAAkB,IAAlB,CAAuB,mBAAvB,CAAb;;AAEA,QAAMJ,UAAW,IAAIU,aAAJ,EAAjB;AACAV,YAAQpC,IAAR,GAAe8B,QAAQ8B,cAAR,CAAuBrB,IAAvB,CAAf;AACAH,YAAQN,OAAR,GAAkBA,OAAlB;;AAEA,WAAOM,OAAP;AACD,GAbY;AAebrC,OAfa,iBAePC,IAfO,EAeDC,KAfC,EAeM6B,OAfN,EAee;AAC1B,QAAI,OAAO7B,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,cAAQ,IAAI6C,aAAJ,CAAkB7C,KAAlB,CAAR;AACD;;AAED,QAAI,CAACA,MAAMiC,GAAN,EAAL,EAAkBJ,QAAQc,YAAR,CAAqB3C,KAArB;AAClBD,SAAK6C,SAAL,CAAe,CAAf,EAAkB5C,MAAMiC,GAAN,EAAlB,EAA+B,IAA/B,CAAoC,mBAApC;AACD;AAtBY,CAAf;;AA0BA;;IACM2B,S;AACJ,qBAAYjC,IAAZ,EAAkBkC,MAAlB,EAA0B;AAAA;;AACxB,SAAKlC,IAAL,GAAYA,IAAZ;AACA,SAAKkC,MAAL,GAAcA,MAAd;;AAEA,SAAKlE,KAAL,GAAagC,KAAKhC,KAAL,GAAakE,MAA1B;AACA,SAAKjE,SAAL,GAAiB+B,KAAK/B,SAAtB;AACD;;;;yBAEIG,I,EAAM8B,O,EAAS;AAClB,UAAMiC,MAAM,EAAZ;;AAEA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,KAAKF,MAAL,GAAc,CAAnC,EAAsCE,GAAtC,EAA2C;AACzC,YAAMC,UAAU,kBAAOjE,IAAP,EAAagE,IAAI,KAAKpC,IAAL,CAAUhC,KAA3B,EAAkC,KAAKgC,IAAL,CAAUhC,KAA5C,CAAhB;AACAmE,YAAIG,IAAJ,CAAS,KAAKtC,IAAL,CAAU9B,IAAV,CAAemE,OAAf,EAAwBnC,OAAxB,CAAT;AACD;;AAED,aAAOiC,GAAP;AACD;;;0BAEK/D,I,EAAMmE,M,EAAQrC,O,EAAS;AAAA;;AAC3B,wBAAOqC,OAAOL,MAAP,KAAkB,KAAKA,MAA9B,EACE,kDADF;;AAGAK,aAAOC,OAAP,CAAe,UAACnE,KAAD,EAAQ+D,CAAR,EAAc;AAC3B,YAAMC,UAAU,kBAAOjE,IAAP,EAAagE,IAAI,MAAKpC,IAAL,CAAUhC,KAA3B,EAAkC,MAAKgC,IAAL,CAAUhC,KAA5C,CAAhB;AACA,cAAKgC,IAAL,CAAU7B,KAAV,CAAgBkE,OAAhB,EAAyBhE,KAAzB,EAAgC6B,OAAhC;AACD,OAHD;AAID;;;;;;AAIH;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMuC,UAAU;AACdC,MAAI9D,MAAMK,KADI;AAEd0D,OAAK/D,MAAMM,MAFG;AAGd0D,OAAKhE,MAAMO,MAHG;AAId0D,OAAKjE,MAAMS,MAJG;AAKdyD,MAAIlE,MAAME,IALI;AAMdiE,OAAKnE,MAAMG,KANG;AAOdiE,OAAKpE,MAAMI,KAPG;AAQdiE,OAAKrE,MAAMQ,KARG;AASd8D,OAAKtE,MAAMU,KATG;AAUd6D,OAAKvE,MAAMa,MAVG;AAWd2D,QAAMxE,MAAMK,KAXE;AAYdoE,SAAOzE,MAAMK,KAZC;AAadqE,SAAO1E,MAAME,IAbC;AAcdyE,SAAO3E,MAAMG,KAdC;AAedyE,UAAQ5E,MAAMM,MAfA;AAgBduE,OAAK7E,MAAMI,KAhBG;AAiBd0E,QAAM9E,MAAMO,MAjBE;AAkBdwE,QAAM/E,MAAMI,KAlBE;AAmBd4E,SAAOhF,MAAMO,MAnBC;AAoBd0E,YAAUjF,MAAMS,MApBF;AAqBdyE,aAAWlF,MAAMS,MArBH;AAsBd0E,UAAQnF,MAAMO,MAtBA;AAuBd6E,SAAOpF,MAAMO;AAvBC,CAAhB;;AA2BA,SAAS8E,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,MAAMC,OAAOD,IAAIE,WAAJ,EAAb;;AAEA,MAAID,QAAQvF,KAAZ,EAAmB,OAAOA,MAAMuF,IAAN,CAAP;AACnB,MAAIA,QAAQ1B,OAAZ,EAAqB,OAAOA,QAAQ0B,IAAR,CAAP;;AAErB,QAAM,IAAIE,KAAJ,6BAAmCH,GAAnC,QAAN;AACD;;AAGD;AACA;AACA,SAASjE,SAAT,CAAmBQ,OAAnB,EAA4B;AAC1B,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,WAAOwD,gBAAgBxD,OAAhB,CAAP;AACD;;AAED,MAAI6D,MAAMC,OAAN,CAAc9D,OAAd,CAAJ,EAA4B;AAC1B,sBAAOA,QAAQyB,MAAR,KAAmB,CAA1B,EACE,2DADF,EAC+DzB,OAD/D;;AAGA,QAAMT,OAAOC,UAAUQ,QAAQ,CAAR,CAAV,CAAb;AACA,QAAMyB,SAASzB,QAAQ,CAAR,CAAf;;AAEA,WAAO,IAAIwB,SAAJ,CAAcjC,IAAd,EAAoBkC,MAApB,CAAP;AACD;;AAED;AACA,MAAMsC,SAAS,2DAAf;AACA,oBAAO,WAAW/D,OAAlB,EAA2B+D,MAA3B,EAAmC/D,OAAnC;AACA,oBAAO,eAAeA,OAAtB,EAA+B+D,MAA/B,EAAuC/D,OAAvC;AACA,oBAAO,UAAUA,OAAjB,EAA0B+D,MAA1B,EAAkC/D,OAAlC;AACA,oBAAO,WAAWA,OAAlB,EAA2B+D,MAA3B,EAAmC/D,OAAnC;;AAEA,SAAOA,OAAP;AACD;;QAGQ7B,K,GAAAA,K;QAAOhB,U,GAAAA,U;QAAYmC,O,GAAAA,O;QAASmB,a,GAAAA,a;QAAejB,S,GAAAA,S;;;;;;;;;;;;QC1XpCwE,M,GAAAA,M;QAuBAC,M,GAAAA,M;QAKAC,Y,GAAAA,Y;QAKAC,K,GAAAA,K;QASAC,Y,GAAAA,Y;QAcAC,W,GAAAA,W;QAcAC,Y,GAAAA,Y;AAxEhB;AACA;AACO,SAASN,MAAT,CAAgBO,SAAhB,EAA2BR,MAA3B,EAA4C;AAAA,oCAANS,IAAM;AAANA,QAAM;AAAA;;AACjD,MAAID,SAAJ,EAAe;AACf,MAAI,CAACC,IAAD,IAAS,CAACA,KAAK/C,MAAnB,EAA2B,MAAM,IAAImC,KAAJ,CAAUG,MAAV,CAAN;;AAE3B,MAAIU,MAAM,EAAV;AACA,MAAIC,gBAAJ;;AAEA,MAAI;AACFA,cAAUF,KAAKG,GAAL,CAAS;AAAA,aAAOC,KAAKC,SAAL,CAAeC,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAP;AAAA,KAAT,CAAV;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACV,UAAM,IAAInB,KAAJ,CAAUG,MAAV,CAAN;AACD;;AAEDA,SAAOiB,KAAP,CAAa,IAAb,EAAmBjD,OAAnB,CAA2B,UAACkD,IAAD,EAAU;AACnCR,WAAOQ,IAAP;AACA,QAAIP,QAAQjD,MAAZ,EAAoBgD,OAAOC,QAAQQ,GAAR,EAAP;AACrB,GAHD;;AAKA,QAAM,IAAItB,KAAJ,CAAUa,GAAV,CAAN;AACD;;AAGD;AACO,SAASR,MAAT,CAAgBtG,IAAhB,EAAsBwH,KAAtB,EAA6B1D,MAA7B,EAAqC;AAC1C,SAAO,IAAIpB,QAAJ,CAAa1C,KAAK2C,MAAlB,EAA0B3C,KAAKgC,UAAL,GAAkBwF,KAA5C,EAAmD1D,MAAnD,CAAP;AACD;;AAGM,SAASyC,YAAT,CAAsBxC,GAAtB,EAA2B;AAChC,SAAO,IAAIV,UAAJ,CAAeU,IAAIpB,MAAnB,EAA2BoB,IAAI/B,UAA/B,EAA2C+B,IAAIZ,UAA/C,CAAP;AACD;;AAGM,SAASqD,KAAT,CAAeiB,KAAf,EAAsB;AAC3B,SAAOA,UAAU,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAA1C;AACD;;AAGD,IAAMC,MAAM,SAANA,GAAM,CAACC,GAAD,EAAMC,IAAN;AAAA,SAAerE,OAAOE,SAAP,CAAiBoE,cAAjB,CAAgCC,IAAhC,CAAqCH,GAArC,EAA0CC,IAA1C,CAAf;AAAA,CAAZ;AACA,IAAMG,aAAa,SAAbA,UAAa;AAAA,SAAU,OAAON,KAAP,KAAiB,UAA3B;AAAA,CAAnB;;AAGO,SAAShB,YAAT,CAAsBuB,UAAtB,EAAkC;AACvC3B,SAAO,CAAC,CAACqB,IAAIM,WAAWvE,SAAf,EAA0B,OAA1B,CAAT,EAA6C,0BAA7C;;AAEAF,SAAO0E,mBAAP,CAA2BC,OAAOzE,SAAlC,EAA6CW,OAA7C,CAAqD,UAACwD,IAAD,EAAU;AAC7D,QAAIF,IAAIM,WAAWvE,SAAf,EAA0BmE,IAA1B,CAAJ,EAAqC;AACrC,QAAI,CAACG,WAAWG,OAAOzE,SAAP,CAAiBmE,IAAjB,CAAX,CAAL,EAAyC;;AAEzCI,eAAWvE,SAAX,CAAqBmE,IAArB,IAA6B,YAAkB;AAAA;;AAC7C,aAAO,eAAK3H,KAAL,EAAW2H,IAAX,0BAAP;AACD,KAFD;AAGD,GAPD;AAQD;;AAGM,SAASlB,WAAT,CAAqByB,SAArB,EAAgC;AACrC9B,SAAO,CAAC,CAACqB,IAAIS,UAAU1E,SAAd,EAAyB,QAAzB,CAAT,EAA6C,2BAA7C;;AAEAF,SAAO0E,mBAAP,CAA2B/B,MAAMzC,SAAjC,EAA4CW,OAA5C,CAAoD,UAACwD,IAAD,EAAU;AAC5D,QAAIF,IAAIS,UAAU1E,SAAd,EAAyBmE,IAAzB,CAAJ,EAAoC;AACpC,QAAI,CAACG,WAAW7B,MAAMzC,SAAN,CAAgBmE,IAAhB,CAAX,CAAL,EAAwC;;AAExCO,cAAU1E,SAAV,CAAoBmE,IAApB,IAA4B,YAAkB;AAAA;;AAC5C,aAAO,gBAAKzD,MAAL,EAAYyD,IAAZ,2BAAP;AACD,KAFD;AAGD,GAPD;AAQD;;AAGM,SAASjB,YAAT,CAAsBwB,SAAtB,EAAiC;AACtC9B,SAAO,CAAC,CAACqB,IAAIS,UAAU1E,SAAd,EAAyB,QAAzB,CAAT,EAA6C,2BAA7C;AACA4C,SAAO,CAAC,CAACqB,IAAIS,UAAU1E,SAAd,EAAyB,QAAzB,CAAT,EAA6C,2BAA7C;;AAEA0E,YAAU1E,SAAV,CAAoB2E,OAAOC,QAA3B,IAAuC,YAAW;AAChD,QAAMlE,SAAS,KAAKA,MAApB;AACA,QAAML,SAAS,KAAKA,MAApB;AACA,QAAIE,IAAI,CAAR;;AAEA,WAAO;AACLsE,UADK,kBACE;AACL,eAAQtE,IAAIF,MAAL,GACH,EAAE7D,OAAOkE,OAAOH,GAAP,CAAT,EAAsBuE,MAAM,KAA5B,EADG,GAEH,EAAEA,MAAM,IAAR,EAFJ;AAGD;AALI,KAAP;AAOD,GAZD;AAaD,C;;;;;;;;;;;;;;;ACzFD,SAASC,WAAT,CAAqB1C,GAArB,EAA0B;AACxB,MAAM2C,MAAM,IAAIvI,WAAJ,CAAgB4F,IAAIhC,MAAJ,GAAa,CAA7B,CAAZ,CADwB,CACqB;AAC7C,MAAMC,MAAM,IAAI2E,WAAJ,CAAgBD,GAAhB,CAAZ;;AAEA,OAAK,IAAIzE,IAAI,CAAb,EAAgBA,IAAI8B,IAAIhC,MAAxB,EAAgCE,GAAhC,EAAqC;AACnCD,QAAIC,CAAJ,IAAS8B,IAAI6C,UAAJ,CAAe3E,CAAf,CAAT;AACD;;AAED,SAAO,IAAIX,UAAJ,CAAeoF,GAAf,CAAP;AACD;;AAED,SAASG,WAAT,CAAqBH,GAArB,EAA0B;AACxB,MAAMI,MAAMJ,IAAItF,UAAhB;AACA,MAAM2F,MAAOD,MAAM,CAAP,GAAa,CAACA,MAAM,CAAP,IAAY,CAAzB,GAA+BA,MAAM,CAAjD;AACA,MAAME,MAAM,IAAIL,WAAJ,CAAgBD,IAAI9F,MAApB,EAA4B8F,IAAIzG,UAAhC,EAA4C8G,GAA5C,CAAZ;;AAEA,SAAOZ,OAAOc,YAAP,kCAAuBD,GAAvB,EAAP;AACD;;AAED;AACA;AACA;AACA,SAASE,UAAT,CAAoBnD,GAApB,EAAyB;AACvB,MAAIoD,kBAAJ;AACA,MAAIC,gBAAgB,IAApB;AACA,MAAIC,QAAQC,QAAZ;;AAEA,MAAMC,QAAQ,EAAd;;AAEA,OAAK,IAAItF,IAAI,CAAb,EAAgBA,IAAI8B,IAAIhC,MAAxB,EAAgC,EAAEE,CAAlC,EAAqC;AACnCkF,gBAAYpD,IAAI6C,UAAJ,CAAe3E,CAAf,CAAZ;;AAEA;AACA,QAAIkF,YAAY,MAAZ,IAAsBA,YAAY,MAAtC,EAA8C;AAC5C;AACA,UAAI,CAACC,aAAL,EAAoB;AAClB;AACA,YAAID,YAAY,MAAhB,EAAwB;AACtB;AACA,cAAI,CAACE,SAAS,CAAV,IAAe,CAAC,CAApB,EAAuBE,MAAMpF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACvB;AAED,SALD,MAKO,IAAIF,IAAI,CAAJ,KAAU8B,IAAIhC,MAAlB,EAA0B;AAC/B;AACA,cAAI,CAACsF,SAAS,CAAV,IAAe,CAAC,CAApB,EAAuBE,MAAMpF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACvB;AACD;;AAED;AACAiF,wBAAgBD,SAAhB;AACA;AACD;;AAED;AACA,UAAIA,YAAY,MAAhB,EAAwB;AACtB,YAAI,CAACE,SAAS,CAAV,IAAe,CAAC,CAApB,EAAuBE,MAAMpF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACvBiF,wBAAgBD,SAAhB;AACA;AACD;;AAED;AACAA,kBAAY,CAACC,gBAAgB,MAAhB,IAA0B,EAA1B,GAA+BD,YAAY,MAA5C,IAAsD,OAAlE;AACD,KA7BD,MA6BO,IAAIC,aAAJ,EAAmB;AACxB;AACA,UAAI,CAACC,SAAS,CAAV,IAAe,CAAC,CAApB,EAAuBE,MAAMpF,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB;AACxB;;AAEDiF,oBAAgB,IAAhB;;AAEA;AACA,QAAID,YAAY,IAAhB,EAAsB;AACpB,UAAI,CAACE,SAAS,CAAV,IAAe,CAAnB,EAAsB;AACtBE,YAAMpF,IAAN,CAAWgF,SAAX;AAED,KAJD,MAIO,IAAIA,YAAY,KAAhB,EAAuB;AAC5B,UAAI,CAACE,SAAS,CAAV,IAAe,CAAnB,EAAsB;AACtBE,YAAMpF,IAAN,CACEgF,aAAa,GAAb,GAAmB,IADrB,EAEEA,YAAY,IAAZ,GAAmB,IAFrB;AAKD,KAPM,MAOA,IAAIA,YAAY,OAAhB,EAAyB;AAC9B,UAAI,CAACE,SAAS,CAAV,IAAe,CAAnB,EAAsB;AACtBE,YAAMpF,IAAN,CACEgF,aAAa,GAAb,GAAmB,IADrB,EAEEA,aAAa,GAAb,GAAmB,IAAnB,GAA0B,IAF5B,EAGEA,YAAY,IAAZ,GAAmB,IAHrB;AAMD,KARM,MAQA,IAAIA,YAAY,QAAhB,EAA0B;AAC/B,UAAI,CAACE,SAAS,CAAV,IAAe,CAAnB,EAAsB;AACtBE,YAAMpF,IAAN,CACEgF,aAAa,IAAb,GAAoB,IADtB,EAEEA,aAAa,GAAb,GAAmB,IAAnB,GAA0B,IAF5B,EAGEA,aAAa,GAAb,GAAmB,IAAnB,GAA0B,IAH5B,EAIEA,YAAY,IAAZ,GAAmB,IAJrB;AAOD,KATM,MASA;AACL,YAAM,IAAIjD,KAAJ,CAAU,oBAAV,CAAN;AACD;AACF;;AAED,SAAO5C,WAAWkG,IAAX,CAAgBD,KAAhB,CAAP;AACD;;AAGD,SAASE,UAAT,CAAoBf,GAApB,EAAyB;AACvB,MAAMjB,QAAQ,CAAd,CADuB,CACN;AACjB,MAAMiC,MAAMhB,IAAI3E,MAAhB;;AAEA,MAAMiF,MAAM,EAAZ;AACA,MAAI/E,IAAIwD,KAAR;;AAEA,SAAOxD,IAAIyF,GAAX,EAAgB;AACd,QAAMC,YAAYjB,IAAIzE,CAAJ,CAAlB;AACA,QAAIkF,YAAY,IAAhB;;AAEA,QAAIS,mBAAoBD,YAAY,IAAb,GAAqB,CAArB,GAClBA,YAAY,IAAb,GAAqB,CAArB,GACGA,YAAY,IAAb,GAAqB,CAArB,GACE,CAHR;;AAKA,QAAI1F,IAAI2F,gBAAJ,IAAwBF,GAA5B,EAAiC;AAC/B,UAAIG,mBAAJ;AAAA,UAAgBC,kBAAhB;AAAA,UAA2BC,mBAA3B;AAAA,UAAuCC,sBAAvC;;AAEA,cAAQJ,gBAAR;AACE,aAAK,CAAL;AACE,cAAID,YAAY,IAAhB,EAAsB;AACpBR,wBAAYQ,SAAZ;AACD;AACD;AACF,aAAK,CAAL;AACEE,uBAAanB,IAAIzE,IAAI,CAAR,CAAb;AACA,cAAI,CAAC4F,aAAa,IAAd,MAAwB,IAA5B,EAAkC;AAChCG,4BAAgB,CAACL,YAAY,IAAb,KAAsB,GAAtB,GAA6BE,aAAa,IAA1D;AACA,gBAAIG,gBAAgB,IAApB,EAA0B;AACxBb,0BAAYa,aAAZ;AACD;AACF;AACD;AACF,aAAK,CAAL;AACEH,uBAAanB,IAAIzE,IAAI,CAAR,CAAb;AACA6F,sBAAYpB,IAAIzE,IAAI,CAAR,CAAZ;AACA,cAAI,CAAC4F,aAAa,IAAd,MAAwB,IAAxB,IAAgC,CAACC,YAAY,IAAb,MAAuB,IAA3D,EAAiE;AAC/DE,4BAAgB,CAACL,YAAY,GAAb,KAAqB,GAArB,GAA2B,CAACE,aAAa,IAAd,KAAuB,GAAlD,GAAyDC,YAAY,IAArF;AACA,gBAAIE,gBAAgB,KAAhB,KAA0BA,gBAAgB,MAAhB,IAA0BA,gBAAgB,MAApE,CAAJ,EAAiF;AAC/Eb,0BAAYa,aAAZ;AACD;AACF;AACD;AACF,aAAK,CAAL;AACEH,uBAAanB,IAAIzE,IAAI,CAAR,CAAb;AACA6F,sBAAYpB,IAAIzE,IAAI,CAAR,CAAZ;AACA8F,uBAAarB,IAAIzE,IAAI,CAAR,CAAb;AACA,cAAI,CAAC4F,aAAa,IAAd,MAAwB,IAAxB,IAAgC,CAACC,YAAY,IAAb,MAAuB,IAAvD,IAA+D,CAACC,aAAa,IAAd,MAAwB,IAA3F,EAAiG;AAC/FC,4BAAgB,CAACL,YAAY,GAAb,KAAqB,IAArB,GAA4B,CAACE,aAAa,IAAd,KAAuB,GAAnD,GAAyD,CAACC,YAAY,IAAb,KAAsB,GAA/E,GAAsFC,aAAa,IAAnH;AACA,gBAAIC,gBAAgB,MAAhB,IAA0BA,gBAAgB,QAA9C,EAAwD;AACtDb,0BAAYa,aAAZ;AACD;AACF;AACD;AACF;AApCF;AAsCD;;AAED,QAAIb,cAAc,IAAlB,EAAwB;AACtB;AACA;AACAA,kBAAY,MAAZ;AACAS,yBAAmB,CAAnB;AACD,KALD,MAKO,IAAIT,YAAY,MAAhB,EAAwB;AAC7B;AACAA,mBAAa,OAAb;AACAH,UAAI7E,IAAJ,CAASgF,cAAc,EAAd,GAAmB,KAAnB,GAA2B,MAApC;AACAA,kBAAY,SAASA,YAAY,KAAjC;AACD;;AAEDH,QAAI7E,IAAJ,CAASgF,SAAT;AACAlF,SAAK2F,gBAAL;AACD;;AAED;AACA;AACA;AACA,MAAMK,MAAM,MAAZ;;AAEA,MAAIjB,IAAIjF,MAAJ,IAAckG,GAAlB,EAAuB;AAAA;;AACrB,WAAO,+BAAOhB,YAAP,EAAoBlB,IAApB,8BAAyBI,MAAzB,SAAoCa,GAApC,EAAP,CADqB,CAC4B;AAClD;;AAED;AACA,MAAIjD,MAAM,EAAV;AACA,MAAImE,IAAI,CAAR;;AAEA,SAAOA,IAAIlB,IAAIjF,MAAf,EAAuB;AAAA;;AACrBgC,WAAO,gCAAOkD,YAAP,EAAoBlB,IAApB,+BAAyBI,MAAzB,4BAAoCa,IAAImB,KAAJ,CAAUD,CAAV,EAAaA,KAAKD,GAAlB,CAApC,GAAP;AACD;;AAED,SAAOlE,GAAP;AACD;;AAGD,SAASqE,MAAT,CAAgBrE,GAAhB,EAAqBlE,IAArB,EAA2B;AACzB,MAAIA,SAAS,QAAb,EAAuB,OAAO4G,YAAY1C,GAAZ,CAAP;;AAEvB,SAAQ,OAAOsE,WAAP,KAAuB,WAAxB,GACF,IAAIA,WAAJ,EAAD,CAAoBD,MAApB,CAA2BrE,GAA3B,CADG,GAEHmD,WAAWnD,GAAX,CAFJ;AAGD;;AAGD,SAASuE,MAAT,CAAgBvE,GAAhB,EAAqBlE,IAArB,EAA2B;AACzB,MAAIA,SAAS,QAAb,EAAuB,OAAOgH,YAAY9C,GAAZ,CAAP;;AAEvB,SAAQ,OAAOwE,WAAP,KAAuB,WAAxB,GACF,IAAIA,WAAJ,EAAD,CAAoBD,MAApB,CAA2BvE,GAA3B,CADG,GAEH0D,WAAW1D,GAAX,CAFJ;AAGD;;QAGQqE,M,GAAAA,M;QAAQE,M,GAAAA,M;QAAQpB,U,GAAAA,U;QAAYO,U,GAAAA,U;;;;;;;;;;;;;;;;;AC7NrC;;AACA;;;;;;;;AAGA,IAAMe,OAAQ,OAAOnC,MAAP,KAAkB,WAAnB,GACTA,OAAOoC,GAAP,CAAW,aAAX,CADS,GAET,QAFJ;;IAKMC,kB;AACJ,8BAAY9C,GAAZ,EAAiB;AAAA;;AAAA;;AACf;AACA;AACA;AACA,SAAK4C,IAAL,IAAa;AACXG,YAAM,EADK;AAEX1K,YAAM,IAFK;AAGX8B,eAAS;AAHE,KAAb;;AAMA,QAAI6F,GAAJ,EAAS;AACPpE,aAAOoH,OAAP,CAAehD,GAAf,EAAoBvD,OAApB,CAA4B,gBAAkB;AAAA;AAAA,YAAhBwG,GAAgB;AAAA,YAAX3K,KAAW;;AAC5C,0BAAO2K,YAAP,gDAA8DA,GAA9D;AACA,cAAKA,GAAL,IAAY3K,KAAZ;AACD,OAHD;AAID;AACF;;;;0BAEK;AACJ,aAAQ,KAAKsK,IAAL,EAAWvK,IAAZ,GAAoB,KAAKuK,IAAL,EAAWvK,IAAX,CAAgBgC,UAApC,GAAiD,CAAxD;AACD;;;2BAEsB;AAAA,UAAlB6I,QAAkB,uEAAP,KAAO;;AACrB,wBAAO,CAAC,CAAC,KAAKN,IAAL,EAAWzI,OAApB,EACE,oEADF;;AAGA;AACA,UAAMgJ,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/BA,eAAOC,WAAP,CAAmBC,MAAnB,CAA0B7G,OAA1B,CAAkC,UAAC8G,KAAD,EAAQnF,IAAR,EAAiB;AACjD,cAAImF,MAAMtJ,IAAN,CAAWU,SAAf,EAA0ByI,OAAOhF,IAAP,EAAa9D,IAAb;AAC1B,cAAIiJ,MAAMtJ,IAAN,CAAWuJ,QAAf,EAAyBL,aAAaC,OAAOhF,IAAP,CAAb;AAC1B,SAHD;AAID,OALD;;AAOA,UAAI8E,QAAJ,EAAcC,aAAa,IAAb;;AAEd,WAAKP,IAAL,EAAWzI,OAAX,CAAmBG,IAAnB,CAAwB,KAAKC,GAAL,EAAxB,EAAoC,KAAK8I,WAAL,CAAiBpL,KAArD;AACA,WAAK2K,IAAL,EAAWzI,OAAX,GAAqB,IAArB;AACA,WAAKyI,IAAL,EAAWvK,IAAX,GAAkB,IAAlB;AACD;;;+BAEU;AACT,UAAIoL,MAAM,KAAV;;AAEA,UAAMlE,YAAY,SAAZA,SAAY,CAAC6D,MAAD,EAAY;AAC5B,YAAME,SAASF,OAAOC,WAAP,CAAmBC,MAAlC;AACA,YAAMI,QAAQN,OAAOC,WAAP,CAAmBvH,SAAjC;;AAEAwH,eAAO7G,OAAP,CAAe,UAAC8G,KAAD,EAAQnF,IAAR,EAAiB;AAC9BqF,wBAAYrF,IAAZ,UAAqBgF,OAAOhF,IAAP,CAArB;AACD,SAFD;;AAIAxC,eAAO0E,mBAAP,CAA2BoD,KAA3B,EAAkCjH,OAAlC,CAA0C,UAAC2B,IAAD,EAAU;AAClD,cAAIkF,OAAOvD,GAAP,CAAW3B,IAAX,CAAJ,EAAsB;;AAEtB,cAAM9F,QAAQ8K,OAAOhF,IAAP,CAAd;;AAEA,cAAI,OAAO9F,KAAP,KAAiB,UAArB,EAAiC;AAC/BmL,0BAAYrF,IAAZ,UAAqB9F,KAArB;AACD;AACF,SARD;AASD,OAjBD;;AAmBAiH,gBAAU,IAAV;;AAEA,UAAIkE,IAAItH,MAAJ,IAAc,EAAlB,EAAsB;AACpBsH,cAAMA,IAAIE,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAA0B;AAA1B,SACIA,OADJ,CACY,OADZ,EACqB,GADrB,EAC0B;AAD1B,SAEIA,OAFJ,CAEY,KAFZ,EAEmB,GAFnB,CAAN,CADoB,CAGY;AACjC;;AAEDF,aAAO,GAAP;;AAEA,aAAOA,GAAP;AACD;;;6BAEQrF,I,EAAM;AACb,UAAM/F,OAAO,KAAKuK,IAAL,EAAWvK,IAAxB;AACA,wBAAO,CAAC,CAACA,IAAT,EAAe,oDAAf;;AAEA,UAAI,CAAC+F,IAAL,EAAW,OAAO/F,IAAP;;AAEX,UAAMuL,aAAa,KAAKP,WAAxB;AACA,UAAME,QAAQK,WAAWN,MAAX,CAAkB3K,GAAlB,CAAsByF,IAAtB,CAAd;AACA,wBAAO,CAAC,CAACmF,KAAT,eAA0BnF,IAA1B;;AAEA,aAAO,kBAAO/F,IAAP,EAAakL,MAAMM,MAAnB,EAA2BN,MAAMtJ,IAAN,CAAWhC,KAAtC,CAAP;AACD;;;yBAEWI,I,EAAM8B,O,EAAS;AACzB,UAAMyJ,aAAa,IAAnB;;AAEA,UAAMR,SAAS,IAAIQ,UAAJ,EAAf;AACAR,aAAOR,IAAP,EAAavK,IAAb,GAAoBA,IAApB;AACA+K,aAAOR,IAAP,EAAazI,OAAb,GAAuBA,OAAvB;;AAEA,aAAOiJ,MAAP;AACD;;;0BAEY/K,I,EAAM+K,M,EAAQjJ,O,EAAS;AAClC,UAAMyJ,aAAa,IAAnB;;AAEA,UAAI,iBAAMR,MAAN,KAAiB,CAACA,OAAOC,WAAP,CAAmBG,QAAzC,EAAmD;AACjDJ,iBAAS,IAAIQ,UAAJ,CAAeR,MAAf,CAAT;AACD;;AAEDQ,iBAAWN,MAAX,CAAkB7G,OAAlB,CAA0B,UAAC8G,KAAD,EAAQnF,IAAR,EAAiB;AACzC,YAAMnE,OAAOsJ,MAAMtJ,IAAnB;AACA,YAAI3B,QAAQ8K,OAAOhF,IAAP,CAAZ;;AAEA,YAAI,OAAO9F,KAAP,KAAiB,WAArB,EAAkC;AAChC,cAAI2B,KAAKuJ,QAAL,KAAkB,iBAAMlL,KAAN,KAAgB,CAACA,MAAM+K,WAAN,CAAkBG,QAArD,CAAJ,EAAoE;AAClElL,oBAAQ,IAAI2B,IAAJ,CAAS3B,KAAT,CAAR;AACD;;AAED,cAAMwL,YAAY,kBAAOzL,IAAP,EAAakL,MAAMM,MAAnB,EAA2B5J,KAAKhC,KAAhC,CAAlB;AACAgC,eAAK7B,KAAL,CAAW0L,SAAX,EAAsBxL,KAAtB,EAA6B6B,OAA7B;AACD;AACF,OAZD;;AAcAiJ,aAAOR,IAAP,EAAavK,IAAb,GAAoBA,IAApB;AACA+K,aAAOR,IAAP,EAAazI,OAAb,GAAuBA,OAAvB;AACD;;;;;;AAIH;AACA;;;IACM4J,M,GACJ,kBAAmC;AAAA,MAAvBT,MAAuB,uEAAd,EAAc;AAAA,MAAVU,GAAU,uEAAJ,EAAI;;AAAA;;AACjC;AACA,MAAMC,QAAQrI,OAAO0E,mBAAP,CAA2BgD,MAA3B,CAAd;;AAEA;AACA,GAAC,KAAD,EAAQ,MAAR,EAAgB,UAAhB,EAA4B7G,OAA5B,CAAoC;AAAA,WAClC,kBAAO,EAAEwH,SAASA,KAAX,CAAP,eAAoC7F,IAApC,kCADkC;AAAA,GAApC;;AAGA;;AARiC,MAS3BwF,UAT2B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,IASRd,kBATQ;;AAUjCc,aAAWN,MAAX,GAAoB,IAAIY,GAAJ,EAApB;AACAN,aAAWO,MAAX,GAAqB,YAAYH,GAAb,GAAoB,CAAC,CAACA,IAAIG,MAA1B,GAAmC,KAAvD;AACAP,aAAW1L,SAAX,GAAuB8L,IAAI9L,SAAJ,IAAiB,CAAxC;AACA0L,aAAWJ,QAAX,GAAsB,IAAtB;;AAEA,MAAIK,SAAS,CAAb;;AAEA;AACAI,QAAMxH,OAAN,CAAc,UAAC2B,IAAD,EAAU;AACtB,QAAMnE,OAAO,sBAAUqJ,OAAOlF,IAAP,CAAV,CAAb;;AAEA,QAAI,CAAC4F,IAAI9L,SAAL,IAAkB+B,KAAK/B,SAAL,GAAiB0L,WAAW1L,SAAlD,EAA6D;AAC3D0L,iBAAW1L,SAAX,GAAuB+B,KAAK/B,SAA5B;AACD;;AAED,QAAI,CAAC0L,WAAWO,MAAZ,IAAsBN,SAAS5J,KAAK/B,SAAd,KAA4B,CAAtD,EAAyD;AACvD2L,gBAAU5J,KAAK/B,SAAL,GAAkB2L,SAAS5J,KAAK/B,SAA1C;AACD;;AAED0L,eAAWN,MAAX,CAAkB7K,GAAlB,CAAsB2F,IAAtB,EAA4B,EAAEA,UAAF,EAAQyF,cAAR,EAAgB5J,UAAhB,EAA5B;AACA4J,cAAU5J,KAAKhC,KAAf;AACD,GAbD;;AAeA2L,aAAW3L,KAAX,GAAoB4L,SAASD,WAAW1L,SAArB,GACf2L,SAASD,WAAW1L,SAApB,GAAiC2L,SAASD,WAAW1L,SADtC,GAEf2L,MAFJ;;AAIA;AACA;AACAD,aAAWN,MAAX,CAAkB7G,OAAlB,CAA0B,UAAC8G,KAAD,EAAQnF,IAAR,EAAiB;AACzCxC,WAAOC,cAAP,CAAsB+H,WAAW9H,SAAjC,EAA4CsC,IAA5C,EAAkD;AAChDrC,kBAAY,IADoC;;AAGhDpD,SAHgD,iBAG1C;AACJ,YAAI,CAAC,KAAKiK,IAAL,EAAWvK,IAAhB,EAAsB;AACpB,iBAAO,KAAKuK,IAAL,EAAWG,IAAX,CAAgB3E,IAAhB,CAAP;AACD;;AAED,YAAM/F,OAAO,kBAAO,KAAKuK,IAAL,EAAWvK,IAAlB,EAAwBkL,MAAMM,MAA9B,EAAsCN,MAAMtJ,IAAN,CAAWhC,KAAjD,CAAb;AACA,eAAOsL,MAAMtJ,IAAN,CAAW9B,IAAX,CAAgBE,IAAhB,EAAsB,KAAKuK,IAAL,EAAWzI,OAAjC,CAAP;AACD,OAV+C;AAYhD1B,SAZgD,eAY5CH,KAZ4C,EAYrC;AACT,YAAI,CAAC,KAAKsK,IAAL,EAAWvK,IAAhB,EAAsB;AACpB,eAAKuK,IAAL,EAAWG,IAAX,CAAgB3E,IAAhB,IAAwB9F,KAAxB;AACA;AACD;;AAED,YAAMD,OAAO,kBAAO,KAAKuK,IAAL,EAAWvK,IAAlB,EAAwBkL,MAAMM,MAA9B,EAAsCN,MAAMtJ,IAAN,CAAWhC,KAAjD,CAAb;AACAsL,cAAMtJ,IAAN,CAAW7B,KAAX,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B,KAAKsK,IAAL,EAAWzI,OAAzC;AACD;AApB+C,KAAlD;AAsBD,GAvBD;;AAyBA,SAAOyJ,UAAP;AACD,C;;kBAIYG,M;;;;;;;;;;;;;;;kBCzGSK,a;AAvGxB;AACA;AACA,IAAMC,UAAU,CACd,CAAC,MAAD,EAAS,GAAT,CADc,EAEd,CAAC,QAAD,EAAW,GAAX,CAFc,EAGd,CAAC,SAAD,EAAY,GAAZ,CAHc,EAId,CAAC,SAAD,EAAY,GAAZ,CAJc,EAKd,CAAC,SAAD,EAAY,GAAZ,CALc,EAMd,CAAC,SAAD,EAAY,GAAZ,CANc,EAOd,CAAC,SAAD,EAAY,GAAZ,CAPc,EAQd,CAAC,SAAD,EAAY,GAAZ,CARc,EASd,CAAC,SAAD,EAAY,GAAZ,CATc,EAUd,CAAC,UAAD,EAAa,GAAb,CAVc,EAWd,CAAC,UAAD,EAAa,GAAb,CAXc,EAYd,CAAC,UAAD,EAAa,GAAb,CAZc,EAad,CAAC,UAAD,EAAa,GAAb,CAbc,EAcd,CAAC,UAAD,EAAa,GAAb,CAdc,EAed,CAAC,UAAD,EAAa,GAAb,CAfc,EAgBd,CAAC,UAAD,EAAa,GAAb,CAhBc,EAiBd,CAAC,UAAD,EAAa,GAAb,CAjBc,EAkBd,CAAC,UAAD,EAAa,GAAb,CAlBc,EAmBd,CAAC,UAAD,EAAa,GAAb,CAnBc,EAoBd,CAAC,OAAD,EAAU,IAAV,CApBc,CAAhB;;AAuBA,SAASC,MAAT,CAAgBnG,GAAhB,EAAqB;AACnB,SAAOA,IAAIhC,MAAJ,IACLgC,IAAI,CAAJ,MAAW,GADN,IAELA,IAAIuB,KAAJ,CAAU,EAAV,EAAc6C,KAAd,CAAoB,CAApB,EAAuBgC,KAAvB,CAA6B;AAAA,WAAQ,aAAYC,IAAZ,CAAiBnH,IAAjB;AAAR;AAAA,GAA7B,CAFF;AAGD;;AAED;AACA,SAASoH,iBAAT,CAA2BtG,GAA3B,EAAgC;AAC9B,SAAOkG,QAAQK,MAAR,CACL,UAACC,MAAD;AAAA;AAAA,QAAUC,EAAV;AAAA,QAAcvH,IAAd;;AAAA,WAAwBsH,OAAOhB,OAAP,CAAeiB,EAAf,EAAmBvH,IAAnB,CAAxB;AAAA,GADK,EAELc,GAFK,CAAP;AAID;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0G,QAAT,GAAgC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC9B,MAAMC,aAAa,SAAbA,UAAa;AAAA,WAAOD,QAAQE,OAAR,CAAgBC,GAAhB,MAAyB,CAAhC;AAAA,GAAnB;AACA,MAAMC,WAAW,SAAXA,QAAW;AAAA,WAAOJ,QAAQvC,KAAR,CAAc,CAAC,CAAf,MAAsB0C,GAA7B;AAAA,GAAjB;AACA,MAAIE,cAAJ;;AAEA,MAAI,CAACD,SAAS,GAAT,CAAL,EAAoB,OAAOJ,OAAP;;AAEpB,MAAIC,WAAW,IAAX,CAAJ,EAAsBI,QAAQL,QAAQvC,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAR,CAAtB,KACK,IAAIwC,WAAW,KAAX,CAAJ,EAAuBI,QAAQL,QAAQvC,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAR,CAAvB,KACA,IAAIwC,WAAW,MAAX,CAAJ,EAAwBI,QAAQL,QAAQvC,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAR;;AAE7B,MAAI,CAAC4C,KAAL,EAAY,OAAOL,OAAP;;AAEZ,MAAMM,QAAQD,MAAMzF,KAAN,CAAY,EAAZ,CAAd;AACA,MAAM2F,SAAS,EAAf;AACA,MAAIC,QAAQ,EAAZ;AACA,MAAIC,SAAS,EAAb;AACA,MAAIpJ,SAAS,CAAb;;AAEAiJ,QAAM3I,OAAN,CAAc,UAACY,IAAD,EAAU;AACtB;AACA,QAAIlB,MAAJ,EAAY;AACVmJ,eAASjI,IAAT;AACAlB;;AAEF;AACC,KALD,MAKO;AACL,UAAImJ,KAAJ,EAAW;AACTD,eAAO9I,IAAP,CAAY+I,KAAZ;AACAA,gBAAQ,EAAR;AACD;;AAED;AACA,UAAI,QAAQd,IAAR,CAAanH,IAAb,CAAJ,EAAwB;AACtBkI,kBAAUlI,IAAV;AACD,OAFD,MAEO;AACLlB,iBAASqJ,SAASD,MAAT,EAAiB,EAAjB,CAAT,CADK,CAC0B;AAC/BA,iBAAS,EAAT,CAFK,CAEU;AACfD,iBAASjI,IAAT,CAHK,CAGU;AACflB,iBAJK,CAIU;AAChB;AACF;AACF,GAvBD;;AAyBA;AACAkJ,SAAO9I,IAAP,CAAY+I,KAAZ;;AAEA;AACA,MAAIhB,OAAOe,OAAO9C,KAAP,CAAa,CAAC,CAAd,EAAiB,CAAjB,CAAP,CAAJ,EAAiC8C,OAAOzF,GAAP;;AAEjC;AACA,SAAOyF,OAAOhG,GAAP,CAAWoF,iBAAX,EAA8BgB,IAA9B,CAAmC,IAAnC,CAAP;AACD;;AAGD;AACA;AACA;AACe,SAASrB,aAAT,CAAuBsB,GAAvB,EAA4B;AACzC;AACA;AACA;AACA,MAAMd,KAAK,4BAAX;;AAEA;AACAc,MAAIC,KAAJ,GAAYD,IAAIC,KAAJ,CACTjG,KADS,CACH,IADG,EAETL,GAFS,CAEL;AAAA,WAAQuG,KAAKjC,OAAL,CAAaiB,EAAb,EAAiB,UAACiB,CAAD,EAAIC,EAAJ,EAAQC,EAAR;AAAA,qBAAqBlB,SAASiB,MAAMC,EAAf,CAArB;AAAA,KAAjB,CAAR;AAAA,GAFK,EAGTN,IAHS,CAGJ,IAHI,CAAZ;;AAKA,SAAOC,GAAP;AACD,C;;;;;;;;;;;;;;ACpHD;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AACA,IAAMM,kCAAN;AACA,IAAMC,kCAAN;;AAEA,IAAMC,8BAAN;;kBAEe;AACbC,2BADa;AAEbC,uBAFa;AAGbC,uBAHa;AAIbtC,0BAJa;AAKblL,qBALa;AAMbhB,+BANa;AAObmC,yBAPa;AAQbmB,qCARa;AASb+K,kBATa,EASJ;AACTrB,8BAVa;AAWbyB,sBAXa;AAYbC,0CAZa;AAabP,0BAba;AAcbC;AAda,C;QAkBbE,O;QACAC,K;QACAC,K;QACAtC,M;QACAlL,K;QACAhB,U;QACAmC,O;QACAmB,a;QACA+K,O,GAAAA,O;QACArB,Q;QACAyB,I;QACAC,c;QACAP,W,GAAAA,W;QACAC,W,GAAAA,W;;;;;;;;;;;;;;;;;;AC5CF;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGA,IAAMO,UAAU,IAAIC,GAAJ,CAAQ,CACtB,MADsB,EACd,OADc,EACL,OADK,EACI,OADJ,EAEtB,OAFsB,EAEb,QAFa,EAEH,QAFG,EAEO,QAFP,EAGtB,OAHsB,EAGb,QAHa,EAItB,IAJsB,EAIhB,KAJgB,EAIT,KAJS,EAIF,KAJE,EAKtB,IALsB,EAKhB,KALgB,EAKT,KALS,EAKF,KALE,EAMtB,KANsB,EAMf,KANe,EAOtB,OAPsB,EAOb,OAPa,EAOJ,KAPI,EAOG,MAPH,EAQtB,MARsB,EAQd,OARc,EAQL,QARK,EAQK,MARL,EAQa,OARb,EAStB,QATsB,EAUtB,OAVsB,CAAR,CAAhB;;AAcA,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,SAAOA,SAASpC,KAAT,CAAe;AAAA,WACpBtK,SAAS,IAAT,IACAA,SAAS2M,SADT,IAEA3M,SAAS,MAFT,IAGAA,SAAS,QAHT,IAIAA,SAAS,SAJT,IAKAA,SAAS,MALT,IAMAA,SAAS,QANT,IAOAA,SAAS,OAPT,IAQAuM,QAAQzG,GAAR,CAAY9F,IAAZ,CARA,IASAA,KAAKuJ,QATL,IAUAvJ,KAAKU,SAXe;AAAA,GAAf,CAAP;AAYD;;AAGD;AACA;AACA;AACA,IAAIkM,WAAJ;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,KAACL,OAAOA,KAAKM,KAAK,SAASxD,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAAL,EAAiC,IAAjC,CAAZ,CAAD,EAAsDyD,QAAtD,CACEL,IADF,EAEE,UAASrB,GAAT,EAAc5K,IAAd,EAAoB;AAClB,aAAQ4K,GAAD,GACHwB,OAAOxB,GAAP,CADG,GAEHuB,QAAQ;AACNI,qBAAa;AAAA,iBAAML,QAAQC,OAAR,CAAgBnM,IAAhB,CAAN;AAAA,SADP;AAENwM,YAAI;AAFE,OAAR,CAFJ;AAMD,KATH;AAWD,GAZM,CAAP;AAaD;;AAGD,IAAMC,UAAW,OAAOC,KAAP,KAAiB,UAAjB,IAA+BA,KAAhC,IAA0CV,cAA1D;;AAGA;AACA;AACA,SAASW,mBAAT,CAA6BC,GAA7B,EAAkCC,OAAlC,EAA2C;AACzC,SAAOJ,QAAQG,GAAR,EACJE,IADI,CACC,UAACC,IAAD,EAAU;AACd,QAAI,CAACA,KAAKP,EAAV,EAAc;AACZ,YAAM,IAAIhJ,KAAJ,YAAmBuJ,KAAKC,MAAxB,yBAAkDJ,GAAlD,CAAN;AACD;;AAED,QAAMK,OAAO,kBAAb;AACA,QAAM9N,OAAO4N,KAAKG,OAAL,IAAgBH,KAAKG,OAAL,CAAarP,GAAb,CAAiB,cAAjB,CAA7B;;AAEA,WAAQsP,YAAYC,oBAAZ,IAAoCjO,SAAS8N,IAA9C,GACHE,YAAYC,oBAAZ,CAAiCL,IAAjC,EAAuCF,OAAvC,CADG,GAEHE,KAAKR,WAAL,GAAmBO,IAAnB,CAAwB;AAAA,aAAOK,YAAYE,WAAZ,CAAwBrH,GAAxB,EAA6B6G,OAA7B,CAAP;AAAA,KAAxB,CAFJ;AAGD,GAZI,EAaJC,IAbI,CAaC;AAAA,WAAUjD,OAAOyD,QAAjB;AAAA,GAbD,CAAP;AAcD;;AAGD,IAAMxF,OAAQ,OAAOnC,MAAP,KAAkB,WAAnB,GACTA,OAAOoC,GAAP,CAAW,cAAX,CADS,GAET,QAFJ;;IAKMsD,O;AACJ,mBAAYkC,UAAZ,EAAmC;AAAA;;AAAA,QAAXtQ,IAAW,uEAAJ,EAAI;;AAAA;;AACjC,QAAMuQ,UAAUvQ,KAAKuQ,OAAL,IAAgBvQ,KAAKuQ,OAAL,CAAajK,WAAb,EAAhC;;AAEA;AACA;AACA,SAAKuE,IAAL,IAAa;AACXwF,gBAAU,IADC;AAEXT,eAAS,IAFE;AAGXU,kBAAY,IAAI5B,GAAJ,EAHD;AAIX8B,mBAAa,IAAIrE,GAAJ,EAJF;AAKXzI,cAAQ1D,KAAK0D,MALF;AAMX+M,aAAO,CAAC,CAACzQ,KAAKyQ,KANH;AAOXC,wBAAkBH,YAAY;AAPnB,KAAb;;AAUA1M,WAAOoH,OAAP,CAAeqF,UAAf,EAA2B5L,OAA3B,CAAmC,gBAAuC;AAAA;AAAA,UAArCiM,EAAqC;AAAA;AAAA,UAAhCC,UAAgC;AAAA;AAAA,UAApBhC,QAAoB,2BAAT,EAAS;;AACxE;AACA,OAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,OAAhC,EAAyC,KAAzC,EAAgDlK,OAAhD,CAAwD;AAAA,eACtD,kBAAOiM,OAAOtK,IAAd,EAAoB,iCAApB,EAAuDA,IAAvD,CADsD;AAAA,OAAxD;;AAGA;AACA,wBAAOuI,SAASpC,KAAT,CAAe;AAAA,eAAO,CAAC,CAAC/E,GAAT;AAAA,OAAf,CAAP,EAAqC,0BAArC,EAAiEkJ,EAAjE;AACA,wBAAOhC,SAAS,CAACiC,UAAD,CAAT,CAAP,EAA+B,wBAA/B,EAAyDD,EAAzD;AACA,wBAAOhC,SAASC,QAAT,CAAP,EAA2B,wBAA3B,EAAqD+B,EAArD;;AAEA,YAAK9F,IAAL,EAAWyF,UAAX,CAAsBO,GAAtB,CAA0B,EAAEC,QAAQH,EAAV,EAAcC,sBAAd,EAA0BhC,kBAA1B,EAA1B;AACD,KAXD;;AAaA;AACA,SAAKmC,KAAL,GAAa;AACXvN,oBAAgB,KAAKwN,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CADL;AAEXrN,oBAAgB,KAAKsN,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAFL;AAGX/M,sBAAgB,KAAKiN,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAHL;AAIXG,kBAAgB,KAAKC,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAJL;AAKXK,mBAAgB,KAAKC,aAAL,CAAmBN,IAAnB,CAAwB,IAAxB,CALL;AAMXO,kBAAgB,KAAKC,YAAL,CAAkBR,IAAlB,CAAuB,IAAvB,CANL;AAOXS,kBAAgB,KAAKC,YAAL,CAAkBV,IAAlB,CAAuB,IAAvB,CAPL;AAQXW,mBAAgB,KAAKC,aAAL,CAAmBZ,IAAnB,CAAwB,IAAxB,CARL;AASXa,mBAAgB,KAAKC,aAAL,CAAmBd,IAAnB,CAAwB,IAAxB,CATL;AAUX/N,oBAAgB,KAAK8O,cAAL,CAAoBf,IAApB,CAAyB,IAAzB,CAVL;;AAYXgB,gBAAU,UAAS1R,KAAT,EAAgB;AACxB,0BAAO,OAAOA,MAAMiC,GAAb,KAAqB,UAA5B,EACE,0DADF,EAC8DjC,KAD9D;;AAGCA,2CAA4BA,qCAA7B,GACI,KAAKyR,cAAL,CAAoBzR,KAApB,CADJ,GAEI,KAAKsR,aAAL,CAAmBtR,KAAnB,CAFJ;AAGD,OAPS,CAOR0Q,IAPQ,CAOH,IAPG,CAZC;;AAqBX1O,YAAM,UAAShC,KAAT,EAAgB;AACnB,eAAOA,MAAMiC,GAAb,KAAqB,UAAtB,GACI,KAAK0P,MAAL,CAAY3R,MAAMiC,GAAN,EAAZ,CADJ,GAEI,KAAK0P,MAAL,CAAY3R,KAAZ,CAFJ;AAGD,OAJK,CAIJ0Q,IAJI,CAIC,IAJD;AArBK,KAAb;;AA4BA,SAAKkB,OAAL,GAAe,IAAf;AACD;;AAED;;;;;4BACQC,S,EAAiC;AAAA;;AAAA,UAAtBC,aAAsB,uEAAN,IAAM;;AACvC,UAAMC,OAAO,SAAPA,IAAO,GAAiB;AAAA,0CAAbC,QAAa;AAAbA,kBAAa;AAAA;;AAC5B;AACA,YAAM5B,KAAK4B,SAAS1K,GAAT,EAAX;AACA;AACA;AACA;AACA;AACA;;AAP4B,oBAQSrB,MAAMC,OAAN,CAAc8L,SAAS,CAAT,CAAd,CAAD,GAChCA,SAAS,CAAT,CADgC,CACd;AADc,UAEhC,CAAC,IAAD,EAAOA,QAAP,CAVwB;AAAA;AAAA,YAQrB3B,UARqB;AAAA;AAAA,YAQThC,QARS,0BAQE,EARF,WAUN;;AAEtB,0BAAOD,SAASC,QAAT,CAAP,iCAAwDA,QAAxD;AACA,0BAAOD,SAAS,CAACiC,UAAD,CAAT,CAAP,iCAA4DA,UAA5D;;AAEA,eAAO,YAAa;AAAA,6CAATzJ,IAAS;AAATA,gBAAS;AAAA;;AAClB,cAAMqL,WAAW5D,SAAStH,GAAT,CAAa,UAACpF,IAAD,EAAOoC,CAAP;AAAA,mBAAa,OAAKmO,KAAL,CAAWtL,KAAK7C,CAAL,CAAX,EAAoBpC,IAApB,CAAb;AAAA,WAAb,CAAjB;;AAEA,cAAIiF,KAAK/C,MAAL,GAAcwK,SAASxK,MAA3B,EAAmC;AACjCoO,qBAAShO,IAAT,oCAAiB2C,KAAKqD,KAAL,CAAWoE,SAASxK,MAAT,GAAkB+C,KAAK/C,MAAlC,CAAjB;AACD;;AAED,cAAM7D,QAAQoQ,uCAAM6B,QAAN,EAAd;;AAEA,cAAI5B,cAAcA,eAAe,MAAjC,EAAyC;AACvC,mBAAO,OAAK8B,IAAL,CAAUnS,KAAV,EAAiBqQ,UAAjB,CAAP;AACD;AACF,SAZD;AAaD,OA5BD;;AA8BA,UAAM+B,MAAM;AACV;AACAC,eAAQN,KAAK,QAAL,EAAe,UAAClM,GAAD;AAAA;;AAAA,6CAASe,IAAT;AAASA,gBAAT;AAAA;;AAAA,iBAAkB,qBAAQ0L,GAAR,kBAAYzM,GAAZ,SAAoBe,IAApB,EAAlB;AAAA,SAAf,CAFE;AAGV2L,gBAAQR,KAAK,QAAL,EAAe,UAAClM,GAAD;AAAA;;AAAA,6CAASe,IAAT;AAASA,gBAAT;AAAA;;AAAA,iBAAkB,sBAAQ4L,KAAR,mBAAc3M,GAAd,SAAsBe,IAAtB,EAAlB;AAAA,SAAf,CAHE;AAIV6L,eAAQV,KAAK,QAAL,EAAe,UAAClM,GAAD,EAAS;AAAE,gBAAM,IAAIG,KAAJ,CAAUH,GAAV,CAAN;AAAuB,SAAjD,CAJE;;AAMV;AACA6M,eAAOX,KAAK,QAAL,EAAe,QAAf,EAAyB,QAAzB,EAAmC,QAAnC,EAA6C,UAAClL,GAAD,EAAM4H,IAAN,EAAYnB,IAAZ,EAAkBqF,GAAlB,EAA0B;AAC5E,gBAAM,IAAI3M,KAAJ,CAAaa,GAAb,WAAsB4H,IAAtB,SAA8BnB,IAA9B,SAAsCqF,GAAtC,CAAN;AACD,SAFM,CAPG;;AAWV;AACAC,cAZU,kBAYHC,OAZG,EAYM;AACd,gBAAM,IAAI7M,KAAJ,4BAAmC6M,OAAnC,CAAN;AACD,SAdS;AAgBVC,aAhBU,iBAgBJC,QAhBI,EAgBM;AACd,cAAIA,QAAJ,EAAc,MAAM,IAAI/M,KAAJ,uBAA8B+M,QAA9B,CAAN;AACf,SAlBS;AAoBVC,aApBU,mBAoBF,CAAE;AApBA,OAAZ;;AAuBA,UAAMtL,MAAO,OAAOmK,SAAP,KAAqB,UAAtB,GACRA,UAAUE,IAAV,CADQ,GAERF,SAFJ;;AAIA,UAAIC,aAAJ,EAAmBpK,IAAI0K,GAAJ,GAAU9O,OAAO2P,MAAP,CAAcb,GAAd,EAAmB1K,IAAI0K,GAAvB,CAAV;AACnB,WAAK9H,IAAL,EAAW+E,OAAX,GAAqB3H,GAArB;;AAEA,aAAOA,GAAP;AACD;;;0BAEK0H,G,EAAK;AAAA;;AACT,UAAMC,UAAU,KAAK/E,IAAL,EAAW+E,OAAX,IAAsB,KAAKA,OAAL,CAAa,EAAb,CAAtC;;AAEA,aAAOF,oBAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,IAAlC,CAAuC,UAACQ,QAAD,EAAc;AAC1D,eAAKoD,MAAL,CAAYpD,QAAZ;AACA;AACD,OAHM,CAAP;AAID;;;wBAEGA,Q,EAAU;AACZ,wBAAOA,oBAAoBH,YAAYwD,QAAvC,EACE,gDADF;;AAGA,WAAKD,MAAL,CAAYpD,QAAZ;AACA,aAAO,IAAP;AACD;;;2BAEMA,Q,EAAU;AAAA;;AACf,UAAM3M,SAAS,KAAKmH,IAAL,EAAWnH,MAAX,IACA2M,SAAS8B,OAAT,CAAiBzO,MADjB,IAEC,KAAKmH,IAAL,EAAW+E,OAAX,CAAmB+C,GAAnB,IAA0B,KAAK9H,IAAL,EAAW+E,OAAX,CAAmB+C,GAAnB,CAAuBjP,MAFjE;;AAIA,wBAAO,CAAC,CAACA,MAAT,EAAiB,KACf,wEADe,GAEf,yEAFe,GAGf,kEAHF;;AAKA,WAAKyO,OAAL,GAAe9B,SAAS8B,OAAxB;AACA,WAAKtH,IAAL,EAAWwF,QAAX,GAAsBA,QAAtB;AACA,WAAKxF,IAAL,EAAWnH,MAAX,GAAoBA,MAApB;;AAEA,WAAKmH,IAAL,EAAWyF,UAAX,CAAsB5L,OAAtB,CAA8B,iBAAsC;AAAA,YAAnCoM,MAAmC,SAAnCA,MAAmC;AAAA,YAA3BF,UAA2B,SAA3BA,UAA2B;AAAA,YAAfhC,QAAe,SAAfA,QAAe;;AAClE,YAAM+B,KAAK,OAAKwB,OAAL,CAAarB,MAAb,CAAX;AACA,0BAAO,CAAC,CAACH,EAAT,YAAoBG,MAApB;;AAEA,eAAKA,MAAL,IAAe,OAAK6C,MAAL,CAAYhD,EAAZ,EAAgB/B,QAAhB,EAA0BgC,UAA1B,CAAf;AACD,OALD;AAMD;;;2BAEMD,E,EAAI/B,Q,EAAUgC,U,EAAY;AAC/B,aAAO,YAAkB;AAAA;;AAAA,2CAANzJ,IAAM;AAANA,cAAM;AAAA;;AACvB,YAAMyG,QAAQ,EAAd;AACA,YAAM4E,WAAW5D,SAAStH,GAAT,CAAa,UAACpF,IAAD,EAAOoC,CAAP;AAAA,iBAAa,OAAKoO,IAAL,CAAUvL,KAAK7C,CAAL,CAAV,EAAmBpC,IAAnB,EAAyB0L,KAAzB,CAAb;AAAA,SAAb,CAAjB;AACA,YAAIrN,cAAJ;;AAEA,YAAI4G,KAAK/C,MAAL,GAAcwK,SAASxK,MAA3B,EAAmC;AACjCoO,mBAAShO,IAAT,oCAAiB2C,KAAKqD,KAAL,CAAWoE,SAASxK,MAAT,GAAkB+C,KAAK/C,MAAlC,CAAjB;AACD;;AAED,YAAI;AACF7D,kBAAQoQ,uCAAM6B,QAAN,EAAR;AACD,SAFD,CAEE,OAAO7E,GAAP,EAAY;AACZ,gBAAM,wBAASA,GAAT,CAAN;AACD;;AAEDC,cAAMlJ,OAAN,CAAc;AAAA,iBAAO,OAAKwN,MAAL,CAAY0B,GAAZ,CAAP;AAAA,SAAd;;AAEA,YAAIhD,cAAcA,eAAe,MAAjC,EAAyC;AACvC,iBAAO,KAAK6B,KAAL,CAAWlS,KAAX,EAAkBqQ,UAAlB,CAAP;AACD;AACF,OApBD;AAqBD;;AAED;;;;yBACKrQ,K,EAAO2B,I,EAAM0L,K,EAAO;AACvB,wBAAO,CAAC,CAAC1L,IAAT,EAAe,6CAAf;;AAEA,UAAIA,SAAS,QAAT,IAAqBuM,QAAQzG,GAAR,CAAY9F,IAAZ,CAAzB,EAA4C,OAAO3B,KAAP;AAC5C,UAAI2B,SAAS,SAAT,IAAsBA,SAAS,MAAnC,EAA2C,OAAO,CAAC,CAAC3B,KAAT;AAC3C,UAAI2B,SAAS,QAAb,EAAuB,OAAO,KAAKqP,aAAL,CAAmBhR,KAAnB,EAA0BqN,KAA1B,CAAP;AACvB,UAAI1L,SAAS,OAAb,EAAsB,OAAO,KAAKuP,YAAL,CAAkBlR,KAAlB,EAAyBqN,KAAzB,CAAP;AACtB,UAAI1L,KAAKuJ,QAAT,EAAmB,OAAO,KAAKoG,aAAL,CAAmBtR,KAAnB,EAA0B2B,IAA1B,CAAP;AACnB,UAAIA,KAAKU,SAAT,EAAoB,OAAO,KAAKoP,cAAL,CAAoBzR,KAApB,CAAP;;AAEpB,YAAM,IAAIgG,KAAJ,sBAA6BgB,KAAKC,SAAL,CAAetF,IAAf,CAA7B,CAAN;AACD;;AAED;;;;0BACM3B,K,EAAO2B,I,EAAM;AACjB,wBAAO,CAAC,CAACA,IAAT,EAAe,6CAAf;;AAEA,UAAIA,SAAS,QAAT,IAAqBuM,QAAQzG,GAAR,CAAY9F,IAAZ,CAAzB,EAA4C,OAAO3B,KAAP;AAC5C,UAAI2B,SAAS,SAAT,IAAsBA,SAAS,MAAnC,EAA2C,OAAO,CAAC,CAAC3B,KAAT;AAC3C,UAAI2B,SAAS,QAAb,EAAuB,OAAO,KAAKmP,YAAL,CAAkB9Q,KAAlB,CAAP;AACvB,UAAI2B,KAAKuJ,QAAT,EAAmB,OAAO,KAAKkG,YAAL,CAAkBpR,KAAlB,EAAyB2B,IAAzB,CAAP;AACnB,UAAIA,KAAKU,SAAT,EAAoB,OAAO,KAAKmP,aAAL,CAAmBxR,KAAnB,EAA0B2B,IAA1B,CAAP;;AAEpB,YAAM,IAAIqE,KAAJ,sBAA6BgB,KAAKC,SAAL,CAAetF,IAAf,CAA7B,CAAN;AACD;;;+BAEUnC,I,EAAM;AACf,wBAAO,CAAC,CAAC,KAAKoS,OAAL,CAAaF,QAAf,IAA2B,CAAC,CAAC,KAAKE,OAAL,CAAa0B,UAAjD,EACE,wEADF;;AAGA,UAAMD,MAAM,KAAKzB,OAAL,CAAaF,QAAb,CAAsBlS,IAAtB,CAAZ;AACA,wBAAO,CAAC,CAAC6T,GAAT,EAAc,iBAAd;;AAEA,UAAI,KAAK/I,IAAL,EAAW4F,KAAf,EAAsBqD,QAAQjB,GAAR,CAAY,qBAAZ,EAAmCe,GAAnC,EAAwC7T,IAAxC;AACtB,WAAK8K,IAAL,EAAW2F,WAAX,CAAuB9P,GAAvB,CAA2BkT,GAA3B,EAAgC7T,IAAhC;;AAEA,aAAO6T,GAAP;AACD;;;2BAEMA,G,EAAKG,O,EAAS;AACnB,UAAMhU,OAAOgU,WAAW,KAAKlJ,IAAL,EAAW2F,WAAX,CAAuB5P,GAAvB,CAA2BgT,GAA3B,CAAxB;AACA,UAAI,KAAK/I,IAAL,EAAW4F,KAAf,EAAsBqD,QAAQjB,GAAR,CAAY,oBAAZ,EAAkCe,GAAlC,EAAuC7T,IAAvC;;AAEtB,WAAKoS,OAAL,CAAa0B,UAAb,CAAwBD,GAAxB,EAA6B7T,IAA7B;AACA,WAAK8K,IAAL,EAAW2F,WAAX,CAAuBwD,MAAvB,CAA8BJ,GAA9B;AACD;;;2BAEM9L,K,EAAO1D,M,EAAQ;AACpB,aAAO,IAAIpB,QAAJ,CAAa,KAAK6H,IAAL,EAAWnH,MAAX,CAAkBT,MAA/B,EAAuC6E,KAAvC,EAA8C1D,MAA9C,CAAP;AACD;;;mCAEcgC,G,EAAK;AAClB,UAAM6N,UAAW,KAAKpJ,IAAL,EAAW6F,gBAAZ,GACZ,sBAAOtK,GAAP,EAAY,QAAZ,CADY,GAEZ,sBAAOA,GAAP,CAFJ;;AAIA,UAAM+C,MAAO,KAAK0B,IAAL,EAAW6F,gBAAZ,GACRuD,QAAQxQ,UAAR,GAAqB,CADb,CACgB;AADhB,QAERwQ,QAAQxQ,UAAR,GAAqB,CAFzB,CALkB,CAOU;;AAE5B,UAAMsF,MAAM,IAAIpF,UAAJ,CAAe,IAAInD,WAAJ,CAAgB2I,GAAhB,CAAf,CAAZ;;AAEA,UAAI,KAAK0B,IAAL,EAAW6F,gBAAf,EAAiC;AAC/B,YAAMwD,SAASD,QAAQxQ,UAAR,GAAqB,CAApC;AACC,YAAIT,QAAJ,CAAa+F,IAAI9F,MAAjB,CAAD,CAA2BE,SAA3B,CAAqC,CAArC,EAAwC+Q,MAAxC,EAAgD,IAAhD;AACAnL,YAAIrI,GAAJ,CAAQuT,OAAR,EAAiB,CAAjB;AACD,OAJD,MAIO;AACLlL,YAAIrI,GAAJ,CAAQuT,OAAR,EAAiB,CAAjB;AACAlL,YAAII,MAAM,CAAV,IAAe,CAAf;AACD;;AAED,aAAOJ,GAAP;AACD;;;mCAEczI,I,EAAM;AACnB,UAAMyI,MAAM,wBAAazI,IAAb,CAAZ;;AAEA,aAAQ,KAAKuK,IAAL,EAAW6F,gBAAZ,GACH,sBAAO3H,IAAIoL,QAAJ,CAAa,CAAb,CAAP,EAAwB,QAAxB,CADG,GAEH,sBAAOpL,IAAIoL,QAAJ,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAP,CAFJ;AAGD;;;qCAEgBP,G,EAAK;AACpB;AACA,UAAI,KAAK/I,IAAL,EAAW6F,gBAAf,EAAiC;AAC/B,YAAM0D,SAAS,KAAKC,MAAL,GAAcvR,SAAd,CAAwB8Q,GAAxB,EAA6B,IAA7B,CAAf,CAD+B,CACoB;AACnD,YAAMzK,MAAM,IAAKiL,SAAS,CAA1B;;AAEA,eAAO,KAAKC,MAAL,CAAYT,GAAZ,EAAiBzK,GAAjB,CAAP;AACD;;AAED;AACA,UAAMzF,SAAS,IAAIC,UAAJ,CAAe,KAAKkH,IAAL,EAAWnH,MAAX,CAAkBT,MAAjC,CAAf;;AAEA,UAAI8G,MAAM6J,GAAV;AACA,aAAOlQ,OAAOqG,GAAP,CAAP;AAAoB,UAAEA,GAAF;AAApB,OAEA,OAAO,KAAKsK,MAAL,CAAYT,GAAZ,EAAkB7J,MAAM6J,GAAN,GAAY,CAA9B,CAAP;AACD;;;iCAEYA,G,EAAK;AAChB,aAAO,KAAK1C,cAAL,CAAoB,KAAKC,gBAAL,CAAsByC,GAAtB,CAApB,CAAP;AACD;;;kCAEaxN,G,EAAKwH,K,EAAO;AACxB,UAAM7E,MAAM,KAAKiI,cAAL,CAAoB5K,GAApB,CAAZ;;AAEA,UAAMwN,MAAM,KAAKU,UAAL,CAAgBvL,IAAItF,UAApB,CAAZ;AACA,UAAImK,KAAJ,EAAWA,MAAMpJ,IAAN,CAAWoP,GAAX;;AAEX,UAAMlQ,SAAS,IAAIC,UAAJ,CAAe,KAAKkH,IAAL,EAAWnH,MAAX,CAAkBT,MAAjC,CAAf;AACAS,aAAOhD,GAAP,CAAWqI,GAAX,EAAgB6K,GAAhB;;AAEA,aAAOA,GAAP;AACD;;;iCAEYnM,G,EAAKmG,K,EAAO;AACvB,wBAAOnG,eAAejH,WAAf,IAA8BA,YAAYC,MAAZ,CAAmBgH,GAAnB,CAArC,EACE,mEADF;;AAGA,UAAMpD,MAAO,CAAC7D,YAAYC,MAAZ,CAAmBgH,GAAnB,CAAF,GAA6B,IAAI9D,UAAJ,CAAe8D,GAAf,CAA7B,GAAmDA,GAA/D;;AAEA,UAAM0B,MAAO,KAAK0B,IAAL,EAAW6F,gBAAZ,GACRrM,IAAIZ,UAAJ,GAAiB,EADT,CACY;AADZ,QAERY,IAAIZ,UAFR;;AAIA,UAAMmQ,MAAM,KAAKU,UAAL,CAAgBnL,GAAhB,CAAZ;AACA,UAAIyE,KAAJ,EAAWA,MAAMpJ,IAAN,CAAWoP,GAAX;;AAEX,UAAMlQ,SAAS,IAAIC,UAAJ,CAAe,KAAKkH,IAAL,EAAWnH,MAAX,CAAkBT,MAAjC,CAAf;AACA,UAAMF,OAAO,wBAAasB,GAAb,CAAb;;AAEA,UAAI,KAAKwG,IAAL,EAAW6F,gBAAf,EAAiC;AAC/B,aAAK2D,MAAL,GAAclR,SAAd,CAAwByQ,MAAM,CAA9B,EAAiCA,MAAM,CAAvC,EAA0C,IAA1C,EAD+B,CACyB;AACxD,aAAKS,MAAL,GAAclR,SAAd,CAAwByQ,MAAM,CAA9B,EAAiCvP,IAAID,MAArC,EAA6C,IAA7C,EAF+B,CAEyB;AACxD,aAAKiQ,MAAL,GAAclR,SAAd,CAAwByQ,MAAM,CAA9B,EAAiCvP,IAAIZ,UAArC,EAAiD,IAAjD,EAH+B,CAGyB;AACxDC,eAAOhD,GAAP,CAAWqC,IAAX,EAAiB6Q,MAAM,EAAvB,EAJ+B,CAIyB;AACzD,OALD,MAKO;AACLlQ,eAAOhD,GAAP,CAAWqC,IAAX,EAAiB6Q,GAAjB;AACD;;AAED,aAAOA,GAAP;AACD;;;iCAEYA,G,EAAK/H,U,EAAY;AAC5B,wBAAO,CAAC,CAACA,UAAT,EAAqB,4BAArB;;AAEA,UAAMvL,OAAO,KAAK+T,MAAL,CAAYT,GAAZ,EAAiB/H,WAAW3L,KAA5B,CAAb;AACA,UAAMmL,SAASQ,WAAWzL,IAAX,CAAgBE,IAAhB,EAAsB,KAAKyQ,KAA3B,CAAf;;AAEA,aAAO1F,MAAP;AACD;;;kCAEa9K,K,EAAOgU,I,EAAM;AACzB;AACA,UAAI,CAAC,iBAAMhU,KAAN,CAAD,IAAiBA,MAAMiC,GAAvB,IAA8BjC,MAAMiC,GAAN,EAAlC,EAA+C,OAAOjC,MAAMiC,GAAN,EAAP;;AAE/C,UAAMqJ,aAAa0I,QAAQhU,MAAM+K,WAAjC;AACA,UAAMsI,MAAM,KAAKU,UAAL,CAAgBzI,WAAW3L,KAA3B,CAAZ;AACA,UAAMI,OAAO,KAAK+T,MAAL,CAAYT,GAAZ,EAAiB/H,WAAW3L,KAA5B,CAAb;;AAEA2L,iBAAWxL,KAAX,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B,KAAKwQ,KAAnC;;AAEA,aAAO6C,GAAP;AACD;;;kCAEaA,G,EAAKY,O,EAAS;AAC1B,wBAAO,CAAC,CAACA,OAAT,EAAkB,uBAAlB;;AAEA;AACA,UAAMlU,OAAO,KAAK+T,MAAL,CAAYT,GAAZ,EAAiBY,QAAQtS,IAAR,CAAahC,KAA9B,CAAb;;AAEA;AACA,UAAIsU,QAAQtS,IAAR,CAAauJ,QAAb,IAAyB+I,QAAQtS,IAAR,CAAaU,SAA1C,EAAqD;AACnD,eAAO4R,QAAQpU,IAAR,CAAaE,IAAb,EAAmB,KAAKyQ,KAAxB,CAAP;AACD;;AAED,UAAMrO,UAAU,mBAAY8R,QAAQtS,IAApB,CAAhB;AACAQ,cAAQpC,IAAR,GAAeA,IAAf;AACAoC,cAAQN,OAAR,GAAkB,KAAK2O,KAAvB;;AAEA,aAAOrO,OAAP;AACD;;;mCAEcA,O,EAAS;AACtB,UAAIA,QAAQF,GAAR,EAAJ,EAAmB,OAAOE,QAAQF,GAAR,EAAP;;AAEnBE,cAAQN,OAAR,GAAkB,KAAK2O,KAAvB;;AAEA;AACA,UAAMhR,OAAO2C,QAAQ3C,IAAR,EAAb;AACA,UAAM8C,OAAO,KAAKyR,UAAL,CAAgBvU,IAAhB,CAAb;AACA,UAAMO,OAAO,KAAK+T,MAAL,CAAYxR,IAAZ,EAAkB9C,IAAlB,CAAb;;AAEA2C,cAAQpC,IAAR,GAAeA,IAAf;AACAoC,cAAQ+R,MAAR;;AAEA,aAAO5R,IAAP;AACD;;;;;;AAIH,SAASwL,KAAT,CAAegC,QAAf,EAAyBS,MAAzB,EAAmE;AAAA,MAAlCF,UAAkC,uEAArB,IAAqB;AAAA,MAAfhC,QAAe,uEAAJ,EAAI;;AACjE,oBAAOyB,oBAAoBH,YAAYwD,QAAvC,EACE,gDADF;;AAGA,MAAMtR,UAAU,IAAIgM,OAAJ,qBAAe0C,MAAf,EAAwB,CAACF,UAAD,EAAahC,QAAb,CAAxB,EAAhB;AACAxM,UAAQsS,GAAR,CAAYrE,QAAZ;;AAEA,SAAOjO,QAAQ0O,MAAR,EAAgBG,IAAhB,CAAqB7O,OAArB,CAAP;AACD;;AAED,SAASkM,KAAT,CAAe+B,QAAf,EAAyBS,MAAzB,EAA4E;AAAA;;AAAA,MAA3CF,UAA2C,uEAA9B,IAA8B;AAAA,MAAxBhC,QAAwB,uEAAb,EAAa;;AAC1E,oBAAOyB,oBAAoBH,YAAYwD,QAAvC,EACE,gDADF;;AAGA,MAAMtR,UAAU,IAAIgM,OAAJ,qBAAe0C,MAAf,EAAwB,CAACF,UAAD,EAAahC,QAAb,CAAxB,EAAhB;AACAxM,UAAQsS,GAAR,CAAYrE,QAAZ;;AAL0E,qCAANlJ,IAAM;AAANA,QAAM;AAAA;;AAO1E,SAAO,2BAAQ2J,MAAR,GAAgB1I,IAAhB,yBAAqBhG,OAArB,SAAiC+E,IAAjC,EAAP;AACD;;QAGQiH,O,GAAAA,O;QAASC,K,GAAAA,K;QAAOC,K,GAAAA,K;;;;;;;;;;;;;;;;;;;AClfzB;;;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGA;AACA,IAAMzD,OAAQ,OAAOnC,MAAP,KAAkB,WAAnB,GACTA,OAAOoC,GAAP,CAAW,aAAX,CADS,GAET,QAFJ;;AAKA,SAAS6J,SAAT,CAAmBC,UAAnB,EAA+BnQ,MAA/B,EAAuC;AACrC,MAAM8G,SAAS,EAAf;;AAEAqJ,aAAWlQ,OAAX,CAAmB,UAACxC,IAAD,EAAOoC,CAAP,EAAa;AAC9BiH,WAAOjH,CAAP,IAAY,sBAAUpC,IAAV,CAAZ;AACD,GAFD;;AAIA,MAAM2S,QAAQ,qBAAWtJ,MAAX,CAAd;;AAEA,SAAQ9G,MAAD,GACH,IAAIoQ,KAAJ,CAAUpQ,MAAV,CADG,GAEHoQ,KAFJ;AAGD;;AAGD,SAASC,UAAT,CAAoBnS,OAApB,EAA6BoS,aAA7B,EAA4C;AAC1C,MAAM7S,OAAO,sBAAUS,OAAV,CAAb;;AAEA,MAAMqS,OAAO,qBAAW;AACtBpB,SAAK,aAAMlR,OAAN,CAAcR,IAAd,CADiB;AAEtB+S,SAAK,OAFiB;AAGtB7Q,YAAQ;AACR;AAJsB,GAAX,CAAb;;AAOAP,SAAOC,cAAP,CAAsBkR,KAAKjR,SAA3B,EAAsC,QAAtC,EAAgD;AAC9CC,gBAAY,IADkC;;AAG9CpD,OAH8C,iBAGxC;AACJ,UAAM8C,SAAS,KAAKmH,IAAL,EAAWvK,IAAX,CAAgB2C,MAA/B;AACA,UAAMb,UAAU,KAAKyI,IAAL,EAAWzI,OAA3B;;AAEA,UAAM8S,YAAY,sBAAU,CAAChT,IAAD,EAAO,KAAKkC,MAAZ,CAAV,CAAlB;AACA,UAAM9D,OAAO,IAAI0C,QAAJ,CAAaU,MAAb,EAAqB,KAAKkQ,GAAL,CAASpR,GAAT,EAArB,EAAqC0S,UAAUhV,KAA/C,CAAb;;AAEA,aAAOgV,UAAU9U,IAAV,CAAeE,IAAf,EAAqB8B,OAArB,CAAP;AACD,KAX6C;AAa9C1B,OAb8C,eAa1C+D,MAb0C,EAalC;AACV,WAAKmP,GAAL,GAAW,mBAAY,CAAC1R,IAAD,EAAOuC,OAAOL,MAAd,CAAZ,EAAmCK,MAAnC,CAAX;AACA,WAAKL,MAAL,GAAcK,OAAOL,MAArB;AACA,WAAK6Q,GAAL,GAAWxQ,OAAOL,MAAlB;AACD;AAjB6C,GAAhD;;AAoBA,yBAAY4Q,IAAZ;AACA,0BAAaA,IAAb;;AA/B0C,MAiCpCG,MAjCoC;AAAA;;AAkCxC,oBAAY1Q,MAAZ,EAAoB;AAAA;;AAAA;;AAElB,UAAIA,MAAJ,EAAY,MAAKA,MAAL,GAAcA,MAAd;AAFM;AAGnB;;AArCuC;AAAA;AAAA,6BAuCjC;AACL,6GAAW,IAAX,EADK,CACa;AACnB;AAzCuC;;AAAA;AAAA,IAiCrBuQ,IAjCqB;;AA4C1C,SAAQD,aAAD,GACH,IAAII,MAAJ,CAAWJ,aAAX,CADG,GAEHI,MAFJ;AAGD;;AAGD,SAASC,SAAT,CAAmBzS,OAAnB,EAA4BoS,aAA5B,EAA2C;AACzC,MAAM7S,OAAO,sBAAUS,OAAV,CAAb;;AAEA,MAAMqS,OAAO,qBAAW;AACtBpB,SAAK,aAAMlR,OAAN,CAAcR,IAAd,CADiB;AAEtBkC,YAAQ;AACR;AAHsB,GAAX,CAAb;;AAMAP,SAAOC,cAAP,CAAsBkR,KAAKjR,SAA3B,EAAsC,QAAtC,EAAgD;AAC9CC,gBAAY,IADkC;;AAG9CpD,OAH8C,iBAGxC;AACJ,UAAM8C,SAAS,KAAKmH,IAAL,EAAWvK,IAAX,CAAgB2C,MAA/B;AACA,UAAMb,UAAU,KAAKyI,IAAL,EAAWzI,OAA3B;;AAEA,UAAM8S,YAAY,sBAAU,CAAChT,IAAD,EAAO,KAAKkC,MAAZ,CAAV,CAAlB;AACA,UAAM9D,OAAO,IAAI0C,QAAJ,CAAaU,MAAb,EAAqB,KAAKkQ,GAAL,CAASpR,GAAT,EAArB,EAAqC0S,UAAUhV,KAA/C,CAAb;;AAEA,aAAOgV,UAAU9U,IAAV,CAAeE,IAAf,EAAqB8B,OAArB,CAAP;AACD,KAX6C;AAa9C1B,OAb8C,eAa1C+D,MAb0C,EAalC;AACV,WAAKmP,GAAL,GAAW,mBAAY,CAAC1R,IAAD,EAAOuC,OAAOL,MAAd,CAAZ,EAAmCK,MAAnC,CAAX;AACA,WAAKL,MAAL,GAAcK,OAAOL,MAArB;AACD;AAhB6C,GAAhD;;AAmBA,yBAAY4Q,IAAZ;AACA,0BAAaA,IAAb;;AA7ByC,MA+BnCK,KA/BmC;AAAA;;AAgCvC,mBAAY5Q,MAAZ,EAAoB;AAAA;;AAAA;;AAElB,UAAIA,MAAJ,EAAY,OAAKA,MAAL,GAAcA,MAAd;AAFM;AAGnB;;AAnCsC;AAAA;AAAA,6BAqChC;AACL,2GAAW,IAAX,EADK,CACa;AACnB;AAvCsC;;AAAA;AAAA,IA+BrBuQ,IA/BqB;;AA0CzC,SAAQD,aAAD,GACH,IAAIM,KAAJ,CAAUN,aAAV,CADG,GAEHM,KAFJ;AAGD;;AAGD,SAASC,UAAT,GAAsB;AACpB,MAAMN,OAAO,qBAAW;AACtBpB,SAAK,aAAMlR,OAAN,CAAc,IAAd,CADiB;AAEtB0B,YAAQ,OAFc;AAGtB6Q,SAAK;AACL;AAJsB,GAAX,CAAb;;AAOApR,SAAOC,cAAP,CAAsBkR,KAAKjR,SAA3B,EAAsC,OAAtC,EAA+C;AAC7CC,gBAAY,IADiC;;AAG7CpD,OAH6C,iBAGvC;AACJ,UAAM8C,SAAS,KAAKmH,IAAL,EAAWvK,IAAX,CAAgB2C,MAA/B;AACA,UAAM8F,MAAM,IAAIpF,UAAJ,CAAeD,MAAf,EAAuB,KAAKkQ,GAAL,CAASpR,GAAT,EAAvB,EAAuC,KAAK4B,MAA5C,CAAZ;;AAEA,aAAO,sBAAO2E,GAAP,CAAP;AACD,KAR4C;AAU7CrI,OAV6C,eAUzC0F,GAVyC,EAUpC;AACP,UAAM2C,MAAM,sBAAO3C,GAAP,CAAZ;;AAEA,WAAKwN,GAAL,GAAW,mBAAY,CAAC,IAAD,EAAO7K,IAAI3E,MAAX,CAAZ,EAAgC2E,GAAhC,CAAX;AACA,WAAK3E,MAAL,GAAc2E,IAAI3E,MAAlB;AACA,WAAK6Q,GAAL,GAAclM,IAAI3E,MAAlB;AACD;AAhB4C,GAA/C;;AAmBA,0BAAa4Q,IAAb;;AA3BoB,MA6BdO,WA7Bc;AAAA;;AA8BlB,yBAAYhV,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,UAAIA,KAAJ,EAAW,OAAKA,KAAL,GAAaA,KAAb;AAFM;AAGlB;;AAjCiB;AAAA;AAAA,6BAmCX;AACL,uHAAW,IAAX,EADK,CACa;AACnB;AArCiB;;AAAA;AAAA,IA6BMyU,IA7BN;;AAwCpB,SAAOO,WAAP;AACD;;AAGD,SAASC,OAAT,GAAmB;AACjB,MAAMR,OAAO,qBAAW;AACtBpB,SAAK,aAAMlR,OAAN,CAAc,IAAd,CADiB;AAEtB0B,YAAQ;AACR;AAHsB,GAAX,CAAb;;AAMAP,SAAOC,cAAP,CAAsBkR,KAAKjR,SAA3B,EAAsC,OAAtC,EAA+C;AAC7CC,gBAAY,IADiC;;AAG7CpD,OAH6C,iBAGvC;AACJ,UAAM8C,SAAS,KAAKmH,IAAL,EAAWvK,IAAX,CAAgB2C,MAA/B;AACA,UAAM8F,MAAM,IAAIpF,UAAJ,CAAeD,MAAf,EAAuB,KAAKkQ,GAAL,CAASpR,GAAT,EAAvB,EAAuC,KAAK4B,MAA5C,CAAZ;;AAEA,aAAO,sBAAO2E,GAAP,CAAP;AACD,KAR4C;AAU7CrI,OAV6C,eAUzC0F,GAVyC,EAUpC;AACP,UAAM2C,MAAM,sBAAO3C,GAAP,CAAZ;;AAEA,WAAKwN,GAAL,GAAW,mBAAY,CAAC,IAAD,EAAO7K,IAAI3E,MAAX,CAAZ,EAAgC2E,GAAhC,CAAX;AACA,WAAK3E,MAAL,GAAc2E,IAAI3E,MAAlB;AACD;AAf4C,GAA/C;;AAkBA,0BAAa4Q,IAAb;;AAzBiB,MA2BXS,QA3BW;AAAA;;AA4Bf,sBAAYlV,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,UAAIA,KAAJ,EAAW,OAAKA,KAAL,GAAaA,KAAb;AAFM;AAGlB;;AA/Bc;AAAA;AAAA,6BAiCR;AACL,iHAAW,IAAX,EADK,CACa;AACnB;AAnCc;;AAAA;AAAA,IA2BMyU,IA3BN;;AAsCjB,SAAOS,QAAP;AACD;;AAGD,SAASC,UAAT,CAAoB/S,OAApB,EAA6D;AAAA,MAAhCgT,aAAgC,uEAAhB,KAAgB;AAAA,MAATC,OAAS;;AAC3D,MAAM1T,OAAO,sBAAUS,OAAV,CAAb;AACA,MAAIkT,qBAAJ;;AAEA,MAAID,OAAJ,EAAaC,eAAe,sBAAaD,UAAU,CAAvB,CAAf,CAAb,KACK,IAAI1T,KAAK/B,SAAL,KAAmB,CAAvB,EAA0B0V,eAAe,OAAf,CAA1B,KACA,IAAI3T,KAAK/B,SAAL,KAAmB,CAAvB,EAA0B0V,eAAe,QAAf,CAA1B,KACAA,eAAe,QAAf;;AAEL,MAAMtK,SAAUoK,aAAD,GACX,EAAEpV,OAAO2B,IAAT,EADW,GAEX,EAAE2T,0BAAF,EAAgBtV,OAAO2B,IAAvB,EAFJ;;AAIA,MAAM8S,OAAO,qBAAWzJ,MAAX,CAAb;;AAb2D,MAerDuK,UAfqD;AAAA;;AAgBzD,wBAAYvV,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAKsV,YAAL,GAAqB,iBAAMtV,KAAN,CAAD,GAAiB,CAAjB,GAAqB,CAAzC;AAHiB;AAIlB;;AApBwD;AAAA;AAAA,+BA8BhD;AACP,eAAQ,kBAAkBgL,MAAnB,GAA6B,CAAC,CAAC,KAAKsK,YAApC,GAAmD,CAAC,CAAC,KAAKtV,KAAjE;AACD;AAhCwD;AAAA;AAAA,+BAkChD;AACP,eAAO,CAAC,KAAKwV,MAAL,EAAR;AACD;AApCwD;AAAA;AAAA,6BAsClD3O,GAtCkD,EAsC7C;AACV,YAAI,CAAC,KAAK2O,MAAL,EAAL,EAAoB,MAAM,IAAIxP,KAAJ,CAAUa,GAAV,CAAN;AACpB,eAAO,KAAK7G,KAAZ;AACD;AAzCwD;AAAA;AAAA,+BA2ChD;AACP,YAAI,CAAC,KAAKwV,MAAL,EAAL,EAAoB,MAAM,IAAIxP,KAAJ,CAAU,uBAAV,CAAN;AACpB,eAAO,KAAKhG,KAAZ;AACD;AA9CwD;AAAA;AAAA,+BAgDhDyV,YAhDgD,EAgDlC;AACrB,eAAQ,KAAKD,MAAL,EAAD,GAAkB,KAAKxV,KAAvB,GAA+ByV,YAAtC;AACD;AAlDwD;AAAA;AAAA,mCAoD5CrF,EApD4C,EAoDxC;AACf,eAAQ,KAAKoF,MAAL,EAAD,GAAkB,KAAKxV,KAAvB,GAA+BoQ,IAAtC;AACD;AAtDwD;AAAA;AAAA,2BAsB7CpQ,KAtB6C,EAsBtC;AACjB,eAAO,IAAIuV,UAAJ,CAAevV,KAAf,CAAP;AACD;AAxBwD;AAAA;AAAA,6BA0B3C;AACZ,eAAO,IAAIuV,UAAJ,EAAP;AACD;AA5BwD;;AAAA;AAAA,IAelCd,IAfkC;;AAyD3D,SAAOc,UAAP;AACD;;AAGD,SAASG,QAAT,CAAkBhO,GAAlB,EAAoC;AAAA,MAAb2N,OAAa,uEAAH,CAAG;;AAClC,MAAMM,WAAWrS,OAAO0E,mBAAP,CAA2BN,GAA3B,CAAjB;AACA,MAAMkO,SAASD,SAAS5O,GAAT,CAAa;AAAA,WAAQ,sBAAUW,IAAI5B,IAAJ,CAAV,CAAR;AAAA,GAAb,CAAf;AACA,MAAMwP,eAAe,sBAAaD,UAAU,CAAvB,CAArB;;AAEA,MAAM/J,aAAa,qBAAW;AAC5BgK;AACA;AAF4B,GAAX,CAAnB;;AALkC,MAU5BO,IAV4B;AAAA;;AAWhC,kBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAEnB,UAAIA,OAAJ,EAAa,OAAKC,IAAL,CAAUD,OAAV;AAFM;AAGpB;;AAd+B;AAAA;AAAA,2BAgB3BA,OAhB2B,EAgBlB;AACZ,0BAAOxS,OAAO0S,IAAP,CAAYF,OAAZ,EAAqBjS,MAArB,KAAgC,CAAvC,EAA0C,8BAA1C;;AADY,8CAGUP,OAAOoH,OAAP,CAAeoL,OAAf,EAAwB,CAAxB,CAHV;AAAA,YAGLhQ,IAHK;AAAA,YAGC9F,KAHD;;AAKZ,aAAKsV,YAAL,GAAoBK,SAASjJ,OAAT,CAAiB5G,IAAjB,CAApB;AACA,aAAK9F,KAAL,GAAaA,KAAb;AACD;AAvB+B;AAAA;AAAA,4BAyB1B;AACJ,YAAMiW,MAAM,KAAKX,YAAjB;AACA,0BAAOW,OAAON,SAAS9R,MAAvB,EAA+B,wCAA/B;AACA,eAAOoS,GAAP;AACD;AA7B+B;AAAA;AAAA,6BA+BT;AAAA,YAAlBrL,QAAkB,uEAAP,KAAO;;AACrB,YAAMjJ,OAAOiU,OAAO,KAAKK,GAAL,EAAP,CAAb;;AAEA,YAAIrL,YAAYjJ,KAAKU,SAAjB,IAA8BV,KAAKuJ,QAAvC,EAAiD;AAC/C,eAAKlL,KAAL,CAAWgC,IAAX,CAAgB4I,QAAhB;AACD;;AAED,aAAKN,IAAL,EAAWzI,OAAX,CAAmBG,IAAnB,CAAwB,KAAKC,GAAL,EAAxB,EAAoC4T,KAAKlW,KAAzC;AACA,aAAK2K,IAAL,EAAWzI,OAAX,GAAqB,IAArB;AACA,aAAKyI,IAAL,EAAWvK,IAAX,GAAkB,IAAlB;AACD;AAzC+B;AAAA;AAAA,6BA2CzB;AACL,eAAO4V,SAAS,KAAKM,GAAL,EAAT,CAAP;AACD;AA7C+B;AAAA;AAAA,yBA+C7BnQ,IA/C6B,EA+CvB;AACP,eAAQ6P,SAASjJ,OAAT,CAAiB5G,IAAjB,MAA2B,KAAKmQ,GAAL,EAAnC;AACD;AAjD+B;AAAA;AAAA,4BAmD1BC,IAnD0B,EAmDpB;AACV,YAAMpQ,OAAO6P,SAAS,KAAKM,GAAL,EAAT,CAAb;AACA,YAAME,MAAM,KAAKnW,KAAjB;;AAEA,YAAI8F,QAAQoQ,IAAZ,EAAkB;AAChB,iBAAQ,OAAOA,KAAKpQ,IAAL,CAAP,KAAsB,UAAvB,GAAqCoQ,KAAKpQ,IAAL,EAAWqQ,GAAX,CAArC,GAAuDD,KAAKpQ,IAAL,CAA9D;AACD;;AAED,YAAI,OAAOoQ,IAAX,EAAiB;AACf,iBAAQ,OAAOA,KAAK3I,CAAZ,KAAkB,UAAnB,GAAiC2I,KAAK3I,CAAL,CAAO4I,GAAP,CAAjC,GAA+CD,KAAK3I,CAA3D;AACD;AACF;AA9D+B;AAAA;AAAA,4BAgEnBxN,IAhEmB,EAgEb+K,MAhEa,EAgELjJ,OAhEK,EAgEI;AAClC,YAAI,iBAAMiJ,MAAN,KAAiB,CAACA,OAAOC,WAAP,CAAmBG,QAAzC,EAAmD;AACjDJ,mBAAS,IAAI+K,IAAJ,CAAS/K,MAAT,CAAT;AACD;;AAED,YAAMmL,MAAMnL,OAAOmL,GAAP,EAAZ;AACA,YAAMtU,OAAOiU,OAAOK,GAAP,CAAb;AACA,YAAIjW,QAAS8K,OAAO7I,GAAP,EAAD,GAAiB6I,OAAO9K,KAAxB,GAAgC8K,OAAOR,IAAP,EAAaG,IAAb,CAAkBzK,KAA9D;;AAEA,YAAI2B,KAAKuJ,QAAL,KAAkB,iBAAMlL,KAAN,KAAgB,CAACA,MAAM+K,WAAN,CAAkBG,QAArD,CAAJ,EAAoE;AAClElL,kBAAQ,IAAI2B,IAAJ,CAAS3B,KAAT,CAAR;AACD;;AAED,YAAMoW,UAAU,kBAAOrW,IAAP,EAAa,CAAb,EAAgBuV,aAAa3V,KAA7B,CAAhB;AACA2V,qBAAaxV,KAAb,CAAmBsW,OAAnB,EAA4BH,GAA5B;;AAEA,YAAMI,UAAU,kBAAOtW,IAAP,EAAauV,aAAa3V,KAA1B,EAAiCgC,KAAKhC,KAAtC,CAAhB;AACAgC,aAAK7B,KAAL,CAAWuW,OAAX,EAAoBrW,KAApB,EAA2B6B,OAA3B;;AAEAiJ,eAAOR,IAAP,EAAavK,IAAb,GAAoBA,IAApB;AACA+K,eAAOR,IAAP,EAAazI,OAAb,GAAuBA,OAAvB;AACD;AArF+B;;AAAA;AAAA,IAUfyJ,UAVe;;AAwFlChI,SAAOC,cAAP,CAAsBsS,KAAKrS,SAA3B,EAAsC,OAAtC,EAA+C;AAC7CC,gBAAY,IADiC;;AAG7CpD,OAH6C,iBAGvC;AACJ,UAAM8C,SAAS,KAAKmH,IAAL,EAAWvK,IAAX,CAAgB2C,MAA/B;AACA,UAAMb,UAAU,KAAKyI,IAAL,EAAWzI,OAA3B;;AAEA,UAAMF,OAAOiU,OAAO,KAAKK,GAAL,EAAP,CAAb;AACA,UAAM3T,OAAO,KAAKL,GAAL,KAAaqT,aAAa3V,KAAvC;AACA,UAAMI,OAAO,IAAI0C,QAAJ,CAAaU,MAAb,EAAqBb,IAArB,EAA2BX,KAAKhC,KAAhC,CAAb;;AAEA,aAAOgC,KAAK9B,IAAL,CAAUE,IAAV,EAAgB8B,OAAhB,CAAP;AACD,KAZ4C;AAc7C1B,OAd6C,eAczCH,KAdyC,EAclC;AACT,WAAKsK,IAAL,EAAWG,IAAX,CAAgBzK,KAAhB,GAAwBA,KAAxB;AACD;AAhB4C,GAA/C;;AAmBA,MAAML,QAAQ2V,aAAa3V,KAAb,GAAqB2W,KAAKC,GAAL,gCAAYX,OAAO7O,GAAP,CAAW;AAAA,WAAKyP,EAAE7W,KAAP;AAAA,GAAX,CAAZ,EAAnC;AACA,MAAM8W,QAAQH,KAAKC,GAAL,gCAAYX,OAAO7O,GAAP,CAAW;AAAA,WAAKyP,EAAE5W,SAAP;AAAA,GAAX,CAAZ,UAA0C0V,aAAa1V,SAAvD,GAAd;;AAEAiW,OAAKlW,KAAL,GAAcA,QAAQ8W,KAAT,GACT9W,QAAQ8W,KAAR,GAAiB9W,QAAQ8W,KADhB,GAET9W,KAFJ;;AAIA,SAAOkW,IAAP;AACD;;AAGD,IAAM7H,OAAO;AACX0I,SAAQtC,SADG;AAEXuC,UAAQpC,UAFG;AAGXtK,SAAQ4K,SAHG;AAIXnR,UAAQqR,YAJG;AAKXlP,OAAQoP,SALG;AAMX2B,QAAQlB,QANG;AAOXmB,UAAQ1B,UAPG;;AASX2B,QAAM,SAASC,IAAT,CAAcpV,IAAd,EAAoB3B,KAApB,EAAoC;AAAA,sCAANP,IAAM;AAANA,UAAM;AAAA;;AACxC,WAAO,KAAK0V,6BAAWxT,IAAX,SAAoBlC,IAApB,EAAL,EAAgCO,KAAhC,CAAP;AACD,GAXU;AAYXgX,QAAM,SAASD,IAAT,CAAcpV,IAAd,EAA6B;AAAA,uCAANlC,IAAM;AAANA,UAAM;AAAA;;AACjC,WAAO,KAAK0V,6BAAWxT,IAAX,SAAoBlC,IAApB,EAAL,GAAP;AACD,GAdU;;AAgBX;AACA6U,SAAOF,SAjBI;AAkBXQ,UAAQL,UAlBG;AAmBXO,SAAOD,SAnBI;AAoBX5M,UAAQ8M,YApBG;AAqBXkC,OAAKhC,SArBM;AAsBXiC,UAAQ,SAASH,IAAT,CAAcpV,IAAd,EAAoB3B,KAApB,EAAoC;AAAA,uCAANP,IAAM;AAANA,UAAM;AAAA;;AAC1C,WAAO,KAAK0V,6BAAWxT,IAAX,SAAoBlC,IAApB,EAAL,EAAgCO,KAAhC,CAAP;AACD,GAxBU;AAyBXmX,QAAM,SAASJ,IAAT,CAAcpV,IAAd,EAAoB3B,KAApB,EAAoC;AAAA,uCAANP,IAAM;AAANA,UAAM;AAAA;;AACxC,WAAO,KAAK0V,6BAAWxT,IAAX,SAAoBlC,IAApB,EAAL,EAAgCO,KAAhC,CAAP;AACD,GA3BU;AA4BXoX,QAAM,SAASL,IAAT,CAAcpV,IAAd,EAA6B;AAAA,uCAANlC,IAAM;AAANA,UAAM;AAAA;;AACjC,WAAO,KAAK0V,6BAAWxT,IAAX,SAAoBlC,IAApB,EAAL,GAAP;AACD;AA9BU,CAAb;;kBAkCeuO,I;;;;;;;;;;;;;;;;;ACxaf;;;;AACA;;AACA;;;;;;;;;;AAGA;AACA,IAAM1D,OAAQ,OAAOnC,MAAP,KAAkB,WAAnB,GACTA,OAAOoC,GAAP,CAAW,aAAX,CADS,GAET,QAFJ;;AAKA,SAAS8M,aAAT,CAAuBjV,OAAvB,EAAgCkV,CAAhC,EAAmC;AACjC,MAAM3V,OAAO,sBAAUS,OAAV,CAAb;;AAEA,SAAO,qBAAW;AAChBc,gBAAY,OADI;AAEhBqK,OAAY,OAFI,EAEK;AACrBrJ,YAAY,CAACvC,IAAD,EAAO2V,CAAP;AAHI,GAAX,CAAP;AAKD;;AAGD,SAASC,OAAT,CAAiBnV,OAAjB,EAA0BoS,aAA1B,EAAyC;AACvC,MAAM7S,OAAO,sBAAUS,OAAV,CAAb;;AAEA,MAAMqS,OAAO,qBAAW;AACtBpB,SAAK,aAAMlR,OAAN,CAAc,MAAd,CADiB;AAEtB0B,YAAQ;AACR;AACA;AAJsB,GAAX,CAAb;;AAOAP,SAAOC,cAAP,CAAsBkR,KAAKjR,SAA3B,EAAsC,QAAtC,EAAgD;AAC9CC,gBAAY,IADkC;;AAG9CpD,OAH8C,iBAGxC;AACJ,UAAM8C,SAAS,KAAKmH,IAAL,EAAWvK,IAAX,CAAgB2C,MAA/B;AACA,UAAMb,UAAU,KAAKyI,IAAL,EAAWzI,OAA3B;;AAEA,UAAM2V,KAAK,IAAIH,aAAJ,CAAkB1V,IAAlB,EAAwB,KAAKkC,MAA7B,CAAX;AACA,UAAM9D,OAAO,IAAI0C,QAAJ,CAAaU,MAAb,EAAqB,KAAKkQ,GAAL,CAASpR,GAAT,EAArB,EAAqCuV,GAAG7X,KAAxC,CAAb;;AAEA,aAAO6X,GAAG3X,IAAH,CAAQE,IAAR,EAAc8B,OAAd,CAAP;AACD;AAX6C,GAAhD;;AAcAyB,SAAOC,cAAP,CAAsBkR,KAAKjR,SAA3B,EAAsC,QAAtC,EAAgD;AAC9CC,gBAAY,IADkC;;AAG9CpD,OAH8C,iBAGxC;AACJ,aAAO,KAAKqC,MAAL,CAAYwB,MAAnB;AACD,KAL6C;AAO9C/D,OAP8C,eAO1C+D,MAP0C,EAOlC;AACV,UAAMoT,IAAIpT,OAAOL,MAAjB;AACA,UAAMX,aAAaoU,IAAI3V,KAAKhC,KAA5B;;AAEA,UAAM6X,KAAK,IAAIH,aAAJ,CAAkB1V,IAAlB,EAAwB2V,CAAxB,CAAX;AACA,UAAM9O,MAAM,IAAIgP,EAAJ,CAAO,EAAEtU,sBAAF,EAAcgB,cAAd,EAAP,CAAZ;;AAEA,WAAKmP,GAAL,GAAW,mBAAYmE,EAAZ,EAAgBhP,GAAhB,CAAX;AACA,WAAK3E,MAAL,GAAcyT,CAAd;AACD;AAhB6C,GAAhD;;AAmBA,yBAAY7C,IAAZ;AACA,0BAAaA,IAAb;;AA5CuC,MA8CjCgD,MA9CiC;AAAA;;AA+CrC,oBAAYvT,MAAZ,EAAoB;AAAA;;AAAA;;AAElB,UAAIA,MAAJ,EAAY,MAAKA,MAAL,GAAcA,MAAd;AAFM;AAGnB;;AAlDoC;AAAA;AAAA,6BAoD9B;AACL,6GAAW,IAAX,EADK,CACa;AACnB;AAtDoC;AAAA;AAAA,+BAwD5B+G,KAxD4B,EAwDrB;AACd,YAAIA,UAAU,QAAd,EAAwB,OAAO,KAAKvI,MAAL,CAAYgV,QAAZ,EAAP;AACxB,YAAIzM,UAAU,QAAd,EAAwB,OAAO,KAAKvI,MAAL,CAAYgV,QAAZ,CAAqB,QAArB,CAAP;;AAExB,wHAAsBzM,KAAtB;AACD;AA7DoC;;AAAA;AAAA,IA8ClBwJ,IA9CkB;;AAgEvC,SAAQD,aAAD,GACH,IAAIiD,MAAJ,CAAWjD,aAAX,CADG,GAEHiD,MAFJ;AAGD;;kBAGc;AACbE,SAAOJ;AADM,C","file":"wasm-ffi.browser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bdb05e6f5d6cd5f12677","import { assert, vslice, toUint8Array, addStringFns } from './misc';\n\n\n// Makes a type of a given size.\n// Optional read / write methods, just gives a DataView by default.\nclass CustomType {\n  constructor(size, opts = {}) {\n    assert(!isNaN(size), 'Type size must be a number, given: %s', size);\n\n    this.width = size;\n    this.alignment = ('alignment' in opts) ? opts.alignment : size;\n\n    if (opts.read) this.read = opts.read;\n    if (opts.write) this.write = opts.write;\n  }\n\n  read(view) {\n    return view;\n  }\n\n  write(view, value) {\n    assert(value instanceof ArrayBuffer || ArrayBuffer.isView(value),\n      'Value must be an `ArrayBuffer` or a `DataView` (like `Uint8Array`)');\n\n    toUint8Array(view).set(toUint8Array(value));\n  }\n}\n\n\nclass SignedInteger {\n  constructor(width) {\n    this.width = width;\n    this.alignment = width;\n\n    const get = `getInt${width * 8}`;\n    const set = `setInt${width * 8}`;\n\n    this.read = view => view[get](0, true /* little-endian */);\n    this.write = (view, value) => view[set](0, value, true /* little-endian */);\n  }\n}\n\n\nclass UnsignedInteger {\n  constructor(width) {\n    this.width = width;\n    this.alignment = width;\n\n    const get = `getUint${width * 8}`;\n    const set = `setUint${width * 8}`;\n\n    this.read = view => view[get](0, true /* little-endian */);\n    this.write = (view, value) => view[set](0, value, true /* little-endian */);\n  }\n}\n\n\nconst types = {};\n\ntypes.void = {\n  width: 0,\n  alignment: 0,\n  read: () => null,\n  write: () => {},\n};\n\ntypes.int8 = new SignedInteger(1);\ntypes.int16 = new SignedInteger(2);\ntypes.int32 = new SignedInteger(4);\ntypes.uint8 = new UnsignedInteger(1);\ntypes.uint16 = new UnsignedInteger(2);\ntypes.uint32 = new UnsignedInteger(4);\n\ntypes.int64 = new CustomType(8);\ntypes.uint64 = new CustomType(8);\n\ntypes.float = {\n  width: 4,\n  alignment: 4,\n\n  read(view) {\n    return view.getFloat32(0, true /* little-endian */);\n  },\n\n  write(view, value) {\n    view.setFloat32(0, value, true /* little-endian */);\n  },\n};\n\ntypes.double = {\n  width: 8,\n  alignment: 8,\n\n  read(view) {\n    return view.getFloat64(0, true /* little-endian */);\n  },\n\n  write(view, value) {\n    view.setFloat64(0, value, true /* little-endian */);\n  },\n};\n\ntypes.bool = {\n  width: 1,\n  alignment: 1,\n\n  read(view) {\n    return !!view.getInt8(0);\n  },\n\n  write(view, value) {\n    view.setInt8(0, (!!value) ? 1 : 0);\n  },\n};\n\n\n// A pointer to some other data type in memory\nclass Pointer {\n  constructor(type, value) {\n    this.type = parseType(type);\n    this.view = null;\n    this.wrapper = null;\n\n    this._temp = value;\n  }\n\n  size() {\n    return this.type.width;\n  }\n\n  commit() {\n    if (this._temp) {\n      this.type.write(this.view, this._temp, this.wrapper);\n    }\n  }\n\n  ref() {\n    return (this.view) ? this.view.byteOffset : 0;\n  }\n\n  deref() {\n    assert(this.view, 'Trying to deref an unallocated pointer');\n    return this.type.read(this.view, this.wrapper);\n  }\n\n  set(value) {\n    if (this.view) {\n      this.type.write(this.view, value, this.wrapper);\n    } else {\n      this._temp = value;\n    }\n  }\n\n  free() {\n    assert(this.view, 'Cant free pointer: unallocated / already freed');\n\n    this.wrapper.free(this.ref(), this.type.width);\n    this.view = null;\n  }\n\n  toString() {\n    return (this.ref())\n      ? `Pointer( ${this.deref()} )`\n      : 'Pointer( null )';\n  }\n}\n\ntypes.pointer = function(typedef) {\n  const type = parseType(typedef);\n\n  return {\n    type,\n    width: 4,\n    alignment: 4,\n    isPointer: true,\n\n    read(view, wrapper) {\n      const addr = view.getUint32(0, true /* little-endian */);\n      const data = new DataView(view.buffer, addr, type.width);\n\n      const pointer = new Pointer(type);\n      pointer.view = data;\n      pointer.wrapper = wrapper;\n\n      return pointer;\n    },\n\n    write(view, value, wrapper) {\n      assert(value instanceof Pointer, `Trying to write ${value} as a pointer`);\n\n      if (!value.ref()) wrapper.writePointer(value);\n      view.setUint32(0, value.ref(), true /* little-endian */);\n    },\n  };\n};\n\n\nclass StringPointer {\n  constructor(value) {\n    this.view = null;\n    this.wrapper = null;\n\n    this._tempStr = value;\n    this._tempBuf = null;\n    this._width = null;\n  }\n\n  size() {\n    this._tempBuf = this.wrapper.encodeString(this._tempStr);\n    this._width = this._tempBuf.byteLength;\n\n    return this._width;\n  }\n\n  commit() {\n    assert(!!this.view, 'Cant commit StringPointer, no view!');\n\n    if (this._tempBuf) {\n      const memory = new Uint8Array(this.view.buffer);\n      memory.set(this._tempBuf, this.view.byteOffset);\n    }\n  }\n\n  ref() {\n    return (this.view) ? this.view.byteOffset : 0;\n  }\n\n  deref() {\n    assert(this.view, 'Trying to deref an unallocated StringPointer');\n    return this.wrapper.decodeString(this.view);\n  }\n\n  free() {\n    assert(!!this.view, 'Cant free StringPointer: unallocated / already freed');\n    this.wrapper.free(this.ref(), this._width);\n    this.view = null;\n  }\n}\n\nObject.defineProperty(StringPointer.prototype, 'value', {\n  enumerable: true,\n\n  get() {\n    return this.deref();\n  },\n});\n\naddStringFns(StringPointer);\n\n\ntypes.string = {\n  width: 4,\n  alignment: 4,\n  isPointer: true,\n\n  read(view, wrapper) {\n    const addr = view.getUint32(0, true /* little-endian */);\n\n    const pointer =  new StringPointer();\n    pointer.view = wrapper.readStringView(addr);\n    pointer.wrapper = wrapper;\n\n    return pointer;\n  },\n\n  write(view, value, wrapper) {\n    if (typeof value === 'string') {\n      value = new StringPointer(value);\n    }\n\n    if (!value.ref()) wrapper.writePointer(value);\n    view.setUint32(0, value.ref(), true /* little-endian */);\n  },\n};\n\n\n// An array (of known size) of sub-types.\nclass ArrayType {\n  constructor(type, length) {\n    this.type = type;\n    this.length = length;\n\n    this.width = type.width * length;\n    this.alignment = type.alignment;\n  }\n\n  read(view, wrapper) {\n    const arr = [];\n\n    for (let i = 0; i <= this.length - 1; i++) {\n      const subview = vslice(view, i * this.type.width, this.type.width);\n      arr.push(this.type.read(subview, wrapper));\n    }\n\n    return arr;\n  }\n\n  write(view, values, wrapper) {\n    assert(values.length === this.length,\n      'Values length does not match struct array length');\n\n    values.forEach((value, i) => {\n      const subview = vslice(view, i * this.type.width, this.type.width);\n      this.type.write(subview, value, wrapper);\n    });\n  }\n}\n\n\n// Maps other names to base types\n//\n// Some questionable decisions:\n//  - char = uint8 (I mean, what do you do, really)\n//  - long = int32 (windows=32, linux=64, wasm is 32bit right now, so...)\n//\nconst aliases = {\n  u8: types.uint8,\n  u16: types.uint16,\n  u32: types.uint32,\n  u64: types.uint64,\n  i8: types.int8,\n  i16: types.int16,\n  i32: types.int32,\n  i64: types.int64,\n  f32: types.float,\n  f64: types.double,\n  char: types.uint8,\n  uchar: types.uint8,\n  schar: types.int8,\n  short: types.int16,\n  ushort: types.uint16,\n  int: types.int32,\n  uint: types.uint32,\n  long: types.int32,\n  ulong: types.uint32,\n  longlong: types.uint64,\n  ulonglong: types.uint64,\n  size_t: types.uint32,\n  usize: types.uint32,\n};\n\n\nfunction parseTypeString(str) {\n  const name = str.toLowerCase();\n\n  if (name in types) return types[name];\n  if (name in aliases) return aliases[name];\n\n  throw new Error(`Parsing unknown type '${str}'`);\n}\n\n\n// parse a type from some type definition.\n// may be a string, an actual type, or an array of types\nfunction parseType(typedef) {\n  if (typeof typedef === 'string') {\n    return parseTypeString(typedef);\n  }\n\n  if (Array.isArray(typedef)) {\n    assert(typedef.length === 2,\n      'Array type needs 2 arguments: [type, length], given: \\n%s', typedef);\n\n    const type = parseType(typedef[0]);\n    const length = typedef[1];\n\n    return new ArrayType(type, length);\n  }\n\n  // make sure its an ok type interface\n  const errMsg = \"Given argument type isn't a proper 'type' interface: \\n%s\";\n  assert('width' in typedef, errMsg, typedef);\n  assert('alignment' in typedef, errMsg, typedef);\n  assert('read' in typedef, errMsg, typedef);\n  assert('write' in typedef, errMsg, typedef);\n\n  return typedef;\n}\n\n\nexport { types, CustomType, Pointer, StringPointer, parseType };\n\n\n\n// WEBPACK FOOTER //\n// ./src/types.js","// simple assert, throws if assertion fails\n// also matches args to %s formatters\nexport function assert(condition, errMsg, ...args) {\n  if (condition) return;\n  if (!args || !args.length) throw new Error(errMsg);\n\n  let msg = '';\n  let strings;\n\n  try {\n    strings = args.map(arg => JSON.stringify(arg, null, 2));\n  } catch (e) {\n    throw new Error(errMsg);\n  }\n\n  errMsg.split('%s').forEach((part) => {\n    msg += part;\n    if (strings.length) msg += strings.pop();\n  });\n\n  throw new Error(msg);\n}\n\n\n// takes a subslice of a DataView\nexport function vslice(view, start, length) {\n  return new DataView(view.buffer, view.byteOffset + start, length);\n}\n\n\nexport function toUint8Array(arr) {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n\nexport function isNil(thing) {\n  return thing === null || typeof thing === 'undefined';\n}\n\n\nconst has = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nconst isFunction = thing => (typeof thing === 'function');\n\n\nexport function addStringFns(StringLike) {\n  assert(!!has(StringLike.prototype, 'value'), 'Missing `value` property');\n\n  Object.getOwnPropertyNames(String.prototype).forEach((prop) => {\n    if (has(StringLike.prototype, prop)) return;\n    if (!isFunction(String.prototype[prop])) return;\n\n    StringLike.prototype[prop] = function(...args) {\n      return this.value[prop](...args);\n    };\n  });\n}\n\n\nexport function addArrayFns(ArrayLike) {\n  assert(!!has(ArrayLike.prototype, 'values'), 'Missing `values` property');\n\n  Object.getOwnPropertyNames(Array.prototype).forEach((prop) => {\n    if (has(ArrayLike.prototype, prop)) return;\n    if (!isFunction(Array.prototype[prop])) return;\n\n    ArrayLike.prototype[prop] = function(...args) {\n      return this.values[prop](...args);\n    };\n  });\n}\n\n\nexport function makeIterable(ArrayLike) {\n  assert(!!has(ArrayLike.prototype, 'values'), 'Missing `values` property');\n  assert(!!has(ArrayLike.prototype, 'length'), 'Missing `length` property');\n\n  ArrayLike.prototype[Symbol.iterator] = function() {\n    const values = this.values;\n    const length = this.length;\n    let i = 0;\n\n    return {\n      next() {\n        return (i < length)\n          ? { value: values[i++], done: false }\n          : { done: true };\n      }\n    };\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc.js","function encodeUTF16(str) {\n  const buf = new ArrayBuffer(str.length * 2); // 2 per char\n  const arr = new Uint16Array(buf);\n\n  for (let i = 0; i < str.length; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n\n  return new Uint8Array(buf);\n}\n\nfunction decodeUTF16(buf) {\n  const len = buf.byteLength;\n  const num = (len % 2) ? ((len + 1) / 2) : (len / 2);\n  const pts = new Uint16Array(buf.buffer, buf.byteOffset, num);\n\n  return String.fromCharCode(...pts);\n}\n\n// utf8 decode/encode adapted from the buffer module\n// @ github.com/feross/buffer\n//\nfunction encodeUTF8(str) {\n  let codePoint;\n  let leadSurrogate = null;\n  let units = Infinity;\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    codePoint = str.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n\n        } else if (i + 1 === str.length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return Uint8Array.from(bytes);\n}\n\n\nfunction decodeUTF8(buf) {\n  const start = 0; // view.byteOffset;\n  const end = buf.length;\n\n  const pts = [];\n  let i = start;\n\n  while (i < end) {\n    const firstByte = buf[i];\n    let codePoint = null;\n\n    let bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1;\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        default:\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      pts.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    pts.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n  const MAX = 0x1000;\n\n  if (pts.length <= MAX) {\n    return String.fromCharCode.call(String, ...pts); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let str = '';\n  let j = 0;\n\n  while (j < pts.length) {\n    str += String.fromCharCode.call(String, ...pts.slice(j, j += MAX));\n  }\n\n  return str;\n}\n\n\nfunction encode(str, type) {\n  if (type === 'utf-16') return encodeUTF16(str);\n\n  return (typeof TextEncoder !== 'undefined')\n    ? (new TextEncoder()).encode(str)\n    : encodeUTF8(str);\n}\n\n\nfunction decode(str, type) {\n  if (type === 'utf-16') return decodeUTF16(str);\n\n  return (typeof TextDecoder !== 'undefined')\n    ? (new TextDecoder()).decode(str)\n    : decodeUTF8(str);\n}\n\n\nexport { encode, decode, encodeUTF8, decodeUTF8 };\n\n\n\n// WEBPACK FOOTER //\n// ./src/encoding.js","import { parseType } from './types';\nimport { assert, vslice, isNil } from './misc';\n\n\nconst DATA = (typeof Symbol !== 'undefined')\n  ? Symbol.for('struct-data')\n  : '__data';\n\n\nclass AbstractStructType {\n  constructor(obj) {\n    // structs can be made with any object keys\n    // hide internal info behind the data symbol so you can still have\n    // struct fields like `.view`\n    this[DATA] = {\n      temp: {},\n      view: null,\n      wrapper: null,\n    };\n\n    if (obj) {\n      Object.entries(obj).forEach(([key, value]) => {\n        assert(key in this, `Can't set value, struct missing field '${key}'`);\n        this[key] = value;\n      });\n    }\n  }\n\n  ref() {\n    return (this[DATA].view) ? this[DATA].view.byteOffset : 0;\n  }\n\n  free(internal = false) {\n    assert(!!this[DATA].wrapper,\n      'Cant free struct, either: unallocated / already freed / sub-struct');\n\n    // frees any pointers contained in the struct\n    const freePointers = (struct) => {\n      struct.constructor.fields.forEach((field, name) => {\n        if (field.type.isPointer) struct[name].free();\n        if (field.type.isStruct) freePointers(struct[name]);\n      });\n    };\n\n    if (internal) freePointers(this);\n\n    this[DATA].wrapper.free(this.ref(), this.constructor.width);\n    this[DATA].wrapper = null;\n    this[DATA].view = null;\n  }\n\n  toString() {\n    let out = '{\\n';\n\n    const stringify = (struct) => {\n      const fields = struct.constructor.fields;\n      const proto = struct.constructor.prototype;\n\n      fields.forEach((field, name) => {\n        out += `  ${name}: ${struct[name]},\\n`;\n      });\n\n      Object.getOwnPropertyNames(proto).forEach((name) => {\n        if (fields.has(name)) return;\n\n        const value = struct[name];\n\n        if (typeof value !== 'function') {\n          out += `  ${name}: ${value},\\n`;\n        }\n      });\n    };\n\n    stringify(this);\n\n    if (out.length <= 80) {\n      out = out.replace(/\\n/g, '')    // remove line breaks\n               .replace(/ {2}/g, ' ') // collapse whitespace\n               .replace(/,$/g, ' ');  // trailing comma\n    }\n\n    out += '}';\n\n    return out;\n  }\n\n  dataview(name) {\n    const view = this[DATA].view;\n    assert(!!view, \"Struct hasn't been written yet, can't get dataview\");\n\n    if (!name) return view;\n\n    const StructType = this.constructor;\n    const field = StructType.fields.get(name);\n    assert(!!field, `Field '${name}' doesn't exist on struct`);\n\n    return vslice(view, field.offset, field.type.width);\n  }\n\n  static read(view, wrapper) {\n    const StructType = this;\n\n    const struct = new StructType();\n    struct[DATA].view = view;\n    struct[DATA].wrapper = wrapper;\n\n    return struct;\n  }\n\n  static write(view, struct, wrapper) {\n    const StructType = this;\n\n    if (isNil(struct) || !struct.constructor.isStruct) {\n      struct = new StructType(struct);\n    }\n\n    StructType.fields.forEach((field, name) => {\n      const type = field.type;\n      let value = struct[name];\n\n      if (typeof value !== 'undefined') {\n        if (type.isStruct && (isNil(value) || !value.constructor.isStruct)) {\n          value = new type(value);\n        }\n\n        const fieldView = vslice(view, field.offset, type.width);\n        type.write(fieldView, value, wrapper);\n      }\n    });\n\n    struct[DATA].view = view;\n    struct[DATA].wrapper = wrapper;\n  }\n}\n\n\n// Creates a new class that will create new struct instances\n// (this returns a constructor)\nclass Struct {\n  constructor(fields = {}, opt = {}) {\n    // preserve field insertion order with [[OwnPropertyKeys]]\n    const names = Object.getOwnPropertyNames(fields);\n\n    // check for field name conflicts\n    ['ref', 'free', 'dataview'].forEach(name =>\n      assert(!(names in names), `Field '${name}' is a reserved method name`));\n\n    // keep metadata on the constructor itself\n    class StructType extends AbstractStructType {}\n    StructType.fields = new Map();\n    StructType.packed = ('packed' in opt) ? !!opt.packed : false;\n    StructType.alignment = opt.alignment || 0;\n    StructType.isStruct = true;\n\n    let offset = 0;\n\n    // get type/size/alignment for each field\n    names.forEach((name) => {\n      const type = parseType(fields[name]);\n\n      if (!opt.alignment && type.alignment > StructType.alignment) {\n        StructType.alignment = type.alignment;\n      }\n\n      if (!StructType.packed && offset % type.alignment !== 0) {\n        offset += type.alignment - (offset % type.alignment);\n      }\n\n      StructType.fields.set(name, { name, offset, type });\n      offset += type.width;\n    });\n\n    StructType.width = (offset % StructType.alignment)\n      ? offset + StructType.alignment - (offset % StructType.alignment)\n      : offset;\n\n    // define getter / setter behavior for each field\n    // these will read / write each field to memory according to its type\n    StructType.fields.forEach((field, name) => {\n      Object.defineProperty(StructType.prototype, name, {\n        enumerable: true,\n\n        get() {\n          if (!this[DATA].view) {\n            return this[DATA].temp[name];\n          }\n\n          const view = vslice(this[DATA].view, field.offset, field.type.width);\n          return field.type.read(view, this[DATA].wrapper);\n        },\n\n        set(value) {\n          if (!this[DATA].view) {\n            this[DATA].temp[name] = value;\n            return;\n          }\n\n          const view = vslice(this[DATA].view, field.offset, field.type.width);\n          field.type.write(view, value, this[DATA].wrapper);\n        },\n      });\n    });\n\n    return StructType;\n  }\n}\n\n\nexport default Struct;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Struct.js","// Rust demangle logic adpated from Alex Crichton's ructc-demangle:\n// http://alexcrichton.com/rustc-demangle/src/rustc_demangle/lib.rs.html\nconst symbols = [\n  [/^_\\$/, '$'],\n  [/\\$C\\$/g, ','],\n  [/\\$SP\\$/g, '@'],\n  [/\\$BP\\$/g, '*'],\n  [/\\$RF\\$/g, '&'],\n  [/\\$LT\\$/g, '<'],\n  [/\\$GT\\$/g, '>'],\n  [/\\$LP\\$/g, '('],\n  [/\\$RP\\$/g, ')'],\n  [/\\$u7e\\$/g, '~'],\n  [/\\$u20\\$/g, ' '],\n  [/\\$u27\\$/g, \"'\"],\n  [/\\$u5b\\$/g, '['],\n  [/\\$u5d\\$/g, ']'],\n  [/\\$u7b\\$/g, '{'],\n  [/\\$u7d\\$/g, '}'],\n  [/\\$u3b\\$/g, ';'],\n  [/\\$u2b\\$/g, '+'],\n  [/\\$u22\\$/g, '\"'],\n  [/\\.\\./g, '::'],\n];\n\nfunction isHash(str) {\n  return str.length &&\n    str[0] === 'h' &&\n    str.split('').slice(1).every(char => /[0-9a-f]/i.test(char));\n}\n\n// replaces all symbols in string, returning a new string\nfunction replaceAllSymbols(str) {\n  return symbols.reduce(\n    (result, [re, char]) => result.replace(re, char),\n    str\n  );\n}\n\n// Basic rust demangle rules:\n// - starts with \"ZN | _ZN | __ZN\" and ends in \"E\"\n// - name is made up of chunks. chunks are length prefixed\n//\n// Bails early if string isn't a valid rust mangle\n//\nfunction demangle(mangled = '') {\n  const startsWith = sub => mangled.indexOf(sub) === 0;\n  const endsWith = sub => mangled.slice(-1) === sub;\n  let inner;\n\n  if (!endsWith('E')) return mangled;\n\n  if (startsWith('ZN')) inner = mangled.slice(2, -1);\n  else if (startsWith('_ZN')) inner = mangled.slice(3, -1);\n  else if (startsWith('__ZN')) inner = mangled.slice(4, -1);\n\n  if (!inner) return mangled;\n\n  const chars = inner.split('');\n  const labels = [];\n  let label = '';\n  let digits = '';\n  let length = 0;\n\n  chars.forEach((char) => {\n    // add characters to label while length marker > 0\n    if (length) {\n      label += char;\n      length--;\n\n    // otherwise, this label is complete and we start on the next\n    } else {\n      if (label) {\n        labels.push(label);\n        label = '';\n      }\n\n      // build length prefix, one digit at a time until we hit non-digit\n      if (/[0-9]/.test(char)) {\n        digits += char;\n      } else {\n        length = parseInt(digits, 10); // parse # the collected string\n        digits = '';   // clear for next time\n        label += char; // add first char to label\n        length--;      // decrement\n      }\n    }\n  });\n\n  // make sure last label is included\n  labels.push(label);\n\n  // if the last element is a hash, exclude it so the result is more readable\n  if (isHash(labels.slice(-1)[0])) labels.pop();\n\n  // replace symbol markers in labels with the actual symbols before joining\n  return labels.map(replaceAllSymbols).join('::');\n}\n\n\n// Tries to demangle an error stack on an Error object.\n// Only demangles rust right now.\n//\nexport default function demangleStack(err) {\n  // matches error stack line patterns in chrome and firefox\n  // chrome: \"at function_name (...\"\n  // firefox: \"function_name @ ...\"\n  const re = /(?:at (.+) \\()|(?:(.+)<?@)/;\n\n  // replaces matches, if found, with the demangled identifier\n  err.stack = err.stack\n    .split('\\n')\n    .map(line => line.replace(re, (_, m1, m2) => `at ${demangle(m1 || m2)} (`))\n    .join('\\n');\n\n  return err;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demangle.js","import { Wrapper, cwrap, ccall } from './Wrapper';\nimport Struct from './Struct';\nimport demangle from './demangle';\nimport rust from './rust';\nimport assemblyscript from './assemblyscript';\nimport { types, Pointer, StringPointer, CustomType } from './types';\n\nimport { encodeUTF8, decodeUTF8 } from './encoding';\nconst _encodeUTF8 = encodeUTF8;\nconst _decodeUTF8 = decodeUTF8;\n\nconst CString = StringPointer;\n\nexport default {\n  Wrapper,\n  cwrap,\n  ccall,\n  Struct,\n  types,\n  CustomType,\n  Pointer,\n  StringPointer,\n  CString, // deprecated\n  demangle,\n  rust,\n  assemblyscript,\n  _encodeUTF8,\n  _decodeUTF8,\n};\n\nexport {\n  Wrapper,\n  cwrap,\n  ccall,\n  Struct,\n  types,\n  CustomType,\n  Pointer,\n  StringPointer,\n  CString, // deprecated\n  demangle,\n  rust,\n  assemblyscript,\n  _encodeUTF8,\n  _decodeUTF8,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { Pointer, StringPointer } from './types';\nimport { encode, decode } from './encoding';\nimport { assert, isNil, toUint8Array } from './misc';\nimport demangle from './demangle';\n\n\nconst numbers = new Set([\n  'int8', 'int16', 'int32', 'int64',\n  'uint8', 'uint16', 'uint32', 'uint64',\n  'float', 'double',\n  'u8', 'u16', 'u32', 'u64',\n  'i8', 'i16', 'i32', 'i64',\n  'f32', 'f64',\n  'schar', 'short', 'int', 'long',\n  'char', 'uchar', 'ushort', 'uint', 'ulong',\n  'size_t',\n  'usize',\n]);\n\n\nfunction areValid(argTypes) {\n  return argTypes.every(type =>\n    type === null ||\n    type === undefined ||\n    type === 'void' ||\n    type === 'number' ||\n    type === 'boolean' ||\n    type === 'bool' ||\n    type === 'string' ||\n    type === 'array' ||\n    numbers.has(type) ||\n    type.isStruct ||\n    type.isPointer);\n}\n\n\n// a node fetch polyfill that won't trigger webpack\n// idea borrowed from:\n// https://github.com/dcodeIO/webassembly/blob/master/src/index.js#L223\nlet fs;\nfunction fetch_polyfill(file) {\n  return new Promise((resolve, reject) => {\n    (fs || (fs = eval('equire'.replace(/^/, 'r'))('fs'))).readFile(\n      file,\n      function(err, data) {\n        return (err)\n          ? reject(err)\n          : resolve({\n              arrayBuffer: () => Promise.resolve(data),\n              ok: true,\n            });\n      }\n    );\n  });\n}\n\n\nconst fetchFn = (typeof fetch === 'function' && fetch) || fetch_polyfill;\n\n\n// gets the wasm at a url and instantiates it.\n// checks if streaming instantiation is available and uses that\nfunction fetchAndInstantiate(url, imports) {\n  return fetchFn(url)\n    .then((resp) => {\n      if (!resp.ok) {\n        throw new Error(`Got a ${resp.status} fetching wasm @ ${url}`);\n      }\n\n      const wasm = 'application/wasm';\n      const type = resp.headers && resp.headers.get('content-type');\n\n      return (WebAssembly.instantiateStreaming && type === wasm)\n        ? WebAssembly.instantiateStreaming(resp, imports)\n        : resp.arrayBuffer().then(buf => WebAssembly.instantiate(buf, imports));\n    })\n    .then(result => result.instance);\n}\n\n\nconst DATA = (typeof Symbol !== 'undefined')\n  ? Symbol.for('wrapper-data')\n  : '__data';\n\n\nclass Wrapper {\n  constructor(signatures, opts = {}) {\n    const dialect = opts.dialect && opts.dialect.toLowerCase();\n\n    // Keep internal info behind the DATA symbol so wrapped function names\n    // won't cause conflicts\n    this[DATA] = {\n      instance: null,\n      imports: null,\n      signatures: new Set(),\n      allocations: new Map(),\n      memory: opts.memory,\n      debug: !!opts.debug,\n      isAssemblyScript: dialect === 'assemblyscript',\n    };\n\n    Object.entries(signatures).forEach(([fn, [returnType, argTypes = []]]) => {\n      // check for name collisions:\n      ['exports', 'imports', 'utils', 'fetch', 'use'].forEach(name =>\n        assert(fn !== name, '`%s` is a reserved wrapper name', name));\n\n      // validate arg types\n      assert(argTypes.every(arg => !!arg), '`%s` has undefined types', fn);\n      assert(areValid([returnType]), '`%s` has invalid types', fn);\n      assert(areValid(argTypes), '`%s` has invalid types', fn);\n\n      this[DATA].signatures.add({ fnName: fn, returnType, argTypes });\n    });\n\n    // exposing some methods via `.utils`\n    this.utils = {\n      encodeString:   this.__encodeString.bind(this),\n      decodeString:   this.__decodeString.bind(this),\n      readStringView: this.__readStringView.bind(this),\n      readString:     this.__readString.bind(this),\n      writeString:    this.__writeString.bind(this),\n      writeArray:     this.__writeArray.bind(this),\n      readStruct:     this.__readStruct.bind(this),\n      writeStruct:    this.__writeStruct.bind(this),\n      readPointer:    this.__readPointer.bind(this),\n      writePointer:   this.__writePointer.bind(this),\n\n      allocate: function(value) {\n        assert(typeof value.ref === 'function',\n          \"Can't allocate '%s' This method is for Pointer & Structs\", value);\n\n        (value instanceof Pointer || value instanceof StringPointer)\n          ? this.__writePointer(value)\n          : this.__writeStruct(value);\n      }.bind(this),\n\n      free: function(value) {\n        (typeof value.ref === 'function')\n          ? this.__free(value.ref())\n          : this.__free(value);\n      }.bind(this),\n    };\n\n    this.exports = null;\n  }\n\n  // takes an import object or a function what will produce a import object\n  imports(importArg, applyDefaults = true) {\n    const wrap = (...fnConfig) => {\n      // function to wrap is always the last argument\n      const fn = fnConfig.pop();\n      // two argument formats (this might be a bad idea):\n      //   1) with return type: wrap([returnType, [...argTypes]], fn)\n      //   2) no return type: wrap(arg1, arg2, ..., fn)\n      //\n      // detructure into appropriate vars\n      const [returnType, argTypes = []] = (Array.isArray(fnConfig[0]))\n        ? fnConfig[0]       // 1st format\n        : [null, fnConfig]; // 2nd format\n\n      assert(areValid(argTypes), `Import has invalid types: ${argTypes}`);\n      assert(areValid([returnType]), `Import has invalid types: ${returnType}`);\n\n      return (...args) => {\n        const ffi_args = argTypes.map((type, i) => this.__out(args[i], type));\n\n        if (args.length > argTypes.length) {\n          ffi_args.push(...args.slice(argTypes.length - args.length));\n        }\n\n        const value = fn(...ffi_args);\n\n        if (returnType && returnType !== 'void') {\n          return this.__in(value, returnType);\n        }\n      };\n    };\n\n    const env = {\n      // wasm-glue\n      print:  wrap('string', (str, ...args) => console.log(str, ...args)),\n      eprint: wrap('string', (str, ...args) => console.error(str, ...args)),\n      trace:  wrap('string', (str) => { throw new Error(str); }),\n\n      // assemblyscript\n      abort: wrap('string', 'string', 'number', 'number', (msg, file, line, col) => {\n        throw new Error(`${msg} @ ${file}:${line}:${col}`);\n      }),\n\n      // <webassembly.h>\n      _abort(errCode) {\n        throw new Error(`Aborting, error code: ${errCode}`);\n      },\n\n      _exit(exitCode) {\n        if (exitCode) throw new Error(`Exit error code: ${exitCode}`);\n      },\n\n      _grow() {},\n    };\n\n    const obj = (typeof importArg === 'function')\n      ? importArg(wrap)\n      : importArg;\n\n    if (applyDefaults) obj.env = Object.assign(env, obj.env);\n    this[DATA].imports = obj;\n\n    return obj;\n  }\n\n  fetch(url) {\n    const imports = this[DATA].imports || this.imports({});\n\n    return fetchAndInstantiate(url, imports).then((instance) => {\n      this.__link(instance);\n      return this;\n    });\n  }\n\n  use(instance) {\n    assert(instance instanceof WebAssembly.Instance,\n      '.use(instance) requires a WebAssembly.Instance');\n\n    this.__link(instance);\n    return this;\n  }\n\n  __link(instance) {\n    const memory = this[DATA].memory ||\n                   instance.exports.memory ||\n                   (this[DATA].imports.env && this[DATA].imports.env.memory);\n\n    assert(!!memory, '' +\n      'Wrapper needs access to your WebAssemmbly memory. It looks for this in' +\n      'either your `imports.env.memory` or `exports.env.memory`. If you don\\'t' +\n      'use either, you need to add it in the options with `new Wrapper`');\n\n    this.exports = instance.exports;\n    this[DATA].instance = instance;\n    this[DATA].memory = memory;\n\n    this[DATA].signatures.forEach(({ fnName, returnType, argTypes }) => {\n      const fn = this.exports[fnName];\n      assert(!!fn, `Fn '${fnName}' missing from wasm exports`);\n\n      this[fnName] = this.__wrap(fn, argTypes, returnType);\n    });\n  }\n\n  __wrap(fn, argTypes, returnType) {\n    return function(...args) {\n      const stack = [];\n      const ffi_args = argTypes.map((type, i) => this.__in(args[i], type, stack));\n      let value;\n\n      if (args.length > argTypes.length) {\n        ffi_args.push(...args.slice(argTypes.length - args.length));\n      }\n\n      try {\n        value = fn(...ffi_args);\n      } catch (err) {\n        throw demangle(err);\n      }\n\n      stack.forEach(ptr => this.__free(ptr));\n\n      if (returnType && returnType !== 'void') {\n        return this.__out(value, returnType);\n      }\n    };\n  }\n\n  // wrap a variable heading into a wasm function\n  __in(value, type, stack) {\n    assert(!!type, 'No arg type was specified for this function');\n\n    if (type === 'number' || numbers.has(type)) return value;\n    if (type === 'boolean' || type === 'bool') return !!value;\n    if (type === 'string') return this.__writeString(value, stack);\n    if (type === 'array') return this.__writeArray(value, stack);\n    if (type.isStruct) return this.__writeStruct(value, type);\n    if (type.isPointer) return this.__writePointer(value);\n\n    throw new Error(`Unknown type: \\n${JSON.stringify(type)}`);\n  }\n\n  // wrap a variable heading out of a wasm function\n  __out(value, type) {\n    assert(!!type, 'No arg type was specified for this function');\n\n    if (type === 'number' || numbers.has(type)) return value;\n    if (type === 'boolean' || type === 'bool') return !!value;\n    if (type === 'string') return this.__readString(value);\n    if (type.isStruct) return this.__readStruct(value, type);\n    if (type.isPointer) return this.__readPointer(value, type);\n\n    throw new Error(`Unknown type: \\n${JSON.stringify(type)}`);\n  }\n\n  __allocate(size) {\n    assert(!!this.exports.allocate && !!this.exports.deallocate,\n      \"Missing allocate/deallocate fns in wasm exports, can't allocate memory\");\n\n    const ptr = this.exports.allocate(size);\n    assert(!!ptr, 'allocate failed');\n\n    if (this[DATA].debug) console.log('Alloc: %s (size=%s)', ptr, size);\n    this[DATA].allocations.set(ptr, size);\n\n    return ptr;\n  }\n\n  __free(ptr, optSize) {\n    const size = optSize || this[DATA].allocations.get(ptr);\n    if (this[DATA].debug) console.log('Free: %s (size=%s)', ptr, size);\n\n    this.exports.deallocate(ptr, size);\n    this[DATA].allocations.delete(ptr);\n  }\n\n  __view(start, length) {\n    return new DataView(this[DATA].memory.buffer, start, length);\n  }\n\n  __encodeString(str) {\n    const encoded = (this[DATA].isAssemblyScript)\n      ? encode(str, 'utf-16')\n      : encode(str);\n\n    const len = (this[DATA].isAssemblyScript)\n      ? encoded.byteLength + 4  // assemblyscript header\n      : encoded.byteLength + 1; // null terminating byte\n\n    const buf = new Uint8Array(new ArrayBuffer(len));\n\n    if (this[DATA].isAssemblyScript) {\n      const header = encoded.byteLength / 2;\n      (new DataView(buf.buffer)).setUint32(0, header, true);\n      buf.set(encoded, 4);\n    } else {\n      buf.set(encoded, 0);\n      buf[len - 1] = 0;\n    }\n\n    return buf;\n  }\n\n  __decodeString(view) {\n    const buf = toUint8Array(view);\n\n    return (this[DATA].isAssemblyScript)\n      ? decode(buf.subarray(4), 'utf-16')\n      : decode(buf.subarray(0, -1));\n  }\n\n  __readStringView(ptr) {\n    // length prefixed\n    if (this[DATA].isAssemblyScript) {\n      const strlen = this.__view().getUint32(ptr, true); // header\n      const len = 4 + (strlen * 2);\n\n      return this.__view(ptr, len);\n    }\n\n    // null terminated\n    const memory = new Uint8Array(this[DATA].memory.buffer);\n\n    let end = ptr;\n    while (memory[end]) ++end;\n\n    return this.__view(ptr, (end - ptr + 1));\n  }\n\n  __readString(ptr) {\n    return this.__decodeString(this.__readStringView(ptr));\n  }\n\n  __writeString(str, stack) {\n    const buf = this.__encodeString(str);\n\n    const ptr = this.__allocate(buf.byteLength);\n    if (stack) stack.push(ptr);\n\n    const memory = new Uint8Array(this[DATA].memory.buffer);\n    memory.set(buf, ptr);\n\n    return ptr;\n  }\n\n  __writeArray(arg, stack) {\n    assert(arg instanceof ArrayBuffer || ArrayBuffer.isView(arg),\n      'Argument must be an ArrayBuffer or a TypedArray (like Uint8Array)');\n\n    const arr = (!ArrayBuffer.isView(arg)) ? new Uint8Array(arg) : arg;\n\n    const len = (this[DATA].isAssemblyScript)\n      ? arr.byteLength + 16 /* Array/ArrayBuffer header */\n      : arr.byteLength;\n\n    const ptr = this.__allocate(len);\n    if (stack) stack.push(ptr);\n\n    const memory = new Uint8Array(this[DATA].memory.buffer);\n    const data = toUint8Array(arr);\n\n    if (this[DATA].isAssemblyScript) {\n      this.__view().setUint32(ptr + 0, ptr + 8, true);        // arraybuffer ptr\n      this.__view().setUint32(ptr + 4, arr.length, true);     // array length\n      this.__view().setUint32(ptr + 8, arr.byteLength, true); // byteLength\n      memory.set(data, ptr + 16);                             // contents\n    } else {\n      memory.set(data, ptr);\n    }\n\n    return ptr;\n  }\n\n  __readStruct(ptr, StructType) {\n    assert(!!StructType, 'No struct StructType given');\n\n    const view = this.__view(ptr, StructType.width);\n    const struct = StructType.read(view, this.utils);\n\n    return struct;\n  }\n\n  __writeStruct(value, Type) {\n    // if struct has already been allocated:\n    if (!isNil(value) && value.ref && value.ref()) return value.ref();\n\n    const StructType = Type || value.constructor;\n    const ptr = this.__allocate(StructType.width);\n    const view = this.__view(ptr, StructType.width);\n\n    StructType.write(view, value, this.utils);\n\n    return ptr;\n  }\n\n  __readPointer(ptr, ptrType) {\n    assert(!!ptrType, 'No pointer type given');\n\n    // get the size of what the pointer points to\n    const view = this.__view(ptr, ptrType.type.width);\n\n    // handle pointer of a pointer cases (structs are pointers too here)\n    if (ptrType.type.isStruct || ptrType.type.isPointer) {\n      return ptrType.read(view, this.utils);\n    }\n\n    const pointer = new Pointer(ptrType.type);\n    pointer.view = view;\n    pointer.wrapper = this.utils;\n\n    return pointer;\n  }\n\n  __writePointer(pointer) {\n    if (pointer.ref()) return pointer.ref();\n\n    pointer.wrapper = this.utils;\n\n    // allocate space for what the pointer points to\n    const size = pointer.size();\n    const addr = this.__allocate(size);\n    const view = this.__view(addr, size);\n\n    pointer.view = view;\n    pointer.commit();\n\n    return addr;\n  }\n}\n\n\nfunction cwrap(instance, fnName, returnType = null, argTypes = []) {\n  assert(instance instanceof WebAssembly.Instance,\n    '.cwrap() requires a ready WebAssembly.Instance');\n\n  const wrapper = new Wrapper({ [fnName]: [returnType, argTypes] });\n  wrapper.use(instance);\n\n  return wrapper[fnName].bind(wrapper);\n}\n\nfunction ccall(instance, fnName, returnType = null, argTypes = [], ...args) {\n  assert(instance instanceof WebAssembly.Instance,\n    '.ccall() requires a ready WebAssembly.Instance');\n\n  const wrapper = new Wrapper({ [fnName]: [returnType, argTypes] });\n  wrapper.use(instance);\n\n  return wrapper[fnName].call(wrapper, ...args);\n}\n\n\nexport { Wrapper, cwrap, ccall };\n\n\n\n// WEBPACK FOOTER //\n// ./src/Wrapper.js","import Struct from './Struct';\nimport { types, parseType, Pointer } from './types';\nimport { encode, decode } from './encoding';\nimport { assert, vslice, isNil, addStringFns, addArrayFns, makeIterable } from './misc';\n\n\n// get the symbol for struct-data since we need access here\nconst DATA = (typeof Symbol !== 'undefined')\n  ? Symbol.for('struct-data')\n  : '__data';\n\n\nfunction RustTuple(tupleTypes, values) {\n  const fields = {};\n\n  tupleTypes.forEach((type, i) => {\n    fields[i] = parseType(type);\n  });\n\n  const Tuple = new Struct(fields);\n\n  return (values)\n    ? new Tuple(values)\n    : Tuple;\n}\n\n\nfunction RustVector(typedef, initialValues) {\n  const type = parseType(typedef);\n\n  const Base = new Struct({\n    ptr: types.pointer(type),\n    cap: 'usize',\n    length: 'usize',\n    /* values */\n  });\n\n  Object.defineProperty(Base.prototype, 'values', {\n    enumerable: true,\n\n    get() {\n      const memory = this[DATA].view.buffer;\n      const wrapper = this[DATA].wrapper;\n\n      const arrayType = parseType([type, this.length]);\n      const view = new DataView(memory, this.ptr.ref(), arrayType.width);\n\n      return arrayType.read(view, wrapper);\n    },\n\n    set(values) {\n      this.ptr = new Pointer([type, values.length], values);\n      this.length = values.length;\n      this.cap = values.length;\n    },\n  });\n\n  addArrayFns(Base);\n  makeIterable(Base);\n\n  class Vector extends Base {\n    constructor(values) {\n      super();\n      if (values) this.values = values;\n    }\n\n    free() {\n      super.free(true); // free ptr data\n    }\n  }\n\n  return (initialValues)\n    ? new Vector(initialValues)\n    : Vector;\n}\n\n\nfunction RustSlice(typedef, initialValues) {\n  const type = parseType(typedef);\n\n  const Base = new Struct({\n    ptr: types.pointer(type),\n    length: 'usize',\n    /* values */\n  });\n\n  Object.defineProperty(Base.prototype, 'values', {\n    enumerable: true,\n\n    get() {\n      const memory = this[DATA].view.buffer;\n      const wrapper = this[DATA].wrapper;\n\n      const arrayType = parseType([type, this.length]);\n      const view = new DataView(memory, this.ptr.ref(), arrayType.width);\n\n      return arrayType.read(view, wrapper);\n    },\n\n    set(values) {\n      this.ptr = new Pointer([type, values.length], values);\n      this.length = values.length;\n    },\n  });\n\n  addArrayFns(Base);\n  makeIterable(Base);\n\n  class Slice extends Base {\n    constructor(values) {\n      super();\n      if (values) this.values = values;\n    }\n\n    free() {\n      super.free(true); // free ptr data\n    }\n  }\n\n  return (initialValues)\n    ? new Slice(initialValues)\n    : Slice;\n}\n\n\nfunction RustString() {\n  const Base = new Struct({\n    ptr: types.pointer('u8'),\n    length: 'usize',\n    cap: 'usize',\n    /* value */\n  });\n\n  Object.defineProperty(Base.prototype, 'value', {\n    enumerable: true,\n\n    get() {\n      const memory = this[DATA].view.buffer;\n      const buf = new Uint8Array(memory, this.ptr.ref(), this.length);\n\n      return decode(buf);\n    },\n\n    set(str) {\n      const buf = encode(str);\n\n      this.ptr = new Pointer(['u8', buf.length], buf);\n      this.length = buf.length;\n      this.cap    = buf.length;\n    },\n  });\n\n  addStringFns(Base);\n\n  class _RustString extends Base {\n    constructor(value) {\n      super();\n      if (value) this.value = value;\n    }\n\n    free() {\n      super.free(true); // free ptr data\n    }\n  }\n\n  return _RustString;\n}\n\n\nfunction RustStr() {\n  const Base = new Struct({\n    ptr: types.pointer('u8'),\n    length: 'usize',\n    /* value */\n  });\n\n  Object.defineProperty(Base.prototype, 'value', {\n    enumerable: true,\n\n    get() {\n      const memory = this[DATA].view.buffer;\n      const buf = new Uint8Array(memory, this.ptr.ref(), this.length);\n\n      return decode(buf);\n    },\n\n    set(str) {\n      const buf = encode(str);\n\n      this.ptr = new Pointer(['u8', buf.length], buf);\n      this.length = buf.length;\n    },\n  });\n\n  addStringFns(Base);\n\n  class _RustStr extends Base {\n    constructor(value) {\n      super();\n      if (value) this.value = value;\n    }\n\n    free() {\n      super.free(true); // free ptr data\n    }\n  }\n\n  return _RustStr;\n}\n\n\nfunction RustOption(typedef, isNonNullable = false, tagSize) {\n  const type = parseType(typedef);\n  let discriminant;\n\n  if (tagSize) discriminant = types[`uint${tagSize * 8}`];\n  else if (type.alignment === 1) discriminant = 'uint8';\n  else if (type.alignment === 2) discriminant = 'uint16';\n  else discriminant = 'uint32';\n\n  const fields = (isNonNullable)\n    ? { value: type }\n    : { discriminant, value: type };\n\n  const Base = new Struct(fields);\n\n  class OptionType extends Base {\n    constructor(value) {\n      super();\n      this.value = value;\n      this.discriminant = (isNil(value)) ? 0 : 1;\n    }\n\n    static some(value) {\n      return new OptionType(value);\n    }\n\n    static none() {\n      return new OptionType();\n    }\n\n    isSome() {\n      return ('discriminant' in fields) ? !!this.discriminant : !!this.value;\n    }\n\n    isNone() {\n      return !this.isSome();\n    }\n\n    expect(msg) {\n      if (!this.isSome()) throw new Error(msg);\n      return this.value;\n    }\n\n    unwrap() {\n      if (!this.isSome()) throw new Error('Error unwrapping none');\n      return this.value;\n    }\n\n    unwrapOr(defaultValue) {\n      return (this.isSome()) ? this.value : defaultValue;\n    }\n\n    unwrapOrElse(fn) {\n      return (this.isSome()) ? this.value : fn();\n    }\n  }\n\n  return OptionType;\n}\n\n\nfunction RustEnum(obj, tagSize = 4) {\n  const variants = Object.getOwnPropertyNames(obj);\n  const vtypes = variants.map(name => parseType(obj[name]));\n  const discriminant = types[`uint${tagSize * 8}`];\n\n  const StructType = new Struct({\n    discriminant,\n    /* value */\n  });\n\n  class Enum extends StructType {\n    constructor(variant) {\n      super();\n      if (variant) this._set(variant);\n    }\n\n    _set(variant) {\n      assert(Object.keys(variant).length === 1, 'Enum value must be a variant');\n\n      const [name, value] = Object.entries(variant)[0];\n\n      this.discriminant = variants.indexOf(name);\n      this.value = value;\n    }\n\n    tag() {\n      const tag = this.discriminant;\n      assert(tag <= variants.length, 'Enum discriminant > than # of variants');\n      return tag;\n    }\n\n    free(internal = false) {\n      const type = vtypes[this.tag()];\n\n      if (internal && type.isPointer || type.isStruct) {\n        this.value.free(internal);\n      }\n\n      this[DATA].wrapper.free(this.ref(), Enum.width);\n      this[DATA].wrapper = null;\n      this[DATA].view = null;\n    }\n\n    name() {\n      return variants[this.tag()];\n    }\n\n    is(name) {\n      return (variants.indexOf(name) === this.tag());\n    }\n\n    match(arms) {\n      const name = variants[this.tag()];\n      const val = this.value;\n\n      if (name in arms) {\n        return (typeof arms[name] === 'function') ? arms[name](val) : arms[name];\n      }\n\n      if ('_' in arms) {\n        return (typeof arms._ === 'function') ? arms._(val) : arms._;\n      }\n    }\n\n    static write(view, struct, wrapper) {\n      if (isNil(struct) || !struct.constructor.isStruct) {\n        struct = new Enum(struct);\n      }\n\n      const tag = struct.tag();\n      const type = vtypes[tag];\n      let value = (struct.ref()) ? struct.value : struct[DATA].temp.value;\n\n      if (type.isStruct && (isNil(value) || !value.constructor.isStruct)) {\n        value = new type(value);\n      }\n\n      const field_1 = vslice(view, 0, discriminant.width);\n      discriminant.write(field_1, tag);\n\n      const field_2 = vslice(view, discriminant.width, type.width);\n      type.write(field_2, value, wrapper);\n\n      struct[DATA].view = view;\n      struct[DATA].wrapper = wrapper;\n    }\n  }\n\n  Object.defineProperty(Enum.prototype, 'value', {\n    enumerable: true,\n\n    get() {\n      const memory = this[DATA].view.buffer;\n      const wrapper = this[DATA].wrapper;\n\n      const type = vtypes[this.tag()];\n      const addr = this.ref() + discriminant.width;\n      const view = new DataView(memory, addr, type.width);\n\n      return type.read(view, wrapper);\n    },\n\n    set(value) {\n      this[DATA].temp.value = value;\n    },\n  });\n\n  const width = discriminant.width + Math.max(...vtypes.map(t => t.width));\n  const align = Math.max(...vtypes.map(t => t.alignment), discriminant.alignment);\n\n  Enum.width = (width % align)\n    ? width + align - (width % align)\n    : width;\n\n  return Enum;\n}\n\n\nconst rust = {\n  tuple:  RustTuple,\n  vector: RustVector,\n  slice:  RustSlice,\n  string: RustString(),\n  str:    RustStr(),\n  enum:   RustEnum,\n  option: RustOption,\n\n  some: function ctor(type, value, ...opts) {\n    return new (RustOption(type, ...opts))(value);\n  },\n  none: function ctor(type, ...opts) {\n    return new (RustOption(type, ...opts))();\n  },\n\n  // deprecated\n  Tuple: RustTuple,\n  Vector: RustVector,\n  Slice: RustSlice,\n  String: RustString(),\n  Str: RustStr(),\n  Option: function ctor(type, value, ...opts) {\n    return new (RustOption(type, ...opts))(value);\n  },\n  Some: function ctor(type, value, ...opts) {\n    return new (RustOption(type, ...opts))(value);\n  },\n  None: function ctor(type, ...opts) {\n    return new (RustOption(type, ...opts))();\n  },\n};\n\n\nexport default rust;\n\n\n\n// WEBPACK FOOTER //\n// ./src/rust.js","import Struct from './Struct';\nimport { types, parseType, Pointer } from './types';\nimport { addArrayFns, makeIterable } from './misc';\n\n\n// get the symbol for struct-data since we need access here\nconst DATA = (typeof Symbol !== 'undefined')\n  ? Symbol.for('struct-data')\n  : '__data';\n\n\nfunction ASArrayBuffer(typedef, n) {\n  const type = parseType(typedef);\n\n  return new Struct({\n    byteLength: 'usize',\n    _:          'usize', // allocator alignment?\n    values:     [type, n],\n  });\n}\n\n\nfunction ASArray(typedef, initialValues) {\n  const type = parseType(typedef);\n\n  const Base = new Struct({\n    ptr: types.pointer('void'),\n    length: 'usize',\n    /* buffer */\n    /* values */\n  });\n\n  Object.defineProperty(Base.prototype, 'buffer', {\n    enumerable: true,\n\n    get() {\n      const memory = this[DATA].view.buffer;\n      const wrapper = this[DATA].wrapper;\n\n      const AB = new ASArrayBuffer(type, this.length);\n      const view = new DataView(memory, this.ptr.ref(), AB.width);\n\n      return AB.read(view, wrapper);\n    },\n  });\n\n  Object.defineProperty(Base.prototype, 'values', {\n    enumerable: true,\n\n    get() {\n      return this.buffer.values;\n    },\n\n    set(values) {\n      const n = values.length;\n      const byteLength = n * type.width;\n\n      const AB = new ASArrayBuffer(type, n);\n      const buf = new AB({ byteLength, values });\n\n      this.ptr = new Pointer(AB, buf);\n      this.length = n;\n    },\n  });\n\n  addArrayFns(Base);\n  makeIterable(Base);\n\n  class _Array extends Base {\n    constructor(values) {\n      super();\n      if (values) this.values = values;\n    }\n\n    free() {\n      super.free(true); // free buffer_ too\n    }\n\n    dataview(field) {\n      if (field === 'buffer') return this.buffer.dataview();\n      if (field === 'values') return this.buffer.dataview('values');\n\n      return super.dataview(field);\n    }\n  }\n\n  return (initialValues)\n    ? new _Array(initialValues)\n    : _Array;\n}\n\n\nexport default {\n  array: ASArray,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/assemblyscript.js"],"sourceRoot":""}