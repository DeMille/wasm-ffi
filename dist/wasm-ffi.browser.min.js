var ffi=function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=4)}([function(t,e,r){"use strict";r.d(e,"e",function(){return o}),r.d(e,"b",function(){return i}),r.d(e,"c",function(){return c}),r.d(e,"a",function(){return u}),r.d(e,"d",function(){return l});var n=r(1);class i{constructor(t,e={}){Object(n.a)(!isNaN(t),"Type size must be a number, given: %s",t),this.width=t,this.alignment="alignment"in e?e.alignment:t,e.read&&(this.read=e.read),e.write&&(this.write=e.write)}read(t){return t}write(t,e){Object(n.a)(e instanceof ArrayBuffer||ArrayBuffer.isView(e),"Value must be an `ArrayBuffer` or a `DataView` (like `Uint8Array`)");const r=ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(e);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(r)}}class s{constructor(t){this.width=t,this.alignment=t;const e=`getInt${8*t}`,r=`setInt${8*t}`;this.read=(t=>t[e](0,!0)),this.write=((t,e)=>t[r](0,e,!0))}}class a{constructor(t){this.width=t,this.alignment=t;const e=`getUint${8*t}`,r=`setUint${8*t}`;this.read=(t=>t[e](0,!0)),this.write=((t,e)=>t[r](0,e,!0))}}const o={void:{width:0,alignment:0,read:()=>null,write:()=>{}}};o.int8=new s(1),o.int16=new s(2),o.int32=new s(4),o.uint8=new a(1),o.uint16=new a(2),o.uint32=new a(4),o.int64=new i(8),o.uint64=new i(8),o.float={width:4,alignment:4,read:t=>t.getFloat32(0,!0),write(t,e){t.setFloat32(0,e,!0)}},o.double={width:8,alignment:8,read:t=>t.getFloat64(0,!0),write(t,e){t.setFloat64(0,e,!0)}},o.bool={width:1,alignment:1,read:t=>!!t.getInt8(0),write(t,e){t.setInt8(0,e?1:0)}};class c{constructor(t,e){this.type=l(t),this.view=null,this._free=null,this._temp=e}attach(t,e){this.view=t,this._free=e,this._temp&&this.set(this._temp)}ref(){return this.view?this.view.byteOffset:0}deref(){return Object(n.a)(this.view,"Trying to deref an unallocated pointer"),this.type.read(this.view,this._free)}set(t){this.view?this.type.write(this.view,t,this._free):this._temp=t}free(){Object(n.a)(this.view,"Cant free pointer: unallocated / already freed"),this._free(this.ref(),this.type.width),this._free=null,this.view=null}}o.pointer=function(t){const e=l(t);return{type:e,width:4,alignment:4,isPointer:!0,read(t,r){const n=t.getUint32(0,!0),i=new c(e);return i.view=new DataView(t.buffer,n,e.width),i._free=r,i},write(t,e){Object(n.a)(e instanceof c,`Trying to write ${e} as a pointer`),Object(n.a)(e.ref(),"Cant write pointer, hasnt been allocated yet"),t.setUint32(0,e.ref(),!0)}}};class u{constructor(t,e){this.type={isPointer:!0,width:null},this.view=null,this._temp=null,this._free=null,"string"==typeof t&&(this._temp=(new TextEncoder).encode(t),this.type.width=this._temp.byteLength+1),t instanceof DataView&&(this.view=t,this._free=e,this.type.width=t.byteLength)}attach(t,e){if(this.view=t,this._free=e,this._temp){const e=new Uint8Array(t.buffer);e.set(this._temp,t.byteOffset),e[t.byteOffset+this.type.width-1]=0}}ref(){return this.view?this.view.byteOffset:0}deref(){Object(n.a)(this.view,"Trying to deref an unallocated CString");const t=new Uint8Array(this.view.buffer),e=this.view.byteOffset,r=e+this.type.width-1,i=new Uint8Array(t.subarray(e,r));return(new TextDecoder).decode(i)}free(){Object(n.a)(!!this.view,"Cant free cstring: unallocated / already freed"),this._free(this.ref(),this.type.width),this._free=null,this.view=null}valueOf(){return this.deref()}toString(){return this.deref()}}o.string={width:4,alignment:4,isPointer:!0,read(t,e){const r=new Uint8Array(t.buffer),n=t.getUint32(0,!0);let i=n;for(;r[i];)++i;const s=i-n+1,a=new DataView(t.buffer,n,s);return new u(a,e)},write(t,e){Object(n.a)(e instanceof u,"value must be a `CString`"),Object(n.a)(e.ref(),"Cant write CString, hasnt been allocated yet"),t.setUint32(0,e.ref(),!0)}};class h{constructor(t,e){this.type=t,this.length=e,this.width=t.width*e,this.alignment=t.alignment}read(t,e){const r=[];for(let i=0;i<=this.length-1;i++){const s=Object(n.b)(t,i*this.type.width,this.type.width);r.push(this.type.read(s,e))}return r}write(t,e){Object(n.a)(e.length===this.length,"Values length does not match struct array length"),e.forEach((e,r)=>{const i=Object(n.b)(t,r*this.type.width,this.type.width);this.type.write(i,e)})}}const f={u8:o.uint8,u16:o.uint16,u32:o.uint32,u64:o.uint64,i8:o.int8,i16:o.int16,i32:o.int32,i64:o.int64,f32:o.float,f64:o.double,char:o.uint8,uchar:o.uint8,schar:o.int8,short:o.int16,ushort:o.uint16,int:o.int32,uint:o.uint32,long:o.int32,ulong:o.uint32,longlong:o.uint64,ulonglong:o.uint64,size_t:o.uint32,usize:o.uint32};function l(t){if("string"==typeof t)return function(t){const e=t.toLowerCase();if(e in o)return o[e];if(e in f)return f[e];throw new Error(`Parsing unknown type '${t}'`)}(t);if(Array.isArray(t)){Object(n.a)(2===t.length,"Array type needs 2 arguments: [type, length], given: \n%s",t);const e=l(t[0]),r=t[1];return new h(e,r)}const e="Given argument type isn't a proper 'type' interface: \n%s";return Object(n.a)("width"in t,e,t),Object(n.a)("alignment"in t,e,t),Object(n.a)("read"in t,e,t),Object(n.a)("write"in t,e,t),t}},function(t,e,r){"use strict";e.a=function(t,e,...r){if(t)return;if(!r||!r.length)throw new Error(e);let n,i="";try{n=r.map(t=>JSON.stringify(t,null,2))}catch(t){throw new Error(e)}throw e.split("%s").forEach(t=>{i+=t,n.length&&(i+=n.pop())}),new Error(i)},e.b=function(t,e,r){return new DataView(t.buffer,t.byteOffset+e,r)}},function(t,e,r){"use strict";e.a=function(t){const e=/(?:at (.+) \()|(?:(.+)<?@)/;return t.stack=t.stack.split("\n").map(t=>t.replace(e,(t,e,r)=>`at ${function(t=""){const e=e=>0===t.indexOf(e);let r;if(!(e=>t.slice(-1)===e)("E"))return t;if(e("ZN")?r=t.slice(2,-1):e("_ZN")?r=t.slice(3,-1):e("__ZN")&&(r=t.slice(4,-1)),!r)return t;const n=[];let s="",a="",o=0;var c;return r.split("").forEach(t=>{o?(s+=t,o--):(s&&(n.push(s),s=""),/[0-9]/.test(t)?a+=t:(o=parseInt(a,10),a="",s+=t,o--))}),s&&n.push(s),(c=n.slice(-1)[0]).length&&"h"===c[0]&&c.split("").slice(1).every(t=>/[0-9a-f]/i.test(t))&&n.pop(),n.map(i).join("::")}(e||r)} (`)).join("\n"),t};const n=[[/^_\$/,"$"],[/\$C\$/g,","],[/\$SP\$/g,"@"],[/\$BP\$/g,"*"],[/\$RF\$/g,"&"],[/\$LT\$/g,"<"],[/\$GT\$/g,">"],[/\$LP\$/g,"("],[/\$RP\$/g,")"],[/\$u7e\$/g,"~"],[/\$u20\$/g," "],[/\$u27\$/g,"'"],[/\$u5b\$/g,"["],[/\$u5d\$/g,"]"],[/\$u7b\$/g,"{"],[/\$u7d\$/g,"}"],[/\$u3b\$/g,";"],[/\$u2b\$/g,"+"],[/\$u22\$/g,'"'],[/\.\./g,"::"]];function i(t){return n.reduce((t,[e,r])=>t.replace(e,r),t)}},function(t,e,r){"use strict";var n=r(0),i=r(1);const s="undefined"!=typeof Symbol?Symbol.for("struct-data"):"__data";class a{constructor(t){this[s]={temp:{},view:null,free:null},t&&Object.entries(t).forEach(([t,e])=>{Object(i.a)(t in this,`Struct missing field '${t}'`),Object(i.a)("ref"!==t,"Field `ref` is a reserved method name"),Object(i.a)("free"!==t,"Field `free` is a reserved method name"),this[t]=e})}ref(){return this[s].view?this[s].view.byteOffset:0}free(t=!1){Object(i.a)(!!this[s].free,"Cant free struct, either: unallocated / already freed / sub-struct");const e=t=>{t.constructor.fields.forEach((r,n)=>{r.type.isPointer&&t[n].free(),r.type.isStruct&&e(t[n])})};t&&e(this),this[s].free(this.ref(),this.constructor.width),this[s].free=null,this[s].view=null}static read(t,e){const r=new this;return r[s].view=t,r[s].free=e,r}static write(t,e,r){this.fields.forEach((r,n)=>{const s=e[n];if(void 0!==s){const e=Object(i.b)(t,r.offset,r.type.width);r.type.write(e,s)}}),e[s].view=t,r&&(e[s].free=r)}}e.a=class{constructor(t={},e={}){class r extends a{}r.fields=new Map,r.packed="packed"in e&&!!e.packed,r.alignment=e.alignment||0,r.isStruct=!0;let o=0;return Object.getOwnPropertyNames(t).forEach(i=>{const s=Object(n.d)(t[i]);!e.alignment&&s.alignment>r.alignment&&(r.alignment=s.alignment),r.packed||o%s.alignment==0||(o+=s.alignment-o%s.alignment),r.fields.set(i,{name:i,offset:o,type:s}),o+=s.width}),r.width=o%r.alignment?o+r.alignment-o%r.alignment:o,r.fields.forEach((t,e)=>{Object.defineProperty(r.prototype,e,{enumerable:!0,get(){if(!this[s].view)return this[s].temp[e];const r=Object(i.b)(this[s].view,t.offset,t.type.width);return t.type.read(r,this[s].free)},set(r){if("string"==typeof r&&t.type===n.e.string&&(r=new n.a(r)),!this[s].view)return void(this[s].temp[e]=r);const a=Object(i.b)(this[s].view,t.offset,t.type.width);t.type.write(a,r)}})}),r}}},function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(5),i=r(3),s=r(2),a=r(0),o=r(6);r.d(e,"Wrapper",function(){return n.a}),r.d(e,"cwrap",function(){return n.c}),r.d(e,"ccall",function(){return n.b}),r.d(e,"Struct",function(){return i.a}),r.d(e,"types",function(){return a.e}),r.d(e,"Pointer",function(){return a.c}),r.d(e,"CustomType",function(){return a.b}),r.d(e,"CString",function(){return a.a}),r.d(e,"demangle",function(){return s.a}),r.d(e,"rust",function(){return o.a}),e.default={Wrapper:n.a,cwrap:n.c,ccall:n.b,Struct:i.a,types:a.e,Pointer:a.c,CustomType:a.b,CString:a.a,demangle:s.a,rust:o.a}},function(t,e,r){"use strict";r.d(e,"a",function(){return u}),r.d(e,"c",function(){return h}),r.d(e,"b",function(){return f});var n=r(0),i=r(1),s=r(2);const a=new Set(["int8","int16","int32","int64","uint8","uint16","uint32","uint64","float","double","u8","u16","u32","u64","i8","i16","i32","i64","f32","f64","schar","short","int","long","char","uchar","ushort","uint","ulong","size_t","usize"]);function o(t){return t.every(t=>null===t||void 0===t||"void"===t||"number"===t||"boolean"===t||"bool"===t||"string"===t||"array"===t||a.has(t)||t.isStruct||t.isPointer)}const c="undefined"!=typeof Symbol?Symbol.for("wrapper-data"):"__data";class u{constructor(t,e={}){this[c]={instance:null,imports:null,signatures:new Set,allocations:new Map,memory:e.memory,debug:!!e.debug},Object.entries(t).forEach(([t,[e,r=[]]])=>{Object(i.a)("exports"!==t,"`exports` is a reserved wrapper name"),Object(i.a)("utils"!==t,"`utils` is a reserved wrapper name"),Object(i.a)("imports"!==t,"`imports` is a reserved wrapper method name"),Object(i.a)("fetch"!==t,"`fetch` is a reserved wrapper method name"),Object(i.a)("use"!==t,"`use` is a reserved wrapper method name"),Object(i.a)(r.every(t=>!!t),`'${t}' has undefined types`),Object(i.a)(o([e]),`'${t}' has invalid types`),Object(i.a)(o(r),`'${t}' has invalid types`),this[c].signatures.add({fnName:t,returnType:e,argTypes:r})}),this.utils={readString:this.__readString.bind(this),writeString:this.__writeString.bind(this),writeArray:this.__writeArray.bind(this),readStruct:this.__readStruct.bind(this),writeStruct:this.__readStruct.bind(this),readPointer:this.__readPointer.bind(this),writePointer:this.__readPointer.bind(this),allocate:function(t){Object(i.a)("ref"in t,"This method is for Pointer / Structs / CStrings"),t instanceof n.c||t instanceof n.a?this.__writePointer(t):this.__writeStruct(t)}.bind(this),free:function(t){"ref"in t?this.__free(t.ref()):this.__free(t)}.bind(this)},this.exports=null,this.__free=this.__free.bind(this)}imports(t,e=!0){const r=(...t)=>{const e=t.pop(),r=Array.isArray(t[0])?t[0]:[null,t],[n,s=[]]=r;return Object(i.a)(o(s),`Import has invalid types: ${s}`),Object(i.a)(o([n]),`Import has invalid types: ${n}`),(...t)=>{const r=e(...t.map((t,e)=>this.__out(t,s[e])));if(n&&"void"!==n)return this.__in(r,n)}},n={print:r("string",t=>console.log(t)),eprint:r("string",t=>console.error(t)),trace:r("string",t=>{throw new Error(t)}),_abort(t){throw new Error(`wasm aborting: ${t}`)},_exit(t){if(t)throw new Error(`wasm exit error: ${t}`)},_grow(){}},s="function"==typeof t?t(r):t;return e&&(s.env=Object.assign(n,s.env)),this[c].imports=s,s}fetch(t){const e=this[c].imports||this.imports({});return(r=t,n=e,fetch(r).then(t=>{if(!t.ok)throw new Error(`Got a ${t.status} fetching wasm @ ${r}`);const e=t.headers.get("content-type");return WebAssembly.instantiateStreaming&&"application/wasm"===e?WebAssembly.instantiateStreaming(t,n):t.arrayBuffer().then(t=>WebAssembly.instantiate(t,n))}).then(t=>t.instance)).then(t=>(this.__link(t),this));var r,n}use(t){return Object(i.a)(t instanceof WebAssembly.Instance,".use(instance) requires a WebAssembly.Instance"),this.__link(t),this}__link(t){const e=this[c].memory||t.exports.memory||this[c].imports.env&&this[c].imports.env.memory;Object(i.a)(!!e,"Wrapper needs access to your WebAssemmbly memory. It looks for this ineither your `imports.env.memory` or `exports.env.memory`. If you don'tuse either, you need to add it in the options with `new Wrapper`"),this.exports=t.exports,this[c].instance=t,this[c].memory=e,this[c].signatures.forEach(({fnName:t,returnType:e,argTypes:r})=>{const n=this.exports[t];Object(i.a)(!!n,`Fn '${t}' missing from wasm exports`),this[t]=this.__wrap(n,r,e)})}__wrap(t,e,r){return function(...n){const i=[],a=n.map((t,r)=>this.__in(t,e[r],i));let o;try{o=t(...a)}catch(t){throw Object(s.a)(t)}if(i.forEach(t=>this.__free(t)),r&&"void"!==r)return this.__out(o,r)}}__in(t,e,r){if(Object(i.a)(!!e,"No arg type was specified for function"),"number"===e||a.has(e))return t;if("boolean"===e||"bool"===e)return!!t;if("string"===e)return this.__writeString(t,r);if("array"===e)return this.__writeArray(t,r);if(e.isStruct)return this.__writeStruct(t);if(e.isPointer)return this.__writePointer(t);throw new Error(`Unknown type: \n${JSON.stringify(e)}`)}__out(t,e){if(Object(i.a)(!!e,"No arg type was specified for function"),"number"===e||a.has(e))return t;if("boolean"===e||"bool"===e)return!!t;if("string"===e)return this.__readString(t);if(e.isStruct)return this.__readStruct(t,e);if(e.isPointer)return this.__readPointer(t,e);throw new Error(`Unknown type: \n${JSON.stringify(e)}`)}__allocate(t){Object(i.a)(!!this.exports.allocate&&!!this.exports.deallocate,"Missing allocate/deallocate fns in wasm exports, can't allocate memory");const e=this.exports.allocate(t);return Object(i.a)(!!e,"allocate failed"),this[c].debug&&console.log("Alloc: %s (size=%s)",e,t),this[c].allocations.set(e,t),e}__free(t,e){const r=e||this[c].allocations.get(t);this[c].debug&&console.log("Free: %s (size=%s)",t,r),this.exports.deallocate(t,r),this[c].allocations.delete(t)}__view(t,e){return new DataView(this[c].memory.buffer,t,e)}__readString(t){const e=new Uint8Array(this[c].memory.buffer);let r=t;for(;e[r];)++r;const n=new Uint8Array(e.subarray(t,r));return(new TextDecoder).decode(n)}__writeString(t,e){const r=(new TextEncoder).encode(t),n=r.byteLength+1,i=this.__allocate(n);e&&e.push(i);const s=new Uint8Array(this[c].memory.buffer);return s.set(r,i),s[i+n-1]=0,i}__writeArray(t,e){Object(i.a)(t instanceof ArrayBuffer||ArrayBuffer.isView(t),"Argument must be an `ArrayBuffer` or a `DataView` (like `Uint8Array`)");const r=ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(t),n=this.__allocate(r.byteLength);return e&&e.push(n),new Uint8Array(this[c].memory.buffer).set(r,n),n}__readStruct(t,e){Object(i.a)(!!e,"No struct StructType given");const r=this.__view(t,e.width);return e.read(r,this.__free)}__writeStruct(t){if(t.ref())return t.ref();const e=t.constructor,r=this.__allocate(e.width),n=this.__view(r,e.width),i=t=>{t.constructor.fields.forEach((e,r)=>{e.type.isStruct&&t[r]&&i(t[r]),e.type.isPointer&&t[r]&&this.__writePointer(t[r])})};return i(t),e.write(n,t,this.__free),r}__readPointer(t,e){Object(i.a)(!!e,"No pointer type given");const r=this.__view(t,e.type.width);if(e.type.isStruct||e.type.isPointer)return e.read(r,this.__free);const s=new n.c(e.type);return s.attach(r,this.__free),s}__writePointer(t){if(t.ref())return t.ref();const e=this.__allocate(t.type.width),r=this.__view(e,t.type.width);return t.attach(r,this.__free),e}}function h(t,e,r=null,n=[]){Object(i.a)(t instanceof WebAssembly.Instance,".cwrap() requires a ready WebAssembly.Instance");const s=new u({[e]:[r,n]});return s.use(t),s[e].bind(s)}function f(t,e,r=null,n=[],...s){Object(i.a)(t instanceof WebAssembly.Instance,".ccall() requires a ready WebAssembly.Instance");const a=new u({[e]:[r,n]});return a.use(t),a[e].call(a,...s)}},function(t,e,r){"use strict";var n=r(3),i=r(0),s=r(1);const a="undefined"!=typeof Symbol?Symbol.for("struct-data"):"__data";function o(t){class e extends t{free(){super.free(!0)}}return Object.assign(e,t),e}function c(...t){const e={};return t.forEach((t,r)=>{e[r]=Object(i.d)(t)}),new n.a(e)}function u(t){const e=Object(i.d)(t),r=o(new n.a({ptr:i.e.pointer(e),cap:"usize",len:"usize"}));return Object.defineProperty(r.prototype,"values",{enumerable:!0,get(){const t=Object(i.d)([e,this.len]),r=this[a].view.buffer,n=new DataView(r,this.ptr.ref(),t.width);return t.read(n,this[a].free)},set(t){const r=t.length;this.ptr=new i.c([e,r],t),this.len=r,this.cap=r}}),r}function h(t){const e=Object(i.d)(t),r=o(new n.a({ptr:i.e.pointer(e),len:"usize"}));return Object.defineProperty(r.prototype,"values",{enumerable:!0,get(){const t=Object(i.d)([e,this.len]),r=this[a].view.buffer,n=new DataView(r,this.ptr.ref(),t.width);return t.read(n,this[a].free)},set(t){const r=t.length;this.ptr=new i.c([e,r],t),this.len=r}}),r}function f(t,e=!1,r){const s=Object(i.d)(t);let a;a=r?i.e[`uint${8*r}`]:1===s.alignment?"uint8":2===s.alignment?"uint16":"uint32";const o=e?{value:s}:{discriminant:a,value:s},c=new n.a(o);return Object.assign(c.prototype,{isSome(){return"discriminant"in o?!!this.discriminant:!!this.value},isNone(){return!this.isSome()},expect(t){if(!this.isSome())throw new Error(t);return this.value},unwrap(){if(!this.isSome())throw new Error("Error unwrapping none");return this.value},unwrapOr(t){return this.isSome()?this.value:t},unwrapOrElse(t){return this.isSome()?this.value:t()}}),c}const l={tuple:c,Tuple:(t,e)=>new(c(...t))([...e]),vector:u,Vector:(t,e)=>new(u(t))({values:e}),slice:h,Slice:(t,e)=>new(h(t))({values:e}),string:function(){const t=o(new n.a({ptr:i.e.pointer("u8"),cap:"usize",len:"usize"}));return Object.defineProperty(t.prototype,"value",{enumerable:!0,get(){const t=this[a].view.buffer,e=new DataView(t,this.ptr.ref(),this.len);return(new TextDecoder).decode(e)},set(t){const e=(new TextEncoder).encode(t),r=e.length;this.ptr=new i.c(["u8",r],e),this.len=r,this.cap=r}}),t.prototype.toString=function(){return this.value},t}(),String:t=>new l.string({value:t}),str:function(){const t=o(new n.a({ptr:i.e.pointer("u8"),len:"usize"}));return Object.defineProperty(t.prototype,"value",{enumerable:!0,get(){const t=this[a].view.buffer,e=new DataView(t,this.ptr.ref(),this.len);return(new TextDecoder).decode(e)},set(t){const e=(new TextEncoder).encode(t),r=e.length;this.ptr=new i.c(["u8",r],e),this.len=r}}),t.prototype.toString=function(){return this.value},t}(),Str:t=>new l.str({value:t}),option:f,Option:(t,e,...r)=>new(f(t,...r))({value:e,discriminant:void 0===e?0:1}),Some:(...t)=>l.Option(...t),None:(t,...e)=>l.Option(t,void 0,...e),enum:function(t,e=4){const r=Object.getOwnPropertyNames(t),o=r.map(e=>Object(i.d)(t[e])),c=i.e[`uint${8*e}`],u=new n.a({discriminant:c});class h extends u{constructor(t){super(),t&&this._set(t)}_set(t){Object(s.a)(1===Object.keys(t).length,"Enum value must be a variant");const[e,n]=Object.entries(t)[0];this.discriminant=r.indexOf(e),this.value=n}tag(){const t=this.discriminant;return Object(s.a)(t<=r.length,"Enum discriminant > than # of variants"),t}free(t=!1){const e=o[this.tag()];(t&&e.isPointer||e.isStruct)&&this.value.free(t),this[a].free(this.ref(),h.width),this[a].free=null,this[a].view=null}name(){return r[this.tag()]}is(t){return r.indexOf(t)===this.tag()}match(t){const e=r[this.tag()],n=this.value;return e in t?"function"==typeof t[e]?t[e](n):t[e]:"_"in t?"function"==typeof t._?t._(n):t._:void 0}static write(t,e,r){const n=e.tag(),i=o[n],u=e.ref()?e.value:e[a].temp.value,h=Object(s.b)(t,0,c.width);c.write(h,n);const f=Object(s.b)(t,c.width,i.width);i.write(f,u),e[a].view=t,r&&(e[a].free=r)}}Object.defineProperty(h.prototype,"value",{enumerable:!0,get(){const t=this.ref()+c.width,e=this[a].view.buffer,r=o[this.tag()],n=new DataView(e,t,r.width);return r.read(n,this[a].free)},set(t){this[a].temp.value=t}}),Object.assign(h,u);const f=t=>t.reduce((t,e)=>e>t?e:t,0),l=c.width+f(o.map(t=>t.width)),d=f([...o.map(t=>t.alignment),c.alignment]);return h.width=l%d?l+d-l%d:l,h}};e.a=l}]);